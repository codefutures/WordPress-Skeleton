CREATE TABLE `wpag_posts` (  `ID` bigint(20) unsigned NOT NULL AUTO_INCREMENT,  `post_author` bigint(20) unsigned NOT NULL DEFAULT '0',  `post_date` datetime NOT NULL DEFAULT '0000-00-00 00:00:00',  `post_date_gmt` datetime NOT NULL DEFAULT '0000-00-00 00:00:00',  `post_content` longtext COLLATE utf8mb4_unicode_ci NOT NULL,  `post_title` text COLLATE utf8mb4_unicode_ci NOT NULL,  `post_excerpt` text COLLATE utf8mb4_unicode_ci NOT NULL,  `post_status` varchar(20) COLLATE utf8mb4_unicode_ci NOT NULL DEFAULT 'publish',  `comment_status` varchar(20) COLLATE utf8mb4_unicode_ci NOT NULL DEFAULT 'open',  `ping_status` varchar(20) COLLATE utf8mb4_unicode_ci NOT NULL DEFAULT 'open',  `post_password` varchar(20) COLLATE utf8mb4_unicode_ci NOT NULL DEFAULT '',  `post_name` varchar(200) COLLATE utf8mb4_unicode_ci NOT NULL DEFAULT '',  `to_ping` text COLLATE utf8mb4_unicode_ci NOT NULL,  `pinged` text COLLATE utf8mb4_unicode_ci NOT NULL,  `post_modified` datetime NOT NULL DEFAULT '0000-00-00 00:00:00',  `post_modified_gmt` datetime NOT NULL DEFAULT '0000-00-00 00:00:00',  `post_content_filtered` longtext COLLATE utf8mb4_unicode_ci NOT NULL,  `post_parent` bigint(20) unsigned NOT NULL DEFAULT '0',  `guid` varchar(255) COLLATE utf8mb4_unicode_ci NOT NULL DEFAULT '',  `menu_order` int(11) NOT NULL DEFAULT '0',  `post_type` varchar(20) COLLATE utf8mb4_unicode_ci NOT NULL DEFAULT 'post',  `post_mime_type` varchar(100) COLLATE utf8mb4_unicode_ci NOT NULL DEFAULT '',  `comment_count` bigint(20) NOT NULL DEFAULT '0',  PRIMARY KEY (`ID`),  KEY `type_status_date` (`post_type`,`post_status`,`post_date`,`ID`),  KEY `post_parent` (`post_parent`),  KEY `post_author` (`post_author`),  KEY `post_name` (`post_name`(191))) ENGINE=MyISAM AUTO_INCREMENT=544 DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_ci;
/*!40000 ALTER TABLE `wpag_posts` DISABLE KEYS */;
INSERT INTO `wpag_posts` VALUES('310', '5', '2015-06-02 12:50:17', '2015-06-02 18:50:17', '', 'Home', '', 'inherit', 'open', 'open', '', '38-revision-v1', '', '', '2015-06-02 12:50:17', '2015-06-02 18:50:17', '', '38', 'http://www.agildata.com/38-revision-v1/', '0', 'revision', '', '0');
INSERT INTO `wpag_posts` VALUES('309', '5', '2015-06-02 12:30:45', '2015-06-02 18:30:45', '', 'Home', '', 'inherit', 'open', 'open', '', '38-revision-v1', '', '', '2015-06-02 12:30:45', '2015-06-02 18:30:45', '', '38', 'http://www.agildata.com/38-revision-v1/', '0', 'revision', '', '0');
INSERT INTO `wpag_posts` VALUES('315', '5', '2015-06-02 14:25:59', '2015-06-02 20:25:59', '', 'Home', '', 'inherit', 'open', 'open', '', '38-revision-v1', '', '', '2015-06-02 14:25:59', '2015-06-02 20:25:59', '', '38', 'http://www.agildata.com/38-revision-v1/', '0', 'revision', '', '0');
INSERT INTO `wpag_posts` VALUES('312', '5', '2015-06-02 13:57:13', '2015-06-02 19:57:13', '', 'Home', '', 'inherit', 'open', 'open', '', '38-revision-v1', '', '', '2015-06-02 13:57:13', '2015-06-02 19:57:13', '', '38', 'http://www.agildata.com/38-revision-v1/', '0', 'revision', '', '0');
INSERT INTO `wpag_posts` VALUES('313', '5', '2015-06-02 14:09:10', '2015-06-02 20:09:10', '', 'Home', '', 'inherit', 'open', 'open', '', '38-revision-v1', '', '', '2015-06-02 14:09:10', '2015-06-02 20:09:10', '', '38', 'http://www.agildata.com/38-revision-v1/', '0', 'revision', '', '0');
INSERT INTO `wpag_posts` VALUES('314', '5', '2015-06-02 14:16:49', '2015-06-02 20:16:49', '', 'Home', '', 'inherit', 'open', 'open', '', '38-revision-v1', '', '', '2015-06-02 14:16:49', '2015-06-02 20:16:49', '', '38', 'http://www.agildata.com/38-revision-v1/', '0', 'revision', '', '0');
INSERT INTO `wpag_posts` VALUES('319', '5', '2015-06-02 14:47:04', '2015-06-02 20:47:04', '', 'Home', '', 'inherit', 'open', 'open', '', '38-revision-v1', '', '', '2015-06-02 14:47:04', '2015-06-02 20:47:04', '', '38', 'http://www.agildata.com/38-revision-v1/', '0', 'revision', '', '0');
INSERT INTO `wpag_posts` VALUES('317', '5', '2015-06-02 14:30:48', '2015-06-02 20:30:48', '', 'Home', '', 'inherit', 'open', 'open', '', '38-revision-v1', '', '', '2015-06-02 14:30:48', '2015-06-02 20:30:48', '', '38', 'http://www.agildata.com/38-revision-v1/', '0', 'revision', '', '0');
INSERT INTO `wpag_posts` VALUES('318', '5', '2015-06-02 14:44:46', '2015-06-02 20:44:46', '', 'Home', '', 'inherit', 'open', 'open', '', '38-revision-v1', '', '', '2015-06-02 14:44:46', '2015-06-02 20:44:46', '', '38', 'http://www.agildata.com/38-revision-v1/', '0', 'revision', '', '0');
INSERT INTO `wpag_posts` VALUES('321', '5', '2015-06-02 15:13:55', '2015-06-02 21:13:55', '', 'Home', '', 'inherit', 'open', 'open', '', '38-revision-v1', '', '', '2015-06-02 15:13:55', '2015-06-02 21:13:55', '', '38', 'http://www.agildata.com/38-revision-v1/', '0', 'revision', '', '0');
INSERT INTO `wpag_posts` VALUES('357', '1', '2015-06-03 14:05:48', '2015-06-03 20:05:48', '', 'Home', '', 'inherit', 'open', 'open', '', '38-revision-v1', '', '', '2015-06-03 14:05:48', '2015-06-03 20:05:48', '', '38', 'http://www.agildata.com/38-revision-v1/', '0', 'revision', '', '0');
INSERT INTO `wpag_posts` VALUES('343', '5', '2015-06-03 11:30:43', '2015-06-03 17:30:43', '', 'SQL AgildataWPcolor', '', 'inherit', 'open', 'open', '', 'sql-agildatawpcolor', '', '', '2015-06-03 11:30:43', '2015-06-03 17:30:43', '', '0', 'http://www.agildata.com/wp-content/uploads/2015/06/SQL-AgildataWPcolor.svg', '0', 'attachment', 'image/svg+xml', '0');
INSERT INTO `wpag_posts` VALUES('344', '5', '2015-06-03 11:30:45', '2015-06-03 17:30:45', '', 'STREAMING AgildataWPcolor', '', 'inherit', 'open', 'open', '', 'streaming-agildatawpcolor', '', '', '2015-06-03 11:30:45', '2015-06-03 17:30:45', '', '0', 'http://www.agildata.com/wp-content/uploads/2015/06/STREAMING-AgildataWPcolor.svg', '0', 'attachment', 'image/svg+xml', '0');
INSERT INTO `wpag_posts` VALUES('345', '5', '2015-06-03 11:45:13', '2015-06-03 17:45:13', '', 'Home', '', 'inherit', 'open', 'open', '', '38-revision-v1', '', '', '2015-06-03 11:45:13', '2015-06-03 17:45:13', '', '38', 'http://www.agildata.com/38-revision-v1/', '0', 'revision', '', '0');
INSERT INTO `wpag_posts` VALUES('350', '5', '2015-06-03 12:38:49', '2015-06-03 18:38:49', '', 'Home', '', 'inherit', 'open', 'open', '', '38-revision-v1', '', '', '2015-06-03 12:38:49', '2015-06-03 18:38:49', '', '38', 'http://www.agildata.com/38-revision-v1/', '0', 'revision', '', '0');
INSERT INTO `wpag_posts` VALUES('349', '5', '2015-06-03 12:36:53', '2015-06-03 18:36:53', '', 'Home', '', 'inherit', 'open', 'open', '', '38-revision-v1', '', '', '2015-06-03 12:36:53', '2015-06-03 18:36:53', '', '38', 'http://www.agildata.com/38-revision-v1/', '0', 'revision', '', '0');
INSERT INTO `wpag_posts` VALUES('352', '5', '2015-06-03 12:56:49', '2015-06-03 18:56:49', '', 'Home', '', 'inherit', 'open', 'open', '', '38-revision-v1', '', '', '2015-06-03 12:56:49', '2015-06-03 18:56:49', '', '38', 'http://www.agildata.com/38-revision-v1/', '0', 'revision', '', '0');
INSERT INTO `wpag_posts` VALUES('371', '5', '2015-06-04 15:09:30', '2015-06-04 21:09:30', '', 'Dan Lynn CodeFutures2 Low Res', '', 'inherit', 'open', 'open', '', 'dan-lynn-codefutures2-low-res', '', '', '2015-06-04 15:09:30', '2015-06-04 21:09:30', '', '358', 'http://www.agildata.com/wp-content/uploads/2015/06/Dan-Lynn-CodeFutures2-Low-Res.jpg', '0', 'attachment', 'image/jpeg', '0');
INSERT INTO `wpag_posts` VALUES('354', '5', '2015-06-03 13:00:09', '2015-06-03 19:00:09', 'Lorem ipsum dolor sit amet, consectetur adipiscing elit. Quisque consectetur eros id ligula fermentum, eget dignissim lorem eleifend? Donec a pretium magna, at mattis leo! Aenean viverra, orci eu gravida aliquet, ipsum lectus lobortis tortor, in rutrum dui lacus id tortor. Nam pharetra neque ac lacus sagittis vestibulum. Cum sociis natoque penatibus et magnis dis parturient montes, nascetur ridiculus mus. Aenean dapibus sit amet dui eu bibendum. Sed metus dolor, luctus eu eros quis, maximus rhoncus dui. Fusce a vulputate risus. Morbi eu enim gravida, congue nisl vel, malesuada risus. Cum sociis natoque penatibus et magnis dis parturient montes, nascetur ridiculus mus. Aenean vitae malesuada arcu. Ut molestie lacus nibh, vitae pellentesque arcu pretium ut. Etiam dolor ipsum, tempor nec porttitor sit amet; tincidunt in quam. Ut et molestie orci.\r\n\r\nDonec pretium ipsum lorem, at laoreet nisi convallis vel. Integer ullamcorper nec nisi sed interdum. Aliquam quis euismod quam. Sed nec purus sed dui aliquet viverra! Morbi urna odio, bibendum non nisi tempus, sollicitudin sollicitudin dolor. Aliquam sit amet neque dolor. Suspendisse sed mauris bibendum, sagittis urna sed, tincidunt nisl? Nam in semper lacus. Donec nibh quam, iaculis sed suscipit nec, blandit a quam.\r\n\r\nNullam eleifend odio ligula, nec sagittis ipsum maximus a. Integer efficitur nibh id condimentum consectetur. Maecenas libero leo, tincidunt in risus et, mattis rutrum erat! Duis molestie elit massa, ac posuere turpis rhoncus at. Morbi eget tellus id quam egestas semper a a sem. Quisque convallis pellentesque consectetur. Praesent at quam rhoncus, auctor tellus vitae; posuere lectus.', 'Why Use It', '', 'inherit', 'open', 'open', '', '91-autosave-v1', '', '', '2015-06-03 13:00:09', '2015-06-03 19:00:09', '', '91', 'http://www.agildata.com/91-autosave-v1/', '0', 'revision', '', '0');
INSERT INTO `wpag_posts` VALUES('356', '5', '2015-06-03 13:53:06', '2015-06-03 19:53:06', ' ', '', '', 'publish', 'open', 'closed', '', '356', '', '', '2015-12-05 20:53:04', '2015-12-06 03:53:04', '', '0', 'http://www.agildata.com/?p=356', '5', 'nav_menu_item', '', '0');
INSERT INTO `wpag_posts` VALUES('33', '1', '2013-11-27 11:00:12', '2013-11-27 18:00:12', '', 'CloudStrap', '', 'inherit', 'open', 'open', '', 'cloudstrap', '', '', '2013-11-27 11:00:12', '2013-11-27 18:00:12', '', '0', 'http://bootstrap.cloudburstdesign.com/wp-content/uploads/2013/11/CloudStrap.png', '0', 'attachment', 'image/png', '0');
INSERT INTO `wpag_posts` VALUES('32', '1', '2013-11-27 10:56:14', '2013-11-27 17:56:14', '', 'abstract-bg', '', 'inherit', 'open', 'open', '', 'abstract-bg', '', '', '2013-11-27 10:56:14', '2013-11-27 17:56:14', '', '0', 'http://bootstrap.cloudburstdesign.com/wp-content/uploads/2013/11/abstract-bg.jpg', '0', 'attachment', 'image/jpeg', '0');
INSERT INTO `wpag_posts` VALUES('364', '5', '2015-06-04 13:49:56', '2015-06-04 19:49:56', 'Thank you for your request. You should receive an email within the next 5 minutes to the email address you used when submitted this form. If you do not receive it, please check your SPAM folder, or contact us at info@agildata.com to request it to be re-sent. Also, please add us to your address book to increase the success of our emails arriving to you.', 'Thank You', '', 'inherit', 'open', 'open', '', '363-revision-v1', '', '', '2015-06-04 13:49:56', '2015-06-04 19:49:56', '', '363', 'http://www.agildata.com/363-revision-v1/', '0', 'revision', '', '0');
INSERT INTO `wpag_posts` VALUES('38', '1', '2014-07-23 12:21:46', '2014-07-23 18:21:46', '', 'Real-Time Streaming Database', '', 'publish', 'open', 'closed', '', 'main', '', '', '2015-12-05 21:02:29', '2015-12-06 04:02:29', '', '0', 'http://bootstrap.cloudburstdesign.com/?page_id=38', '0', 'page', '', '0');
INSERT INTO `wpag_posts` VALUES('109', '4', '2015-04-28 21:16:11', '2015-04-29 03:16:11', '', 'Home', '', 'inherit', 'open', 'open', '', '38-revision-v1', '', '', '2015-04-28 21:16:11', '2015-04-29 03:16:11', '', '38', 'http://www.agildata.com/38-revision-v1/', '0', 'revision', '', '0');
INSERT INTO `wpag_posts` VALUES('71', '4', '2014-07-29 11:10:14', '2014-07-29 17:10:14', '', 'Home Page', '', 'inherit', 'open', 'open', '', '38-revision-v1', '', '', '2014-07-29 11:10:14', '2014-07-29 17:10:14', '', '38', 'http://bootstrap.cloudburstdesign.com/38-revision-v1/', '0', 'revision', '', '0');
INSERT INTO `wpag_posts` VALUES('39', '4', '2014-07-23 12:21:46', '2014-07-23 18:21:46', '', 'Main', '', 'inherit', 'open', 'open', '', '38-revision-v1', '', '', '2014-07-23 12:21:46', '2014-07-23 18:21:46', '', '38', 'http://bootstrap.cloudburstdesign.com/38-revision-v1/', '0', 'revision', '', '0');
INSERT INTO `wpag_posts` VALUES('40', '4', '2014-07-23 12:24:47', '2014-07-23 18:24:47', '	<div class=\"row\">\r\n        <div class=\"col-md-6\">\r\n            <h2>Heading</h2>\r\n            <p>Donec id elit non mi porta gravida at eget metus. Fusce dapibus, tellus ac cursus commodo, tortor mauris condimentum nibh, ut fermentum massa justo sit amet risus. Etiam porta sem malesuada magna mollis euismod. Donec sed odio dui. </p>\r\n            <p><a class=\"btn btn-default\" href=\"#\" role=\"button\">View details &raquo;</a></p>\r\n        </div>\r\n        <div class=\"col-md-6\">\r\n            <h2>Heading</h2>\r\n            <p>Donec id elit non mi porta gravida at eget metus. Fusce dapibus, tellus ac cursus commodo, tortor mauris condimentum nibh, ut fermentum massa justo sit amet risus. Etiam porta sem malesuada magna mollis euismod. Donec sed odio dui. </p>\r\n            <p><a class=\"btn btn-default\" href=\"#\" role=\"button\">View details &raquo;</a></p>\r\n        </div>\r\n	</div>', 'Main Page', '', 'inherit', 'open', 'open', '', '38-revision-v1', '', '', '2014-07-23 12:24:47', '2014-07-23 18:24:47', '', '38', 'http://bootstrap.cloudburstdesign.com/38-revision-v1/', '0', 'revision', '', '0');
INSERT INTO `wpag_posts` VALUES('41', '4', '2014-07-23 12:38:25', '2014-07-23 18:38:25', '	<div class=\"row\">\r\n        <div class=\"col-md-6\">\r\n            <h2>Heading</h2>\r\n            <p>Donec id elit non mi porta gravida at eget metus. Fusce dapibus, tellus ac cursus commodo, tortor mauris condimentum nibh, ut fermentum massa justo sit amet risus. Etiam porta sem malesuada magna mollis euismod. Donec sed odio dui. </p>\r\n            <p><a class=\"btn btn-default\" href=\"#\" role=\"button\">View details &raquo;</a></p>\r\n        </div>\r\n        <div class=\"col-md-6\">\r\n            <h2>Heading</h2>\r\n            <p>Donec id elit non mi porta gravida at eget metus. Fusce dapibus, tellus ac cursus commodo, tortor mauris condimentum nibh, ut fermentum massa justo sit amet risus. Etiam porta sem malesuada magna mollis euismod. Donec sed odio dui. </p>\r\n            <p><a class=\"btn btn-default\" href=\"#\" role=\"button\">View details &raquo;</a></p>\r\n        </div>\r\n	</div>', 'Home Page', '', 'inherit', 'open', 'open', '', '38-revision-v1', '', '', '2014-07-23 12:38:25', '2014-07-23 18:38:25', '', '38', 'http://bootstrap.cloudburstdesign.com/38-revision-v1/', '0', 'revision', '', '0');
INSERT INTO `wpag_posts` VALUES('45', '4', '2014-07-23 16:51:22', '2014-07-23 22:51:22', 'a:6:{s:8:\"location\";a:1:{i:0;a:1:{i:0;a:3:{s:5:\"param\";s:13:\"page_template\";s:8:\"operator\";s:2:\"==\";s:5:\"value\";s:26:\"template-photo-gallery.php\";}}}s:8:\"position\";s:6:\"normal\";s:5:\"style\";s:7:\"default\";s:15:\"label_placement\";s:3:\"top\";s:21:\"instruction_placement\";s:5:\"label\";s:14:\"hide_on_screen\";s:0:\"\";}', 'Photo Gallery', 'photo-gallery', 'publish', 'closed', 'closed', '', 'group_53d03c2829c9a', '', '', '2014-07-23 16:51:22', '2014-07-23 22:51:22', '', '0', 'http://bootstrap.cloudburstdesign.com/?post_type=acf-field-group&#038;p=45', '0', 'acf-field-group', '', '0');
INSERT INTO `wpag_posts` VALUES('46', '4', '2014-07-23 16:51:22', '2014-07-23 22:51:22', 'a:8:{s:4:\"type\";s:7:\"gallery\";s:12:\"instructions\";s:0:\"\";s:8:\"required\";i:0;s:17:\"conditional_logic\";i:0;s:3:\"min\";s:0:\"\";s:3:\"max\";s:0:\"\";s:12:\"preview_size\";s:9:\"thumbnail\";s:7:\"library\";s:3:\"all\";}', 'Photo Gallery', 'photo_gallery', 'publish', 'open', 'open', '', 'field_53d03c511ff86', '', '', '2014-07-23 16:51:22', '2014-07-23 22:51:22', '', '45', 'http://bootstrap.cloudburstdesign.com/?post_type=acf-field&p=46', '0', 'acf-field', '', '0');
INSERT INTO `wpag_posts` VALUES('363', '5', '2015-06-04 13:51:47', '2015-06-04 19:51:47', 'Thank you for your request. You should receive an email within the next 5 minutes to the email address you used when submitting your form. If you do not receive it, please check your SPAM folder, or contact us at <a href=\"mailto:info@agildata.com\">info@agildata.com</a> to request it to be re-sent. Also, please add us to your address book to increase the success of our emails arriving to you.\r\n\r\n<a href=\"http://www.agildata.com/\">Return to the AgilData website now</a>', 'Thank You', '', 'publish', 'open', 'open', '', 'thank-you', '', '', '2015-06-04 14:09:11', '2015-06-04 20:09:11', '', '0', 'http://www.agildata.com/?page_id=363', '0', 'page', '', '0');
INSERT INTO `wpag_posts` VALUES('51', '4', '2014-07-24 15:40:00', '2014-07-24 21:40:00', 'a:6:{s:8:\"location\";a:1:{i:0;a:1:{i:0;a:3:{s:5:\"param\";s:13:\"page_template\";s:8:\"operator\";s:2:\"==\";s:5:\"value\";s:17:\"template-grid.php\";}}}s:8:\"position\";s:6:\"normal\";s:5:\"style\";s:8:\"seamless\";s:15:\"label_placement\";s:3:\"top\";s:21:\"instruction_placement\";s:5:\"label\";s:14:\"hide_on_screen\";a:12:{i:0;s:11:\"the_content\";i:1;s:7:\"excerpt\";i:2;s:13:\"custom_fields\";i:3;s:10:\"discussion\";i:4;s:8:\"comments\";i:5;s:9:\"revisions\";i:6;s:4:\"slug\";i:7;s:6:\"author\";i:8;s:6:\"format\";i:9;s:10:\"categories\";i:10;s:4:\"tags\";i:11;s:15:\"send-trackbacks\";}}', 'Page Layout', 'page-layout', 'publish', 'closed', 'closed', '', 'group_53d17ab1b2184', '', '', '2014-07-29 13:06:12', '2014-07-29 19:06:12', '', '0', 'http://bootstrap.cloudburstdesign.com/?post_type=acf-field-group&#038;p=51', '0', 'acf-field-group', '', '0');
INSERT INTO `wpag_posts` VALUES('52', '4', '2014-07-24 15:40:00', '2014-07-24 21:40:00', 'a:8:{s:4:\"type\";s:16:\"flexible_content\";s:12:\"instructions\";s:0:\"\";s:8:\"required\";i:0;s:17:\"conditional_logic\";i:0;s:12:\"button_label\";s:7:\"Add Row\";s:3:\"min\";s:0:\"\";s:3:\"max\";s:0:\"\";s:7:\"layouts\";a:6:{i:0;a:6:{s:3:\"key\";s:13:\"53d17acd4179b\";s:5:\"label\";s:10:\"1 - Column\";s:4:\"name\";s:8:\"1-column\";s:7:\"display\";s:5:\"table\";s:3:\"min\";s:0:\"\";s:3:\"max\";s:0:\"\";}i:1;a:6:{s:3:\"key\";s:13:\"53d17bf818de5\";s:5:\"label\";s:17:\"2 - Columns (4x8)\";s:4:\"name\";s:3:\"4-8\";s:7:\"display\";s:5:\"table\";s:3:\"min\";s:0:\"\";s:3:\"max\";s:0:\"\";}i:2;a:6:{s:3:\"key\";s:13:\"53d17c4f18de8\";s:5:\"label\";s:17:\"2 - Columns (6x6)\";s:4:\"name\";s:3:\"6-6\";s:7:\"display\";s:5:\"table\";s:3:\"min\";s:0:\"\";s:3:\"max\";s:0:\"\";}i:3;a:6:{s:3:\"key\";s:13:\"53d17c7b18deb\";s:5:\"label\";s:17:\"2 - Columns (8x4)\";s:4:\"name\";s:3:\"8-4\";s:7:\"display\";s:5:\"table\";s:3:\"min\";s:0:\"\";s:3:\"max\";s:0:\"\";}i:4;a:6:{s:3:\"key\";s:13:\"53d17c8f18dee\";s:5:\"label\";s:19:\"3 - Columns (4x4x4)\";s:4:\"name\";s:5:\"4-4-4\";s:7:\"display\";s:5:\"table\";s:3:\"min\";s:0:\"\";s:3:\"max\";s:0:\"\";}i:5;a:6:{s:3:\"key\";s:13:\"53d17e847fa0f\";s:5:\"label\";s:21:\"4 - Columns (3x3x3x3)\";s:4:\"name\";s:7:\"3-3-3-3\";s:7:\"display\";s:5:\"table\";s:3:\"min\";s:0:\"\";s:3:\"max\";s:0:\"\";}}}', 'Page Layout', 'page_layout', 'publish', 'open', 'open', '', 'field_53d17ac118de1', '', '', '2014-07-24 15:46:51', '2014-07-24 21:46:51', '', '51', 'http://bootstrap.cloudburstdesign.com/?post_type=acf-field&#038;p=52', '0', 'acf-field', '', '0');
INSERT INTO `wpag_posts` VALUES('53', '4', '2014-07-24 15:40:00', '2014-07-24 21:40:00', 'a:9:{s:4:\"type\";s:7:\"wysiwyg\";s:12:\"instructions\";s:0:\"\";s:8:\"required\";i:0;s:17:\"conditional_logic\";i:0;s:13:\"parent_layout\";s:13:\"53d17acd4179b\";s:12:\"column_width\";s:0:\"\";s:13:\"default_value\";s:0:\"\";s:7:\"toolbar\";s:4:\"full\";s:12:\"media_upload\";i:1;}', 'Column', 'column', 'publish', 'open', 'open', '', 'field_53d17ae818de2', '', '', '2014-07-24 15:40:00', '2014-07-24 21:40:00', '', '52', 'http://bootstrap.cloudburstdesign.com/?post_type=acf-field&p=53', '0', 'acf-field', '', '0');
INSERT INTO `wpag_posts` VALUES('54', '4', '2014-07-24 15:40:00', '2014-07-24 21:40:00', 'a:9:{s:4:\"type\";s:7:\"wysiwyg\";s:12:\"instructions\";s:0:\"\";s:8:\"required\";i:0;s:17:\"conditional_logic\";i:0;s:13:\"parent_layout\";s:13:\"53d17bf818de5\";s:12:\"column_width\";i:50;s:13:\"default_value\";s:0:\"\";s:7:\"toolbar\";s:4:\"full\";s:12:\"media_upload\";i:1;}', 'Column - Left', 'column-left', 'publish', 'open', 'open', '', 'field_53d17bf818de6', '', '', '2014-07-24 15:40:00', '2014-07-24 21:40:00', '', '52', 'http://bootstrap.cloudburstdesign.com/?post_type=acf-field&p=54', '0', 'acf-field', '', '0');
INSERT INTO `wpag_posts` VALUES('55', '4', '2014-07-24 15:40:00', '2014-07-24 21:40:00', 'a:9:{s:4:\"type\";s:7:\"wysiwyg\";s:12:\"instructions\";s:0:\"\";s:8:\"required\";i:0;s:17:\"conditional_logic\";i:0;s:13:\"parent_layout\";s:13:\"53d17bf818de5\";s:12:\"column_width\";i:50;s:13:\"default_value\";s:0:\"\";s:7:\"toolbar\";s:4:\"full\";s:12:\"media_upload\";i:1;}', 'Column - Right', 'column-right', 'publish', 'open', 'open', '', 'field_53d17c2c18de7', '', '', '2014-07-24 15:40:00', '2014-07-24 21:40:00', '', '52', 'http://bootstrap.cloudburstdesign.com/?post_type=acf-field&p=55', '1', 'acf-field', '', '0');
INSERT INTO `wpag_posts` VALUES('56', '4', '2014-07-24 15:40:00', '2014-07-24 21:40:00', 'a:9:{s:4:\"type\";s:7:\"wysiwyg\";s:12:\"instructions\";s:0:\"\";s:8:\"required\";i:0;s:17:\"conditional_logic\";i:0;s:13:\"parent_layout\";s:13:\"53d17c4f18de8\";s:12:\"column_width\";i:50;s:13:\"default_value\";s:0:\"\";s:7:\"toolbar\";s:4:\"full\";s:12:\"media_upload\";i:1;}', 'Column - Left', 'column-left', 'publish', 'open', 'open', '', 'field_53d17c4f18de9', '', '', '2014-07-24 15:40:00', '2014-07-24 21:40:00', '', '52', 'http://bootstrap.cloudburstdesign.com/?post_type=acf-field&p=56', '0', 'acf-field', '', '0');
INSERT INTO `wpag_posts` VALUES('57', '4', '2014-07-24 15:40:00', '2014-07-24 21:40:00', 'a:9:{s:4:\"type\";s:7:\"wysiwyg\";s:12:\"instructions\";s:0:\"\";s:8:\"required\";i:0;s:17:\"conditional_logic\";i:0;s:13:\"parent_layout\";s:13:\"53d17c4f18de8\";s:12:\"column_width\";i:50;s:13:\"default_value\";s:0:\"\";s:7:\"toolbar\";s:4:\"full\";s:12:\"media_upload\";i:1;}', 'Column - Right', 'column-right', 'publish', 'open', 'open', '', 'field_53d17c4f18dea', '', '', '2014-07-24 15:40:00', '2014-07-24 21:40:00', '', '52', 'http://bootstrap.cloudburstdesign.com/?post_type=acf-field&p=57', '1', 'acf-field', '', '0');
INSERT INTO `wpag_posts` VALUES('58', '4', '2014-07-24 15:40:00', '2014-07-24 21:40:00', 'a:9:{s:4:\"type\";s:7:\"wysiwyg\";s:12:\"instructions\";s:0:\"\";s:8:\"required\";i:0;s:17:\"conditional_logic\";i:0;s:13:\"parent_layout\";s:13:\"53d17c7b18deb\";s:12:\"column_width\";i:50;s:13:\"default_value\";s:0:\"\";s:7:\"toolbar\";s:4:\"full\";s:12:\"media_upload\";i:1;}', 'Column - Left', 'column-left', 'publish', 'open', 'open', '', 'field_53d17c7b18dec', '', '', '2014-07-24 15:40:00', '2014-07-24 21:40:00', '', '52', 'http://bootstrap.cloudburstdesign.com/?post_type=acf-field&p=58', '0', 'acf-field', '', '0');
INSERT INTO `wpag_posts` VALUES('59', '4', '2014-07-24 15:40:00', '2014-07-24 21:40:00', 'a:9:{s:4:\"type\";s:7:\"wysiwyg\";s:12:\"instructions\";s:0:\"\";s:8:\"required\";i:0;s:17:\"conditional_logic\";i:0;s:13:\"parent_layout\";s:13:\"53d17c7b18deb\";s:12:\"column_width\";i:50;s:13:\"default_value\";s:0:\"\";s:7:\"toolbar\";s:4:\"full\";s:12:\"media_upload\";i:1;}', 'Column - Right', 'column-right', 'publish', 'open', 'open', '', 'field_53d17c7b18ded', '', '', '2014-07-24 15:40:00', '2014-07-24 21:40:00', '', '52', 'http://bootstrap.cloudburstdesign.com/?post_type=acf-field&p=59', '1', 'acf-field', '', '0');
INSERT INTO `wpag_posts` VALUES('60', '4', '2014-07-24 15:40:00', '2014-07-24 21:40:00', 'a:9:{s:4:\"type\";s:7:\"wysiwyg\";s:12:\"instructions\";s:0:\"\";s:8:\"required\";i:0;s:17:\"conditional_logic\";i:0;s:13:\"parent_layout\";s:13:\"53d17c8f18dee\";s:12:\"column_width\";s:0:\"\";s:13:\"default_value\";s:0:\"\";s:7:\"toolbar\";s:4:\"full\";s:12:\"media_upload\";i:1;}', 'Column - Left', 'column-left', 'publish', 'open', 'open', '', 'field_53d17c8f18def', '', '', '2014-07-24 15:40:00', '2014-07-24 21:40:00', '', '52', 'http://bootstrap.cloudburstdesign.com/?post_type=acf-field&p=60', '0', 'acf-field', '', '0');
INSERT INTO `wpag_posts` VALUES('61', '4', '2014-07-24 15:40:00', '2014-07-24 21:40:00', 'a:9:{s:4:\"type\";s:7:\"wysiwyg\";s:12:\"instructions\";s:0:\"\";s:8:\"required\";i:0;s:17:\"conditional_logic\";i:0;s:13:\"parent_layout\";s:13:\"53d17c8f18dee\";s:12:\"column_width\";s:0:\"\";s:13:\"default_value\";s:0:\"\";s:7:\"toolbar\";s:4:\"full\";s:12:\"media_upload\";i:1;}', 'Column - Center', 'column-center', 'publish', 'open', 'open', '', 'field_53d17ce418df2', '', '', '2014-07-24 15:40:00', '2014-07-24 21:40:00', '', '52', 'http://bootstrap.cloudburstdesign.com/?post_type=acf-field&p=61', '1', 'acf-field', '', '0');
INSERT INTO `wpag_posts` VALUES('62', '4', '2014-07-24 15:40:00', '2014-07-24 21:40:00', 'a:9:{s:4:\"type\";s:7:\"wysiwyg\";s:12:\"instructions\";s:0:\"\";s:8:\"required\";i:0;s:17:\"conditional_logic\";i:0;s:13:\"parent_layout\";s:13:\"53d17c8f18dee\";s:12:\"column_width\";s:0:\"\";s:13:\"default_value\";s:0:\"\";s:7:\"toolbar\";s:4:\"full\";s:12:\"media_upload\";i:1;}', 'Column - Right', 'column-right', 'publish', 'open', 'open', '', 'field_53d17c8f18df0', '', '', '2014-07-24 15:40:00', '2014-07-24 21:40:00', '', '52', 'http://bootstrap.cloudburstdesign.com/?post_type=acf-field&p=62', '2', 'acf-field', '', '0');
INSERT INTO `wpag_posts` VALUES('65', '4', '2014-07-24 15:46:51', '2014-07-24 21:46:51', 'a:9:{s:4:\"type\";s:7:\"wysiwyg\";s:12:\"instructions\";s:0:\"\";s:8:\"required\";i:0;s:17:\"conditional_logic\";i:0;s:13:\"parent_layout\";s:13:\"53d17e847fa0f\";s:12:\"column_width\";s:0:\"\";s:13:\"default_value\";s:0:\"\";s:7:\"toolbar\";s:4:\"full\";s:12:\"media_upload\";i:1;}', 'Column - 1', 'column-1', 'publish', 'open', 'open', '', 'field_53d17e847fa10', '', '', '2014-07-24 15:46:51', '2014-07-24 21:46:51', '', '52', 'http://bootstrap.cloudburstdesign.com/?post_type=acf-field&p=65', '0', 'acf-field', '', '0');
INSERT INTO `wpag_posts` VALUES('66', '4', '2014-07-24 15:46:51', '2014-07-24 21:46:51', 'a:9:{s:4:\"type\";s:7:\"wysiwyg\";s:12:\"instructions\";s:0:\"\";s:8:\"required\";i:0;s:17:\"conditional_logic\";i:0;s:13:\"parent_layout\";s:13:\"53d17e847fa0f\";s:12:\"column_width\";s:0:\"\";s:13:\"default_value\";s:0:\"\";s:7:\"toolbar\";s:4:\"full\";s:12:\"media_upload\";i:1;}', 'Column - 2', 'column-2', 'publish', 'open', 'open', '', 'field_53d17e847fa11', '', '', '2014-07-24 15:46:51', '2014-07-24 21:46:51', '', '52', 'http://bootstrap.cloudburstdesign.com/?post_type=acf-field&p=66', '1', 'acf-field', '', '0');
INSERT INTO `wpag_posts` VALUES('67', '4', '2014-07-24 15:46:51', '2014-07-24 21:46:51', 'a:9:{s:4:\"type\";s:7:\"wysiwyg\";s:12:\"instructions\";s:0:\"\";s:8:\"required\";i:0;s:17:\"conditional_logic\";i:0;s:13:\"parent_layout\";s:13:\"53d17e847fa0f\";s:12:\"column_width\";s:0:\"\";s:13:\"default_value\";s:0:\"\";s:7:\"toolbar\";s:4:\"full\";s:12:\"media_upload\";i:1;}', 'Column - 3', 'column-3', 'publish', 'open', 'open', '', 'field_53d17e847fa12', '', '', '2014-07-24 15:46:51', '2014-07-24 21:46:51', '', '52', 'http://bootstrap.cloudburstdesign.com/?post_type=acf-field&p=67', '2', 'acf-field', '', '0');
INSERT INTO `wpag_posts` VALUES('68', '4', '2014-07-24 15:46:51', '2014-07-24 21:46:51', 'a:9:{s:4:\"type\";s:7:\"wysiwyg\";s:12:\"instructions\";s:0:\"\";s:8:\"required\";i:0;s:17:\"conditional_logic\";i:0;s:13:\"parent_layout\";s:13:\"53d17e847fa0f\";s:12:\"column_width\";s:0:\"\";s:13:\"default_value\";s:0:\"\";s:7:\"toolbar\";s:4:\"full\";s:12:\"media_upload\";i:1;}', 'Column - 4', 'column-4', 'publish', 'open', 'open', '', 'field_53d17e9a7fa13', '', '', '2014-07-24 15:46:51', '2014-07-24 21:46:51', '', '52', 'http://bootstrap.cloudburstdesign.com/?post_type=acf-field&p=68', '3', 'acf-field', '', '0');
INSERT INTO `wpag_posts` VALUES('374', '5', '2015-06-04 15:14:32', '2015-06-04 21:14:32', 'AgilData, formerly CodeFutures, a provider of Agile Big Data technologies, announced Dan Lynn as CEO. Lynn assumes the role from Founder Cory Isaacson, who has joined RMS and will now serve as chairman of AgilData. Lynn brings more than 14 years of advanced technology and business success experience, and will help AgilData Code build on its industry leadership advancing Agile Big Data initiatives. His technical and product expertise will be invaluable to achieving the AgilData platform goals of simplifying streaming fast data at scale using SQL helping companies be more competitive by getting more value from their ever growing volumes of mission-critical data.\r\n\r\nIsaacson states, “Dan Lynn has the experience and passion to lead AgilData into the next chapter of its growth, and to help organizations simplify the increasingly complex set of challenges that bog Big Data initiatives down. Dan’s mix of business experience and deep technology leadership is a perfect fit for AgilData as it delivers new innovation to the Big Data market space.”\r\n\r\n“The opportunity to join AgilData is very exciting as we work to radically change the way organizations stream, organize, and gain value from Big Data,” said Lynn. “Today’s large IT departments are quickly adopting Agile-based approaches that are iterative and meet the real-time needs of the organization. Our mission is to bring the same agility to data retrieval through new approaches that are streamlined to empower developers to more quickly achieve the goals of the business.”\r\n\r\nAgilData is a leading supplier of database performance tools.  Its Big Data platform AgilData is designed to remove the complexity and limitations of current data management approaches. AgilData provides high-performance stream processing that supports the real-time, data-driven enterprise enabling organizations to quickly and efficiently gather meaningful insights from fast data. AgilData’s vision is to enable an agile approach to Big Data processing and data modeling – transforming static database repositories into a flexible data infrastructure and disrupting traditional industry practices with its forward-thinking approaches to database architecture.', 'AgilData, Formerly Codefutures, Named Dan Lynn CEO to Advance Streaming Big Data Strategies', '', 'inherit', 'open', 'open', '', '358-revision-v1', '', '', '2015-06-04 15:14:32', '2015-06-04 21:14:32', '', '358', 'http://www.agildata.com/358-revision-v1/', '0', 'revision', '', '0');
INSERT INTO `wpag_posts` VALUES('73', '4', '2014-07-29 14:20:51', '2014-07-29 20:20:51', '<div class=\"row\">\r\n<div class=\"col-sm-6 col-md-6\">\r\n<h2>Heading</h2>\r\nDonec id elit non mi porta gravida at eget metus. Fusce dapibus, tellus ac cursus commodo, tortor mauris condimentum nibh, ut fermentum massa justo sit amet risus. Etiam porta sem malesuada magna mollis euismod. Donec sed odio dui.\r\n\r\n<a class=\"btn btn-default\" href=\"#\">View details »</a>\r\n\r\n</div>\r\n<div class=\"col-sm-6 col-md-6\">\r\n<h2>Heading</h2>\r\nDonec id elit non mi porta gravida at eget metus. Fusce dapibus, tellus ac cursus commodo, tortor mauris condimentum nibh, ut fermentum massa justo sit amet risus. Etiam porta sem malesuada magna mollis euismod. Donec sed odio dui.\r\n\r\n<a class=\"btn btn-default\" href=\"#\">View details »</a>\r\n\r\n</div>\r\n</div>', 'Home Page', '', 'inherit', 'open', 'open', '', '38-revision-v1', '', '', '2014-07-29 14:20:51', '2014-07-29 20:20:51', '', '38', 'http://bootstrap.cloudburstdesign.com/38-revision-v1/', '0', 'revision', '', '0');
INSERT INTO `wpag_posts` VALUES('72', '4', '2014-07-29 11:10:52', '2014-07-29 17:10:52', '<div class=\"row\">\r\n<div class=\"col-md-6\">\r\n<h2>Heading</h2>\r\nDonec id elit non mi porta gravida at eget metus. Fusce dapibus, tellus ac cursus commodo, tortor mauris condimentum nibh, ut fermentum massa justo sit amet risus. Etiam porta sem malesuada magna mollis euismod. Donec sed odio dui.\r\n\r\n<a class=\"btn btn-default\" href=\"#\">View details »</a>\r\n\r\n</div>\r\n<div class=\"col-md-6\">\r\n<h2>Heading</h2>\r\nDonec id elit non mi porta gravida at eget metus. Fusce dapibus, tellus ac cursus commodo, tortor mauris condimentum nibh, ut fermentum massa justo sit amet risus. Etiam porta sem malesuada magna mollis euismod. Donec sed odio dui.\r\n\r\n<a class=\"btn btn-default\" href=\"#\">View details »</a>\r\n\r\n</div>\r\n</div>', 'Home Page', '', 'inherit', 'open', 'open', '', '38-revision-v1', '', '', '2014-07-29 11:10:52', '2014-07-29 17:10:52', '', '38', 'http://bootstrap.cloudburstdesign.com/38-revision-v1/', '0', 'revision', '', '0');
INSERT INTO `wpag_posts` VALUES('447', '1', '2015-10-29 15:03:40', '2015-10-29 21:03:40', 'Please fill out the simple form below, and you will be included in the exclusive AgilData Beta group immediately. Thanks for your interest in AgilData.\n\n&nbsp;', 'Join The AgilData Beta Here', '', 'inherit', 'closed', 'closed', '', '369-autosave-v1', '', '', '2015-10-29 15:03:40', '2015-10-29 21:03:40', '', '369', 'http://www.agildata.com/369-autosave-v1/', '0', 'revision', '', '0');
INSERT INTO `wpag_posts` VALUES('81', '1', '2014-11-08 11:35:12', '2014-11-08 18:35:12', '', 'Blog', '', 'publish', 'open', 'closed', '', 'blog', '', '', '2015-04-28 19:19:03', '2015-04-29 01:19:03', '', '0', 'http://bootstrap.cloudburstdesign.com/?page_id=81', '60', 'page', '', '0');
INSERT INTO `wpag_posts` VALUES('82', '4', '2014-11-08 11:35:12', '2014-11-08 18:35:12', '', 'Blog', '', 'inherit', 'open', 'open', '', '81-revision-v1', '', '', '2014-11-08 11:35:12', '2014-11-08 18:35:12', '', '81', 'http://bootstrap.cloudburstdesign.com/81-revision-v1/', '0', 'revision', '', '0');
INSERT INTO `wpag_posts` VALUES('86', '1', '2015-01-28 15:04:53', '2015-01-28 22:04:53', '', 'white-bg', '', 'inherit', 'open', 'open', '', 'white-bg', '', '', '2015-01-28 15:04:53', '2015-01-28 22:04:53', '', '0', 'http://bootstrap.cloudburstdesign.com/wp-content/uploads/2015/01/white-bg.png', '0', 'attachment', 'image/png', '0');
INSERT INTO `wpag_posts` VALUES('91', '1', '2015-04-28 19:16:35', '2015-04-29 01:16:35', 'Lorem ipsum dolor sit amet, consectetur adipiscing elit. Quisque consectetur eros id ligula fermentum, eget dignissim lorem eleifend? Donec a pretium magna, at mattis leo! Aenean viverra, orci eu gravida aliquet, ipsum lectus lobortis tortor, in rutrum dui lacus id tortor. Nam pharetra neque ac lacus sagittis vestibulum. Cum sociis natoque penatibus et magnis dis parturient montes, nascetur ridiculus mus. Aenean dapibus sit amet dui eu bibendum. Sed metus dolor, luctus eu eros quis, maximus rhoncus dui. Fusce a vulputate risus. Morbi eu enim gravida, congue nisl vel, malesuada risus. Cum sociis natoque penatibus et magnis dis parturient montes, nascetur ridiculus mus. Aenean vitae malesuada arcu. Ut molestie lacus nibh, vitae pellentesque arcu pretium ut. Etiam dolor ipsum, tempor nec porttitor sit amet; tincidunt in quam. Ut et molestie orci.\r\n\r\nDonec pretium ipsum lorem, at laoreet nisi convallis vel. Integer ullamcorper nec nisi sed interdum. Aliquam quis euismod quam. Sed nec purus sed dui aliquet viverra! Morbi urna odio, bibendum non nisi tempus, sollicitudin sollicitudin dolor. Aliquam sit amet neque dolor. Suspendisse sed mauris bibendum, sagittis urna sed, tincidunt nisl? Nam in semper lacus. Donec nibh quam, iaculis sed suscipit nec, blandit a quam.\r\n\r\nNullam eleifend odio ligula, nec sagittis ipsum maximus a. Integer efficitur nibh id condimentum consectetur. Maecenas libero leo, tincidunt in risus et, mattis rutrum erat! Duis molestie elit massa, ac posuere turpis rhoncus at. Morbi eget tellus id quam egestas semper a a sem. Quisque convallis pellentesque consectetur. Praesent at quam rhoncus, auctor tellus vitae; posuere lectus.', 'What Is It', '', 'publish', 'closed', 'closed', '', 'what-is-it', '', '', '2015-05-01 08:08:27', '2015-05-01 14:08:27', '', '0', 'http://www.agildata.com/?page_id=91', '10', 'page', '', '0');
INSERT INTO `wpag_posts` VALUES('92', '4', '2015-04-28 19:16:35', '2015-04-29 01:16:35', '', 'What Is It', '', 'inherit', 'open', 'open', '', '91-revision-v1', '', '', '2015-04-28 19:16:35', '2015-04-29 01:16:35', '', '91', 'http://www.agildata.com/91-revision-v1/', '0', 'revision', '', '0');
INSERT INTO `wpag_posts` VALUES('93', '1', '2015-04-28 19:17:01', '2015-04-29 01:17:01', 'Lorem ipsum dolor sit amet, consectetur adipiscing elit. Quisque consectetur eros id ligula fermentum, eget dignissim lorem eleifend? Donec a pretium magna, at mattis leo! Aenean viverra, orci eu gravida aliquet, ipsum lectus lobortis tortor, in rutrum dui lacus id tortor. Nam pharetra neque ac lacus sagittis vestibulum. Cum sociis natoque penatibus et magnis dis parturient montes, nascetur ridiculus mus. Aenean dapibus sit amet dui eu bibendum. Sed metus dolor, luctus eu eros quis, maximus rhoncus dui. Fusce a vulputate risus. Morbi eu enim gravida, congue nisl vel, malesuada risus. Cum sociis natoque penatibus et magnis dis parturient montes, nascetur ridiculus mus. Aenean vitae malesuada arcu. Ut molestie lacus nibh, vitae pellentesque arcu pretium ut. Etiam dolor ipsum, tempor nec porttitor sit amet; tincidunt in quam. Ut et molestie orci.\r\n\r\nDonec pretium ipsum lorem, at laoreet nisi convallis vel. Integer ullamcorper nec nisi sed interdum. Aliquam quis euismod quam. Sed nec purus sed dui aliquet viverra! Morbi urna odio, bibendum non nisi tempus, sollicitudin sollicitudin dolor. Aliquam sit amet neque dolor. Suspendisse sed mauris bibendum, sagittis urna sed, tincidunt nisl? Nam in semper lacus. Donec nibh quam, iaculis sed suscipit nec, blandit a quam.\r\n\r\nNullam eleifend odio ligula, nec sagittis ipsum maximus a. Integer efficitur nibh id condimentum consectetur. Maecenas libero leo, tincidunt in risus et, mattis rutrum erat! Duis molestie elit massa, ac posuere turpis rhoncus at. Morbi eget tellus id quam egestas semper a a sem. Quisque convallis pellentesque consectetur. Praesent at quam rhoncus, auctor tellus vitae; posuere lectus.', 'How It Works', '', 'publish', 'closed', 'closed', '', 'how-it-works', '', '', '2015-04-30 11:18:51', '2015-04-30 17:18:51', '', '0', 'http://www.agildata.com/?page_id=93', '20', 'page', '', '0');
INSERT INTO `wpag_posts` VALUES('94', '4', '2015-04-28 19:17:01', '2015-04-29 01:17:01', '', 'How It Works', '', 'inherit', 'open', 'open', '', '93-revision-v1', '', '', '2015-04-28 19:17:01', '2015-04-29 01:17:01', '', '93', 'http://www.agildata.com/93-revision-v1/', '0', 'revision', '', '0');
INSERT INTO `wpag_posts` VALUES('95', '1', '2015-04-28 19:17:19', '2015-04-29 01:17:19', 'Lorem ipsum dolor sit amet, consectetur adipiscing elit. Quisque consectetur eros id ligula fermentum, eget dignissim lorem eleifend? Donec a pretium magna, at mattis leo! Aenean viverra, orci eu gravida aliquet, ipsum lectus lobortis tortor, in rutrum dui lacus id tortor. Nam pharetra neque ac lacus sagittis vestibulum. Cum sociis natoque penatibus et magnis dis parturient montes, nascetur ridiculus mus. Aenean dapibus sit amet dui eu bibendum. Sed metus dolor, luctus eu eros quis, maximus rhoncus dui. Fusce a vulputate risus. Morbi eu enim gravida, congue nisl vel, malesuada risus. Cum sociis natoque penatibus et magnis dis parturient montes, nascetur ridiculus mus. Aenean vitae malesuada arcu. Ut molestie lacus nibh, vitae pellentesque arcu pretium ut. Etiam dolor ipsum, tempor nec porttitor sit amet; tincidunt in quam. Ut et molestie orci.\r\n\r\nDonec pretium ipsum lorem, at laoreet nisi convallis vel. Integer ullamcorper nec nisi sed interdum. Aliquam quis euismod quam. Sed nec purus sed dui aliquet viverra! Morbi urna odio, bibendum non nisi tempus, sollicitudin sollicitudin dolor. Aliquam sit amet neque dolor. Suspendisse sed mauris bibendum, sagittis urna sed, tincidunt nisl? Nam in semper lacus. Donec nibh quam, iaculis sed suscipit nec, blandit a quam.\r\n\r\nNullam eleifend odio ligula, nec sagittis ipsum maximus a. Integer efficitur nibh id condimentum consectetur. Maecenas libero leo, tincidunt in risus et, mattis rutrum erat! Duis molestie elit massa, ac posuere turpis rhoncus at. Morbi eget tellus id quam egestas semper a a sem. Quisque convallis pellentesque consectetur. Praesent at quam rhoncus, auctor tellus vitae; posuere lectus.', 'Why Use It', '', 'publish', 'closed', 'closed', '', 'why-use-it', '', '', '2015-04-30 11:19:11', '2015-04-30 17:19:11', '', '0', 'http://www.agildata.com/?page_id=95', '30', 'page', '', '0');
INSERT INTO `wpag_posts` VALUES('96', '4', '2015-04-28 19:17:19', '2015-04-29 01:17:19', '', 'Why Use It', '', 'inherit', 'open', 'open', '', '95-revision-v1', '', '', '2015-04-28 19:17:19', '2015-04-29 01:17:19', '', '95', 'http://www.agildata.com/95-revision-v1/', '0', 'revision', '', '0');
INSERT INTO `wpag_posts` VALUES('97', '1', '2015-04-28 19:17:41', '2015-04-29 01:17:41', 'Lorem ipsum dolor sit amet, consectetur adipiscing elit. Quisque consectetur eros id ligula fermentum, eget dignissim lorem eleifend? Donec a pretium magna, at mattis leo! Aenean viverra, orci eu gravida aliquet, ipsum lectus lobortis tortor, in rutrum dui lacus id tortor. Nam pharetra neque ac lacus sagittis vestibulum. Cum sociis natoque penatibus et magnis dis parturient montes, nascetur ridiculus mus. Aenean dapibus sit amet dui eu bibendum. Sed metus dolor, luctus eu eros quis, maximus rhoncus dui. Fusce a vulputate risus. Morbi eu enim gravida, congue nisl vel, malesuada risus. Cum sociis natoque penatibus et magnis dis parturient montes, nascetur ridiculus mus. Aenean vitae malesuada arcu. Ut molestie lacus nibh, vitae pellentesque arcu pretium ut. Etiam dolor ipsum, tempor nec porttitor sit amet; tincidunt in quam. Ut et molestie orci.\r\n\r\nDonec pretium ipsum lorem, at laoreet nisi convallis vel. Integer ullamcorper nec nisi sed interdum. Aliquam quis euismod quam. Sed nec purus sed dui aliquet viverra! Morbi urna odio, bibendum non nisi tempus, sollicitudin sollicitudin dolor. Aliquam sit amet neque dolor. Suspendisse sed mauris bibendum, sagittis urna sed, tincidunt nisl? Nam in semper lacus. Donec nibh quam, iaculis sed suscipit nec, blandit a quam.\r\n\r\nNullam eleifend odio ligula, nec sagittis ipsum maximus a. Integer efficitur nibh id condimentum consectetur. Maecenas libero leo, tincidunt in risus et, mattis rutrum erat! Duis molestie elit massa, ac posuere turpis rhoncus at. Morbi eget tellus id quam egestas semper a a sem. Quisque convallis pellentesque consectetur. Praesent at quam rhoncus, auctor tellus vitae; posuere lectus.', 'Documentation', '', 'publish', 'closed', 'closed', '', 'documentation', '', '', '2015-04-30 11:19:41', '2015-04-30 17:19:41', '', '0', 'http://www.agildata.com/?page_id=97', '40', 'page', '', '0');
INSERT INTO `wpag_posts` VALUES('98', '4', '2015-04-28 19:17:41', '2015-04-29 01:17:41', '', 'Documentation', '', 'inherit', 'open', 'open', '', '97-revision-v1', '', '', '2015-04-28 19:17:41', '2015-04-29 01:17:41', '', '97', 'http://www.agildata.com/97-revision-v1/', '0', 'revision', '', '0');
INSERT INTO `wpag_posts` VALUES('99', '1', '2015-04-28 19:18:18', '2015-04-29 01:18:18', '<h3>Why are we here?</h3>\r\nOur mission at AgilData is to make developers around the world happier and more productive by simplifying how they work with data.\r\n<h3>History</h3>\r\nAgilData started life with a different name. In 2007 Cory Isaacson and Andy Grove founded CodeFutures, bringing years of experience building high performance data pipelines for Wall Street and using it to help companies reliably scale out relational databases using a product called dbShards. Customers loved dbShards and it went on to become a commercial success.\r\n\r\nIn 2014, we noticed that databases aren\'t merely the constraining factor from a performance and operations perspective: they often impose a constraint <em>on the development process itself</em>. Agile development practices have difficulty extending into databases and can run into process roadblocks, pitting DBAs and developers against each other needlessly.\r\n\r\nWe have the experience and passion to solve this. So...\r\n\r\nWe re-oriented the company around helping companies be agile with their data as well as their software, which led to a new name: AgilData. We\'ve taken our years of experience running distributed data pipelines at scale and our passion for simplifying the developer experience and poured them into a simple-to-use product that lets developers process streaming big data at scale...using simple SQL.\r\n<h3>Who are we?</h3>\r\nWe\'re Lean Startup apostles and startup veterans who believe that the right people and the right team are the most important part of a successful company. Our roots are in Colorado, but our team is global. We build distributed systems, and <em>we are one too</em>! Our team is distributed across North America and Europe.\r\n<h3>And we are growing….</h3>\r\nWe are always looking for exceptional people to join us. If you feel that you would be a great fit, but don\'t see a job below that fits you, feel free to drop us an email at joinus@agildata.com and let\'s chat.\r\n\r\n<script src=\"//app.theresumator.com/widgets/basic/create/agildata\" type=\"text/javascript\" charset=\"utf-8\"></script>', 'About', '', 'publish', 'closed', 'closed', '', 'about', '', '', '2015-11-18 12:18:08', '2015-11-18 19:18:08', '', '0', 'http://www.agildata.com/?page_id=99', '50', 'page', '', '0');
INSERT INTO `wpag_posts` VALUES('240', '5', '2015-05-28 16:23:11', '2015-05-28 22:23:11', '<h3>Mission</h3>\r\nWhat we believe a Big Data solution should be like?\r\n<h3>History</h3>\r\nAbout the team / locations, etc.. (rebrand and)\r\n\r\nCodeFutures, a provider of Agile Big Data technologies, has been rebranded as AgilData with a new leader and new mission to simplify stream processing of Big Data with SQL.\r\n\r\nDan Lynn assumed the role of CEO from founder Cory Isaacson, who has joined RMS and will now serve as chairman of AgilData. Lynn brings more than 14 years of advanced technology and business success experience.  Lynn is at his core a product developer with a keen interest in producing solutions that are simple to use and leverage common skills.  Dan believes a good Developer Experience is what’s missing in most Big Data solutions.  His technical product expertise is unique as a CEO to advancing its mission to create better database applications created by developers for developers.\r\n<h3>Who are we?</h3>\r\nAgilData is a Denver based startup with a distributed workforce that extends to both coasts of North America and Europe.\r\n<h3>And we are growing….</h3>\r\nWe seek people with the most relevant experience over your location.  AgilData is hiring and looking for ……….', 'About', '', 'inherit', 'open', 'open', '', '99-revision-v1', '', '', '2015-05-28 16:23:11', '2015-05-28 22:23:11', '', '99', 'http://www.agildata.com/99-revision-v1/', '0', 'revision', '', '0');
INSERT INTO `wpag_posts` VALUES('100', '4', '2015-04-28 19:18:18', '2015-04-29 01:18:18', '', 'About', '', 'inherit', 'open', 'open', '', '99-revision-v1', '', '', '2015-04-28 19:18:18', '2015-04-29 01:18:18', '', '99', 'http://www.agildata.com/99-revision-v1/', '0', 'revision', '', '0');
INSERT INTO `wpag_posts` VALUES('101', '1', '2015-04-28 19:18:41', '2015-04-29 01:18:41', '11001 West 120th Avenue\r\nSuite 400\r\nBroomfield, CO 80021\r\n\r\nPhone: +1 303 625 4084\r\nFax: +1 303 460 8228', 'Contact', '', 'publish', 'closed', 'closed', '', 'contact', '', '', '2015-05-27 14:47:08', '2015-05-27 20:47:08', '', '0', 'http://www.agildata.com/?page_id=101', '70', 'page', '', '0');
INSERT INTO `wpag_posts` VALUES('236', '5', '2015-05-27 14:47:08', '2015-05-27 20:47:08', '11001 West 120th Avenue\r\nSuite 400\r\nBroomfield, CO 80021\r\n\r\nPhone: +1 303 625 4084\r\nFax: +1 303 460 8228', 'Contact', '', 'inherit', 'open', 'open', '', '101-revision-v1', '', '', '2015-05-27 14:47:08', '2015-05-27 20:47:08', '', '101', 'http://www.agildata.com/101-revision-v1/', '0', 'revision', '', '0');
INSERT INTO `wpag_posts` VALUES('241', '5', '2015-05-28 22:45:24', '2015-05-29 04:45:24', '<h3>Mission</h3>\r\nWhat we believe a Big Data solution should be like?\r\n<h3>History</h3>\r\nAbout the team / locations, etc.. (rebrand and)\r\n\r\nCodeFutures, a provider of Agile Big Data technologies, has been rebranded as AgilData with a new leader and new mission to simplify stream processing of Big Data with SQL.\r\n\r\nDan Lynn assumed the role of CEO from founder Cory Isaacson, who has joined RMS and will now serve as chairman of AgilData. Lynn brings more than 14 years of advanced technology and business success experience.  Lynn is at his core a product developer with a keen interest in producing solutions that are simple to use and leverage common skills.  Dan believes a good Developer Experience is what’s missing in most Big Data solutions.  His technical product expertise is unique as a CEO to advancing its mission to create better database applications created by developers for developers.\r\n<h3>Who are we?</h3>\r\nAgilData is a Denver based startup with a distributed workforce that extends to both coasts of North America and Europe.\r\n<h3>And we are growing….</h3>\r\n<script type=\"text/javascript\" src=\"//app.theresumator.com/widgets/basic/create/agildata\" charset=\"utf-8\"></script>', 'About', '', 'inherit', 'open', 'open', '', '99-revision-v1', '', '', '2015-05-28 22:45:24', '2015-05-29 04:45:24', '', '99', 'http://www.agildata.com/99-revision-v1/', '0', 'revision', '', '0');
INSERT INTO `wpag_posts` VALUES('102', '4', '2015-04-28 19:18:41', '2015-04-29 01:18:41', '', 'Contact', '', 'inherit', 'open', 'open', '', '101-revision-v1', '', '', '2015-04-28 19:18:41', '2015-04-29 01:18:41', '', '101', 'http://www.agildata.com/101-revision-v1/', '0', 'revision', '', '0');
INSERT INTO `wpag_posts` VALUES('237', '1', '2015-05-28 07:40:29', '2015-05-28 13:40:29', '', 'How It Works', '', 'publish', 'open', 'closed', '', 'how-it-works', '', '', '2015-12-05 20:53:03', '2015-12-06 03:53:03', '', '0', 'http://www.agildata.com/?p=237', '3', 'nav_menu_item', '', '0');
INSERT INTO `wpag_posts` VALUES('107', '4', '2015-04-28 19:21:55', '2015-04-29 01:21:55', ' ', '', '', 'publish', 'open', 'closed', '', '107', '', '', '2015-12-05 20:53:04', '2015-12-06 03:53:04', '', '0', 'http://www.agildata.com/?p=107', '6', 'nav_menu_item', '', '0');
INSERT INTO `wpag_posts` VALUES('110', '4', '2015-04-30 11:18:29', '2015-04-30 17:18:29', 'Lorem ipsum dolor sit amet, consectetur adipiscing elit. Quisque consectetur eros id ligula fermentum, eget dignissim lorem eleifend? Donec a pretium magna, at mattis leo! Aenean viverra, orci eu gravida aliquet, ipsum lectus lobortis tortor, in rutrum dui lacus id tortor. Nam pharetra neque ac lacus sagittis vestibulum. Cum sociis natoque penatibus et magnis dis parturient montes, nascetur ridiculus mus. Aenean dapibus sit amet dui eu bibendum. Sed metus dolor, luctus eu eros quis, maximus rhoncus dui. Fusce a vulputate risus. Morbi eu enim gravida, congue nisl vel, malesuada risus. Cum sociis natoque penatibus et magnis dis parturient montes, nascetur ridiculus mus. Aenean vitae malesuada arcu. Ut molestie lacus nibh, vitae pellentesque arcu pretium ut. Etiam dolor ipsum, tempor nec porttitor sit amet; tincidunt in quam. Ut et molestie orci.\r\n\r\nDonec pretium ipsum lorem, at laoreet nisi convallis vel. Integer ullamcorper nec nisi sed interdum. Aliquam quis euismod quam. Sed nec purus sed dui aliquet viverra! Morbi urna odio, bibendum non nisi tempus, sollicitudin sollicitudin dolor. Aliquam sit amet neque dolor. Suspendisse sed mauris bibendum, sagittis urna sed, tincidunt nisl? Nam in semper lacus. Donec nibh quam, iaculis sed suscipit nec, blandit a quam.\r\n\r\nNullam eleifend odio ligula, nec sagittis ipsum maximus a. Integer efficitur nibh id condimentum consectetur. Maecenas libero leo, tincidunt in risus et, mattis rutrum erat! Duis molestie elit massa, ac posuere turpis rhoncus at. Morbi eget tellus id quam egestas semper a a sem. Quisque convallis pellentesque consectetur. Praesent at quam rhoncus, auctor tellus vitae; posuere lectus.', 'What Is It', '', 'inherit', 'open', 'open', '', '91-revision-v1', '', '', '2015-04-30 11:18:29', '2015-04-30 17:18:29', '', '91', 'http://www.agildata.com/91-revision-v1/', '0', 'revision', '', '0');
INSERT INTO `wpag_posts` VALUES('111', '4', '2015-04-30 11:18:51', '2015-04-30 17:18:51', 'Lorem ipsum dolor sit amet, consectetur adipiscing elit. Quisque consectetur eros id ligula fermentum, eget dignissim lorem eleifend? Donec a pretium magna, at mattis leo! Aenean viverra, orci eu gravida aliquet, ipsum lectus lobortis tortor, in rutrum dui lacus id tortor. Nam pharetra neque ac lacus sagittis vestibulum. Cum sociis natoque penatibus et magnis dis parturient montes, nascetur ridiculus mus. Aenean dapibus sit amet dui eu bibendum. Sed metus dolor, luctus eu eros quis, maximus rhoncus dui. Fusce a vulputate risus. Morbi eu enim gravida, congue nisl vel, malesuada risus. Cum sociis natoque penatibus et magnis dis parturient montes, nascetur ridiculus mus. Aenean vitae malesuada arcu. Ut molestie lacus nibh, vitae pellentesque arcu pretium ut. Etiam dolor ipsum, tempor nec porttitor sit amet; tincidunt in quam. Ut et molestie orci.\r\n\r\nDonec pretium ipsum lorem, at laoreet nisi convallis vel. Integer ullamcorper nec nisi sed interdum. Aliquam quis euismod quam. Sed nec purus sed dui aliquet viverra! Morbi urna odio, bibendum non nisi tempus, sollicitudin sollicitudin dolor. Aliquam sit amet neque dolor. Suspendisse sed mauris bibendum, sagittis urna sed, tincidunt nisl? Nam in semper lacus. Donec nibh quam, iaculis sed suscipit nec, blandit a quam.\r\n\r\nNullam eleifend odio ligula, nec sagittis ipsum maximus a. Integer efficitur nibh id condimentum consectetur. Maecenas libero leo, tincidunt in risus et, mattis rutrum erat! Duis molestie elit massa, ac posuere turpis rhoncus at. Morbi eget tellus id quam egestas semper a a sem. Quisque convallis pellentesque consectetur. Praesent at quam rhoncus, auctor tellus vitae; posuere lectus.', 'How It Works', '', 'inherit', 'open', 'open', '', '93-revision-v1', '', '', '2015-04-30 11:18:51', '2015-04-30 17:18:51', '', '93', 'http://www.agildata.com/93-revision-v1/', '0', 'revision', '', '0');
INSERT INTO `wpag_posts` VALUES('112', '4', '2015-04-30 11:19:11', '2015-04-30 17:19:11', 'Lorem ipsum dolor sit amet, consectetur adipiscing elit. Quisque consectetur eros id ligula fermentum, eget dignissim lorem eleifend? Donec a pretium magna, at mattis leo! Aenean viverra, orci eu gravida aliquet, ipsum lectus lobortis tortor, in rutrum dui lacus id tortor. Nam pharetra neque ac lacus sagittis vestibulum. Cum sociis natoque penatibus et magnis dis parturient montes, nascetur ridiculus mus. Aenean dapibus sit amet dui eu bibendum. Sed metus dolor, luctus eu eros quis, maximus rhoncus dui. Fusce a vulputate risus. Morbi eu enim gravida, congue nisl vel, malesuada risus. Cum sociis natoque penatibus et magnis dis parturient montes, nascetur ridiculus mus. Aenean vitae malesuada arcu. Ut molestie lacus nibh, vitae pellentesque arcu pretium ut. Etiam dolor ipsum, tempor nec porttitor sit amet; tincidunt in quam. Ut et molestie orci.\r\n\r\nDonec pretium ipsum lorem, at laoreet nisi convallis vel. Integer ullamcorper nec nisi sed interdum. Aliquam quis euismod quam. Sed nec purus sed dui aliquet viverra! Morbi urna odio, bibendum non nisi tempus, sollicitudin sollicitudin dolor. Aliquam sit amet neque dolor. Suspendisse sed mauris bibendum, sagittis urna sed, tincidunt nisl? Nam in semper lacus. Donec nibh quam, iaculis sed suscipit nec, blandit a quam.\r\n\r\nNullam eleifend odio ligula, nec sagittis ipsum maximus a. Integer efficitur nibh id condimentum consectetur. Maecenas libero leo, tincidunt in risus et, mattis rutrum erat! Duis molestie elit massa, ac posuere turpis rhoncus at. Morbi eget tellus id quam egestas semper a a sem. Quisque convallis pellentesque consectetur. Praesent at quam rhoncus, auctor tellus vitae; posuere lectus.', 'Why Use It', '', 'inherit', 'open', 'open', '', '95-revision-v1', '', '', '2015-04-30 11:19:11', '2015-04-30 17:19:11', '', '95', 'http://www.agildata.com/95-revision-v1/', '0', 'revision', '', '0');
INSERT INTO `wpag_posts` VALUES('113', '4', '2015-04-30 11:19:41', '2015-04-30 17:19:41', 'Lorem ipsum dolor sit amet, consectetur adipiscing elit. Quisque consectetur eros id ligula fermentum, eget dignissim lorem eleifend? Donec a pretium magna, at mattis leo! Aenean viverra, orci eu gravida aliquet, ipsum lectus lobortis tortor, in rutrum dui lacus id tortor. Nam pharetra neque ac lacus sagittis vestibulum. Cum sociis natoque penatibus et magnis dis parturient montes, nascetur ridiculus mus. Aenean dapibus sit amet dui eu bibendum. Sed metus dolor, luctus eu eros quis, maximus rhoncus dui. Fusce a vulputate risus. Morbi eu enim gravida, congue nisl vel, malesuada risus. Cum sociis natoque penatibus et magnis dis parturient montes, nascetur ridiculus mus. Aenean vitae malesuada arcu. Ut molestie lacus nibh, vitae pellentesque arcu pretium ut. Etiam dolor ipsum, tempor nec porttitor sit amet; tincidunt in quam. Ut et molestie orci.\r\n\r\nDonec pretium ipsum lorem, at laoreet nisi convallis vel. Integer ullamcorper nec nisi sed interdum. Aliquam quis euismod quam. Sed nec purus sed dui aliquet viverra! Morbi urna odio, bibendum non nisi tempus, sollicitudin sollicitudin dolor. Aliquam sit amet neque dolor. Suspendisse sed mauris bibendum, sagittis urna sed, tincidunt nisl? Nam in semper lacus. Donec nibh quam, iaculis sed suscipit nec, blandit a quam.\r\n\r\nNullam eleifend odio ligula, nec sagittis ipsum maximus a. Integer efficitur nibh id condimentum consectetur. Maecenas libero leo, tincidunt in risus et, mattis rutrum erat! Duis molestie elit massa, ac posuere turpis rhoncus at. Morbi eget tellus id quam egestas semper a a sem. Quisque convallis pellentesque consectetur. Praesent at quam rhoncus, auctor tellus vitae; posuere lectus.', 'Documentation', '', 'inherit', 'open', 'open', '', '97-revision-v1', '', '', '2015-04-30 11:19:41', '2015-04-30 17:19:41', '', '97', 'http://www.agildata.com/97-revision-v1/', '0', 'revision', '', '0');
INSERT INTO `wpag_posts` VALUES('114', '4', '2015-04-30 11:19:59', '2015-04-30 17:19:59', 'Lorem ipsum dolor sit amet, consectetur adipiscing elit. Quisque consectetur eros id ligula fermentum, eget dignissim lorem eleifend? Donec a pretium magna, at mattis leo! Aenean viverra, orci eu gravida aliquet, ipsum lectus lobortis tortor, in rutrum dui lacus id tortor. Nam pharetra neque ac lacus sagittis vestibulum. Cum sociis natoque penatibus et magnis dis parturient montes, nascetur ridiculus mus. Aenean dapibus sit amet dui eu bibendum. Sed metus dolor, luctus eu eros quis, maximus rhoncus dui. Fusce a vulputate risus. Morbi eu enim gravida, congue nisl vel, malesuada risus. Cum sociis natoque penatibus et magnis dis parturient montes, nascetur ridiculus mus. Aenean vitae malesuada arcu. Ut molestie lacus nibh, vitae pellentesque arcu pretium ut. Etiam dolor ipsum, tempor nec porttitor sit amet; tincidunt in quam. Ut et molestie orci.\r\n\r\nDonec pretium ipsum lorem, at laoreet nisi convallis vel. Integer ullamcorper nec nisi sed interdum. Aliquam quis euismod quam. Sed nec purus sed dui aliquet viverra! Morbi urna odio, bibendum non nisi tempus, sollicitudin sollicitudin dolor. Aliquam sit amet neque dolor. Suspendisse sed mauris bibendum, sagittis urna sed, tincidunt nisl? Nam in semper lacus. Donec nibh quam, iaculis sed suscipit nec, blandit a quam.\r\n\r\nNullam eleifend odio ligula, nec sagittis ipsum maximus a. Integer efficitur nibh id condimentum consectetur. Maecenas libero leo, tincidunt in risus et, mattis rutrum erat! Duis molestie elit massa, ac posuere turpis rhoncus at. Morbi eget tellus id quam egestas semper a a sem. Quisque convallis pellentesque consectetur. Praesent at quam rhoncus, auctor tellus vitae; posuere lectus.', 'About', '', 'inherit', 'open', 'open', '', '99-revision-v1', '', '', '2015-04-30 11:19:59', '2015-04-30 17:19:59', '', '99', 'http://www.agildata.com/99-revision-v1/', '0', 'revision', '', '0');
INSERT INTO `wpag_posts` VALUES('115', '4', '2015-04-30 11:20:05', '2015-04-30 17:20:05', '<p>Lorem ipsum dolor sit amet, consectetur adipiscing elit. Quisque consectetur eros id ligula fermentum, eget dignissim lorem eleifend? Donec a pretium magna, at mattis leo! Aenean viverra, orci eu gravida aliquet, ipsum lectus lobortis tortor, in rutrum dui lacus id tortor. Nam pharetra neque ac lacus sagittis vestibulum. Cum sociis natoque penatibus et magnis dis parturient montes, nascetur ridiculus mus. Aenean dapibus sit amet dui eu bibendum. Sed metus dolor, luctus eu eros quis, maximus rhoncus dui. Fusce a vulputate risus. Morbi eu enim gravida, congue nisl vel, malesuada risus. Cum sociis natoque penatibus et magnis dis parturient montes, nascetur ridiculus mus. Aenean vitae malesuada arcu. Ut molestie lacus nibh, vitae pellentesque arcu pretium ut. Etiam dolor ipsum, tempor nec porttitor sit amet; tincidunt in quam. Ut et molestie orci.</p>\n<p>Donec pretium ipsum lorem, at laoreet nisi convallis vel. Integer ullamcorper nec nisi sed interdum. Aliquam quis euismod quam. Sed nec purus sed dui aliquet viverra! Morbi urna odio, bibendum non nisi tempus, sollicitudin sollicitudin dolor. Aliquam sit amet neque dolor. Suspendisse sed mauris bibendum, sagittis urna sed, tincidunt nisl? Nam in semper lacus. Donec nibh quam, iaculis sed suscipit nec, blandit a quam.</p>\n<p>Nullam eleifend odio ligula, nec sagittis ipsum maximus a. Integer efficitur nibh id condimentum consectetur. Maecenas libero leo, tincidunt in risus et, mattis rutrum erat! Duis molestie elit massa, ac posuere turpis rhoncus at. Morbi eget tellus id quam egestas semper a a sem. Quisque convallis pellentesque consectetur. Praesent at quam rhoncus, auctor tellus vitae; posuere lectus.</p>\n', 'About', '', 'inherit', 'open', 'open', '', '99-autosave-v1', '', '', '2015-04-30 11:20:05', '2015-04-30 17:20:05', '', '99', 'http://www.agildata.com/99-autosave-v1/', '0', 'revision', '', '0');
INSERT INTO `wpag_posts` VALUES('116', '4', '2015-04-30 11:20:10', '2015-04-30 17:20:10', '', 'Contact', '', 'inherit', 'open', 'open', '', '101-autosave-v1', '', '', '2015-04-30 11:20:10', '2015-04-30 17:20:10', '', '101', 'http://www.agildata.com/101-autosave-v1/', '0', 'revision', '', '0');
INSERT INTO `wpag_posts` VALUES('117', '4', '2015-04-30 11:20:17', '2015-04-30 17:20:17', 'Lorem ipsum dolor sit amet, consectetur adipiscing elit. Quisque consectetur eros id ligula fermentum, eget dignissim lorem eleifend? Donec a pretium magna, at mattis leo! Aenean viverra, orci eu gravida aliquet, ipsum lectus lobortis tortor, in rutrum dui lacus id tortor. Nam pharetra neque ac lacus sagittis vestibulum. Cum sociis natoque penatibus et magnis dis parturient montes, nascetur ridiculus mus. Aenean dapibus sit amet dui eu bibendum. Sed metus dolor, luctus eu eros quis, maximus rhoncus dui. Fusce a vulputate risus. Morbi eu enim gravida, congue nisl vel, malesuada risus. Cum sociis natoque penatibus et magnis dis parturient montes, nascetur ridiculus mus. Aenean vitae malesuada arcu. Ut molestie lacus nibh, vitae pellentesque arcu pretium ut. Etiam dolor ipsum, tempor nec porttitor sit amet; tincidunt in quam. Ut et molestie orci.\r\n\r\nDonec pretium ipsum lorem, at laoreet nisi convallis vel. Integer ullamcorper nec nisi sed interdum. Aliquam quis euismod quam. Sed nec purus sed dui aliquet viverra! Morbi urna odio, bibendum non nisi tempus, sollicitudin sollicitudin dolor. Aliquam sit amet neque dolor. Suspendisse sed mauris bibendum, sagittis urna sed, tincidunt nisl? Nam in semper lacus. Donec nibh quam, iaculis sed suscipit nec, blandit a quam.\r\n\r\nNullam eleifend odio ligula, nec sagittis ipsum maximus a. Integer efficitur nibh id condimentum consectetur. Maecenas libero leo, tincidunt in risus et, mattis rutrum erat! Duis molestie elit massa, ac posuere turpis rhoncus at. Morbi eget tellus id quam egestas semper a a sem. Quisque convallis pellentesque consectetur. Praesent at quam rhoncus, auctor tellus vitae; posuere lectus.', 'Contact', '', 'inherit', 'open', 'open', '', '101-revision-v1', '', '', '2015-04-30 11:20:17', '2015-04-30 17:20:17', '', '101', 'http://www.agildata.com/101-revision-v1/', '0', 'revision', '', '0');
INSERT INTO `wpag_posts` VALUES('135', '4', '2015-05-05 18:36:37', '2015-05-06 00:36:37', '', 'Verizon', '', 'inherit', 'open', 'open', '', 'verizon', '', '', '2015-05-27 10:42:41', '2015-05-27 16:42:41', '', '0', 'http://www.agildata.com/wp-content/uploads/2015/05/Verizon.png', '0', 'attachment', 'image/png', '0');
INSERT INTO `wpag_posts` VALUES('134', '4', '2015-05-05 18:36:30', '2015-05-06 00:36:30', '', 'Turner', '', 'inherit', 'open', 'open', '', 'turner', '', '', '2015-05-27 10:42:45', '2015-05-27 16:42:45', '', '0', 'http://www.agildata.com/wp-content/uploads/2015/05/Turner.png', '0', 'attachment', 'image/png', '0');
INSERT INTO `wpag_posts` VALUES('130', '4', '2015-05-05 18:36:00', '2015-05-06 00:36:00', '', 'accenture', '', 'inherit', 'open', 'open', '', 'accenture', '', '', '2015-05-27 10:43:03', '2015-05-27 16:43:03', '', '0', 'http://www.agildata.com/wp-content/uploads/2015/05/accenture.png', '0', 'attachment', 'image/png', '0');
INSERT INTO `wpag_posts` VALUES('131', '4', '2015-05-05 18:36:04', '2015-05-06 00:36:04', '', 'Bank of America', '', 'inherit', 'open', 'open', '', 'bank-of-america', '', '', '2015-05-27 10:43:00', '2015-05-27 16:43:00', '', '0', 'http://www.agildata.com/wp-content/uploads/2015/05/Bank-of-America.png', '0', 'attachment', 'image/png', '0');
INSERT INTO `wpag_posts` VALUES('132', '4', '2015-05-05 18:36:15', '2015-05-06 00:36:15', '', 'JPMorgan', '', 'inherit', 'open', 'open', '', 'jpmorgan', '', '', '2015-05-27 10:42:55', '2015-05-27 16:42:55', '', '0', 'http://www.agildata.com/wp-content/uploads/2015/05/JPMorgan.png', '0', 'attachment', 'image/png', '0');
INSERT INTO `wpag_posts` VALUES('133', '4', '2015-05-05 18:36:21', '2015-05-06 00:36:21', '', 'Lockheed Martin', '', 'inherit', 'open', 'open', '', 'lockheed-martin', '', '', '2015-05-27 10:42:50', '2015-05-27 16:42:50', '', '0', 'http://www.agildata.com/wp-content/uploads/2015/05/Lockheed-Martin.png', '0', 'attachment', 'image/png', '0');
INSERT INTO `wpag_posts` VALUES('360', '5', '2015-06-03 16:01:52', '2015-06-03 22:01:52', 'AgilData, formerly CodeFutures, a provider of Agile Big Data technologies, announced Dan Lynn as CEO. Lynn assumes the role from Founder Cory Isaacson, who has joined RMS and will now serve as chairman of AgilData. Lynn brings more than 14 years of advanced technology and business success experience, and will help AgilData Code build on its industry leadership advancing Agile Big Data initiatives. His technical and product expertise will be invaluable to achieving the AgilData platform goals of simplifying streaming fast data at scale using SQL helping companies be more competitive by getting more value from their ever growing volumes of mission-critical data.\r\n\r\nIsaacson states, “Dan Lynn has the experience and passion to lead AgilData into the next chapter of its growth, and to help organizations simplify the increasingly complex set of challenges that bog Big Data initiatives down. Dan’s mix of business experience and deep technology leadership is a perfect fit for AgilData as it delivers new innovation to the Big Data market space.”\r\n\r\n“The opportunity to join AgilData is very exciting as we work to radically change the way organizations stream, organize, and gain value from Big Data,” said Lynn. “Today’s large IT departments are quickly adopting Agile-based approaches that are iterative and meet the real-time needs of the organization. Our mission is to bring the same agility to data retrieval through new approaches that are streamlined to empower developers to more quickly achieve the goals of the business.”\r\n\r\nAgilData is a leading supplier of database performance tools.  Its Big Data platform AgilData is designed to remove the complexity and limitations of current data management approaches. AgilData provides high-performance stream processing that supports the real-time, data-driven enterprise enabling organizations to quickly and efficiently gather meaningful insights from fast data. AgilData’s vision is to enable an agile approach to Big Data processing and data modeling – transforming static database repositories into a flexible data infrastructure and disrupting traditional industry practices with its forward-thinking approaches to database architecture.', 'Dan Lynn Named CEO of AgilData to Advance Agile Big Data Strategies', '', 'inherit', 'open', 'open', '', '358-revision-v1', '', '', '2015-06-03 16:01:52', '2015-06-03 22:01:52', '', '358', 'http://www.agildata.com/358-revision-v1/', '0', 'revision', '', '0');
INSERT INTO `wpag_posts` VALUES('359', '5', '2015-06-03 15:58:23', '2015-06-03 21:58:23', '', 'Dan-Lynn-CodeFutures2-Low-Res-300x206', '', 'inherit', 'open', 'open', '', 'dan-lynn-codefutures2-low-res-300x206', '', '', '2015-06-03 15:58:23', '2015-06-03 21:58:23', '', '358', 'http://www.agildata.com/wp-content/uploads/2015/06/Dan-Lynn-CodeFutures2-Low-Res-300x206.jpg', '0', 'attachment', 'image/jpeg', '0');
INSERT INTO `wpag_posts` VALUES('376', '5', '2015-06-04 19:00:08', '2015-06-05 01:00:08', 'AgilData, formerly CodeFutures, a provider of Agile Big Data technologies, announced Dan Lynn as CEO. Lynn assumes the role from Founder Cory Isaacson, who has joined RMS and will now serve as chairman of AgilData. Lynn brings more than 14 years of advanced technology and business success experience, and will help AgilData Code build on its industry leadership advancing Agile Big Data initiatives. His technical and product expertise will be invaluable to achieving the AgilData platform goals of simplifying streaming fast data at scale using SQL helping companies be more competitive by getting more value from their ever growing volumes of mission-critical data.\r\n\r\nIsaacson states, “Dan Lynn has the experience and passion to lead AgilData into the next chapter of its growth, and to help organizations simplify the increasingly complex set of challenges that bog Big Data initiatives down. Dan’s mix of business experience and deep technology leadership is a perfect fit for AgilData as it delivers new innovation to the Big Data market space.”\r\n\r\n“The opportunity to join AgilData is very exciting as we work to radically change the way organizations stream, organize, and gain value from Big Data,” said Lynn. “Today’s large IT departments are quickly adopting Agile-based approaches that are iterative and meet the real-time needs of the organization. Our mission is to bring the same agility to data retrieval through new approaches that are streamlined to empower developers to more quickly achieve the goals of the business.”\r\n\r\nAgilData is a leading supplier of database performance tools.  Its Big Data platform AgilData is designed to remove the complexity and limitations of current data management approaches. AgilData provides high-performance stream processing that supports the real-time, data-driven enterprise enabling organizations to quickly and efficiently gather meaningful insights from fast data. AgilData’s vision is to enable an agile approach to Big Data processing and data modeling – transforming static database repositories into a flexible data infrastructure and disrupting traditional industry practices with its forward-thinking approaches to database architecture.', 'AgilData to Advance Streaming Big Data Strategies', '', 'inherit', 'open', 'open', '', '358-revision-v1', '', '', '2015-06-04 19:00:08', '2015-06-05 01:00:08', '', '358', 'http://www.agildata.com/358-revision-v1/', '0', 'revision', '', '0');
INSERT INTO `wpag_posts` VALUES('220', '1', '2015-05-25 11:06:46', '2015-05-25 17:06:46', '', 'Why AgilData', '', 'publish', 'open', 'closed', '', 'why-use-it', '', '', '2015-12-05 20:53:03', '2015-12-06 03:53:03', '', '0', 'http://www.agildata.com/?p=220', '1', 'nav_menu_item', '', '0');
INSERT INTO `wpag_posts` VALUES('138', '4', '2015-05-09 09:10:34', '2015-05-09 15:10:34', '', 'ActiveStandards', '', 'inherit', 'open', 'open', '', 'activestandards-2', '', '', '2015-05-27 10:42:37', '2015-05-27 16:42:37', '', '0', 'http://www.agildata.com/wp-content/uploads/2015/05/ActiveStandards.jpg', '0', 'attachment', 'image/jpeg', '0');
INSERT INTO `wpag_posts` VALUES('139', '4', '2015-05-09 09:10:36', '2015-05-09 15:10:36', '', 'BigDoor', '', 'inherit', 'open', 'open', '', 'bigdoor-2', '', '', '2015-05-27 10:37:53', '2015-05-27 16:37:53', '', '0', 'http://www.agildata.com/wp-content/uploads/2015/05/BigDoor.jpg', '0', 'attachment', 'image/jpeg', '0');
INSERT INTO `wpag_posts` VALUES('140', '4', '2015-05-09 09:10:37', '2015-05-09 15:10:37', '', 'FullContact', '', 'inherit', 'open', 'open', '', 'fullcontact-2', '', '', '2015-05-27 10:42:30', '2015-05-27 16:42:30', '', '0', 'http://www.agildata.com/wp-content/uploads/2015/05/FullContact.jpg', '0', 'attachment', 'image/jpeg', '0');
INSERT INTO `wpag_posts` VALUES('141', '4', '2015-05-09 09:10:38', '2015-05-09 15:10:38', '', 'Genoo', '', 'inherit', 'open', 'open', '', 'genoo_logo_no_drop-no-tag', '', '', '2015-05-27 10:42:25', '2015-05-27 16:42:25', '', '0', 'http://www.agildata.com/wp-content/uploads/2015/05/Genoo.jpg', '0', 'attachment', 'image/jpeg', '0');
INSERT INTO `wpag_posts` VALUES('142', '4', '2015-05-09 09:10:40', '2015-05-09 15:10:40', '', 'Gumi', '', 'inherit', 'open', 'open', '', 'gumi-2', '', '', '2015-05-27 10:42:13', '2015-05-27 16:42:13', '', '0', 'http://www.agildata.com/wp-content/uploads/2015/05/Gumi.jpg', '0', 'attachment', 'image/jpeg', '0');
INSERT INTO `wpag_posts` VALUES('143', '4', '2015-05-09 09:10:41', '2015-05-09 15:10:41', '', 'Pokemon', '', 'inherit', 'open', 'open', '', 'pokemon-2', '', '', '2015-05-27 10:39:59', '2015-05-27 16:39:59', '', '0', 'http://www.agildata.com/wp-content/uploads/2015/05/Pokemon.jpg', '0', 'attachment', 'image/jpeg', '0');
INSERT INTO `wpag_posts` VALUES('147', '1', '2015-05-21 19:06:56', '2015-05-22 01:06:56', 'AgilData is the simplest way for enterprises to leverage big data without having to become experts in a complex and changing toolset. While Big Data tools and technologies are immensely powerful, putting them together to create a complete solution can be complex and require expensive outsourced implementation and training.\r\n\r\nAgilData solves this problem by providing a real-time data platform that helps companies leverage Big Data in their business. Using AgilData, developers can use simple SQL to build massively-scalable extensible stream processing pipelines that interface cleanly with existing databases and message queues. Led by industry database veterans, AgilData represents a major industry breakthrough that aligns data processing with the Agile Development principles of being lightweight, flexible, and incrementally-scalable, which has traditionally been a challenge for databases.\r\n\r\n&nbsp;\r\n\r\nThe company, previously known as CodeFutures, has recently rebranded to focus on the AgilData brand. CEO Dan Lynn brings extensive experience and a proven track record of success to the company. Prior to the rebrand to AgilData, CodeFutures had been a leading provider of agile Big Data and streaming technologies and was founded by Cory Isaacson. Their vision was to enable an agile approach to Big Data processing— transforming static database repositories into a flexible and dynamic data infrastructure. This approach reduced the heavyweight, rigid and limiting capabilities of accessing and using data by traditional means, opening an entire new set of opportunities for organizations - now known as, AgilData.\r\n\r\nAgilData conducted a private beta in 2014, and has used the feedback to significantly improve the developer and operations experience, simplifying cluster management and a greatly streamlined programming model.', 'About', '', 'inherit', 'open', 'open', '', '99-revision-v1', '', '', '2015-05-21 19:06:56', '2015-05-22 01:06:56', '', '99', 'http://www.agildata.com/99-revision-v1/', '0', 'revision', '', '0');
INSERT INTO `wpag_posts` VALUES('235', '5', '2015-05-27 14:47:03', '2015-05-27 20:47:03', '', 'Contact', '', 'inherit', 'open', 'open', '', '101-autosave-v1', '', '', '2015-05-27 14:47:03', '2015-05-27 20:47:03', '', '101', 'http://www.agildata.com/101-autosave-v1/', '0', 'revision', '', '0');
INSERT INTO `wpag_posts` VALUES('242', '5', '2015-05-29 00:32:54', '2015-05-29 06:32:54', '<h3>Why are we here?</h3>\nOur mission at AgilData is to make developers around the world happier and more productive by simplifying how they work with data.\n<h3>History</h3>\nAgilData started life with a different name. In 2007 Cory Isaacson and Andy Grove founded CodeFutures, bringing years of experience building high performance data pipelines for Wall Street and using it to help companies reliably scale out relational databases using a product called dbShards. Customers loved dbShards and it went on to become a commercial success.\n\nIn 2014, we noticed that databases aren\'t merely the constraining factor from a performance and operations perspective: they often impose a constraint <em>on the development process itself</em>. Agile development practices have difficulty extending into databases and can run into process roadblocks, often pitting DBAs and developers against each other needlessly. We felt we had the experience and passion to solve this.\n\nWe re-oriented the company around helping companies be agile with their data as well as their software, which led to a new name: AgilData. We\'ve taken our years of experience running distributed data pipelines at scale and our passion for simplifying the developer experience and poured them into a simple-to-use product that lets developers process streaming big data at scale...using simple SQL.\n<h3>Who are we?</h3>\nOur roots are in Colorado, but our team is global. We build distributed systems, and <em>we are one too</em>! Our team is distributed across North America and Europe. We\'re Lean Startup apostles and startup veterans who believe that the right people and the right team are the most important part of a successful company.\n<h3>And we are growing….</h3>\nWe are always looking for exceptional people to join us. If you feel that you would be a great fit, but don\'t see a job below that fits you, feel free to drop us an email at jobs@agildata.com and let\'s chat.\n\n<script src=\"//app.theresumator.com/widgets/basic/create/agildata\" type=\"text/javascript\" charset=\"utf-8\"></script>', 'About', '', 'inherit', 'open', 'open', '', '99-autosave-v1', '', '', '2015-05-29 00:32:54', '2015-05-29 06:32:54', '', '99', 'http://www.agildata.com/99-autosave-v1/', '0', 'revision', '', '0');
INSERT INTO `wpag_posts` VALUES('149', '5', '2015-05-22 13:24:54', '0000-00-00 00:00:00', '<a href=\"/wp-content/uploads/2014/07/AgilData-landing-page-graphic.jpg\"><img src=\"/wp-content/uploads/2014/07/AgilData-landing-page-graphic.jpg\" alt=\"AgilData landing page graphic\" width=\"590\" height=\"252\" /></a>\r\n<h2>Have we been Looking at Databases Wrong all this Time?</h2>\r\nToday’s databases are typically used as <em>static</em> repositories. This is a totally understandable, it is the historical way we consider a database – as  a persistent repository for our data.\r\n\r\nBut does this really meet our needs, in today’s Big Data environment?\r\n\r\nThis approach is definitely limited, through the view of a database as a static repository, with hard-to-change schemas, and primarily a source of historical data.\r\n\r\n<a href=\"/wp-content/uploads/2014/07/AgilData-landing-page-Figure-1.jpg\"><img src=\"/wp-content/uploads/2014/07/AgilData-landing-page-Figure-1.jpg\" alt=\"AgilData landing page Figure 1\" width=\"486\" height=\"250\" /></a>\r\n\r\n<strong>Figure 1 A typical static database schema</strong>\r\n<h3><strong>New Requirements Drive Application Complexity</strong></h3>\r\nAs requirements evolve and new features are adding, the data structure invariably becomes more complex. At the same time application data is growing, this also adds to the Big Data challenge over time. Along with the new requirements and schema complexity, the application code typically gets<em> far more complex</em>. Not only does the application get more complex, the database typically experiences significant performance degradation, given that the schema and query complexity results in more interaction and lower efficiency when interacting with the database.\r\n\r\n<a href=\"/wp-content/uploads/2014/07/AgilData-landing-page-Figure-2.jpg\"><img src=\"/wp-content/uploads/2014/07/AgilData-landing-page-Figure-2.jpg\" alt=\"AgilData landing page Figure 2\" width=\"492\" height=\"358\" /></a>\r\n\r\n<strong> Figure 2 Changing requirements drive schema complexity, performance degradation</strong>\r\n<h3><strong>Resorting to Multiple Data Engines to Improve Performance</strong></h3>\r\nToday developers have a large array of database engines to choose from. To address the problem of performance degradation and complexity, organizations often resort to having <em>multiple</em> database engines for a single application, using one or more new engines that support performance and data requirements more closely. While it is true that NoSQL/NewSQL engines provide a more flexible schema approach, it is still easy to get into trouble, and most importantly to have difficulty in <em>extracting</em> meaning from these “schema-less” repositories.\r\n\r\n<a href=\"/wp-content/uploads/2014/07/AgilData-landing-page-Figure-3.jpg\"><img src=\"/wp-content/uploads/2014/07/AgilData-landing-page-Figure-3.jpg\" alt=\"AgilData landing page Figure 3\" width=\"509\" height=\"379\" /></a>\r\n\r\n<strong>Figure 3 Complex application interaction using multiple data engines</strong>\r\n\r\nThe result is a complex graph of application-to-database interaction – the application must go back-and-forth to the database performing many complex steps, making code difficult to develop and maintain.\r\n\r\nBy looking at databases as a static repository with relatively fixed schemas, the end result is a data structure (schema) that does not mirror application needs, perpetuating the cycle of development and database complexity over time.\r\n<h3><strong>Working with a Distributed Database Cluster</strong></h3>\r\nThis problem is significant, but there is yet another entire dimension to the problem. Today, applications and data sources are driving a Big Data explosion. This necessitates a <em>distributed database cluster</em> of one form or another to handle the load. Implementation of a database cluster requires <em>horizontal partitioning</em> of the data across multiple servers. Such partitioning, whether in a relational, NoSQL or NewSQL database engine, segments the data by a <em>key</em> across the various nodes (servers) in the cluster. This is typically done using a hash algorithm, and is a technique called <em>database sharding</em>.\r\n\r\nDatabase sharding can be extremely effective for horizontal scaling, as data read and write operations can be spread across many servers. However, partitioning data by a given key is good for some use cases – and is often bad for many others. The result is inefficient <em>distributed operations</em>, operations that can be slower than a single monolithic database.\r\n<h3><strong>Use of an In-Memory Cache</strong></h3>\r\nOften to get around such situations, architects and developers will implement an <em>in-memory caching</em> solution for these situations. This again can improve performance, but maintaining <em>cache consistency</em> is similar in nature to the de-normalization technique described above. In essence a cache is yet another copy of the data – one that must be maintained by the developer.\r\n<h3><strong>Aggregate Data Drives Operational Intelligence</strong></h3>\r\nThe final area contributing database and application complexity is the need for <em>aggregate data</em>. A key factor in the Big Data realm is to extract meaning from data to support <em>actionable decisions</em> through <em>operational intelligence.</em>\r\n\r\nAggregate (or summarized) data gives <em>meaning</em> to Big Data, from a variety of sources (including transactional systems). This data can be used for a many purposes, including dashboards, static reports and feeds to other systems and processes. Typically aggregate data is generated through the process of scanning large amounts of data in a given database.  This is a compute-intensive process and can put a large burden on source transactional systems.\r\n<h3><strong>The Wrong Way to Look at Databases</strong></h3>\r\nWhen addressing these problems, we need to take a step back. Is it possible that these critical issues can be attributed to looking at databases the <em>wrong way?</em>\r\n\r\nThe current view of the data infrastructure can be summarized by these points:\r\n\r\n-    Considering a database as a static repository;\r\n-    Relying on <em>fixed schemas</em> that do not directly reflect application needs;\r\n-    Continuing the viscous cycle of <em>adding complexity</em> to the data architecture, placing increasing burden on application functionality and developers.\r\n<h3><strong>An Agile View of Big Data</strong></h3>\r\nWhat is needed is an <i>agile</i> view of Big Data. Instead of looking at a database as a <i>static</i> <i>repository</i>, in an agile Big Data infrastructure data is considered as a <i>dynamic</i> <i>stream</i>.\r\n\r\n<a href=\"/wp-content/uploads/2014/07/AgilData-landing-page-Figure-4.jpg\"><img src=\"/wp-content/uploads/2014/07/AgilData-landing-page-Figure-4.jpg\" alt=\"AgilData landing page Figure 4\" width=\"550\" height=\"383\" /></a>\r\n\r\n<strong>Figure 4 An agile view of Big Data</strong>\r\n\r\nWhen considering data in an agile stream, it is possible to easily and quickly solve many problems, in a way that eases complexity for developers, yet greatly increasing the capabilities of the Big Data infrastructure. A dynamic, agile stream of data can yield an agile view of Big Data that matches application needs exactly, can scale, and can provide answers and meaning <em>now</em>, in real time.\r\n<h2>Introducing AgilData®</h2>\r\nCodeFutures, one of the leading innovators in scalable database systems, has been working hard on this problem for years.  Our team of technical architects – with extensive experience and knowledge in databases and scalable systems – has been as unsatisfied with the status quo of database systems. Thus we developed an innovative new Big Data platform to address the problem: AgilData®. AgilData® is more than “just another database” – it is an entirely new way of looking at, and working with your data.\r\n<h1><strong>Interested in finding out more?</strong></h1>\r\n• Read the <strong><a href=\"http://www.codefutures.com/agile-data-white-paper/\">White Paper Here</a></strong>.\r\n\r\n• Be the first to try AgilData®! <strong><a href=\"/agile-data-white-paper/#signup\">Apply Here</a> </strong>to participate in our limited private beta.\r\n\r\n• Get the open source code for <strong><a href=\"http://www.mapdb.org/\" target=\"_blank\">MapDB Here</a></strong>', 'AgilData', '', 'draft', 'open', 'open', '', '', '', '', '2015-05-22 13:24:54', '2015-05-22 19:24:54', '', '0', 'http://www.agildata.com/?page_id=149', '0', 'page', '', '0');
INSERT INTO `wpag_posts` VALUES('150', '5', '2015-05-22 13:24:02', '2015-05-22 19:24:02', '', 'AgilData', '', 'inherit', 'open', 'open', '', '149-revision-v1', '', '', '2015-05-22 13:24:02', '2015-05-22 19:24:02', '', '149', 'http://www.agildata.com/149-revision-v1/', '0', 'revision', '', '0');
INSERT INTO `wpag_posts` VALUES('151', '5', '2015-05-22 13:24:45', '2015-05-22 19:24:45', '<a href=\"/wp-content/uploads/2014/07/AgilData-landing-page-graphic.jpg\"><img src=\"/wp-content/uploads/2014/07/AgilData-landing-page-graphic.jpg\" alt=\"AgilData landing page graphic\" width=\"590\" height=\"252\" /></a>\r\n<h2>Have we been Looking at Databases Wrong all this Time?</h2>\r\nToday’s databases are typically used as <em>static</em> repositories. This is a totally understandable, it is the historical way we consider a database – as  a persistent repository for our data.\r\n\r\nBut does this really meet our needs, in today’s Big Data environment?\r\n\r\nThis approach is definitely limited, through the view of a database as a static repository, with hard-to-change schemas, and primarily a source of historical data.\r\n\r\n<a href=\"/wp-content/uploads/2014/07/AgilData-landing-page-Figure-1.jpg\"><img src=\"/wp-content/uploads/2014/07/AgilData-landing-page-Figure-1.jpg\" alt=\"AgilData landing page Figure 1\" width=\"486\" height=\"250\" /></a>\r\n\r\n<strong>Figure 1 A typical static database schema</strong>\r\n<h3><strong>New Requirements Drive Application Complexity</strong></h3>\r\nAs requirements evolve and new features are adding, the data structure invariably becomes more complex. At the same time application data is growing, this also adds to the Big Data challenge over time. Along with the new requirements and schema complexity, the application code typically gets<em> far more complex</em>. Not only does the application get more complex, the database typically experiences significant performance degradation, given that the schema and query complexity results in more interaction and lower efficiency when interacting with the database.\r\n\r\n<a href=\"/wp-content/uploads/2014/07/AgilData-landing-page-Figure-2.jpg\"><img src=\"/wp-content/uploads/2014/07/AgilData-landing-page-Figure-2.jpg\" alt=\"AgilData landing page Figure 2\" width=\"492\" height=\"358\" /></a>\r\n\r\n<strong> Figure 2 Changing requirements drive schema complexity, performance degradation</strong>\r\n<h3><strong>Resorting to Multiple Data Engines to Improve Performance</strong></h3>\r\nToday developers have a large array of database engines to choose from. To address the problem of performance degradation and complexity, organizations often resort to having <em>multiple</em> database engines for a single application, using one or more new engines that support performance and data requirements more closely. While it is true that NoSQL/NewSQL engines provide a more flexible schema approach, it is still easy to get into trouble, and most importantly to have difficulty in <em>extracting</em> meaning from these “schema-less” repositories.\r\n\r\n<a href=\"/wp-content/uploads/2014/07/AgilData-landing-page-Figure-3.jpg\"><img src=\"/wp-content/uploads/2014/07/AgilData-landing-page-Figure-3.jpg\" alt=\"AgilData landing page Figure 3\" width=\"509\" height=\"379\" /></a>\r\n\r\n<strong>Figure 3 Complex application interaction using multiple data engines</strong>\r\n\r\nThe result is a complex graph of application-to-database interaction – the application must go back-and-forth to the database performing many complex steps, making code difficult to develop and maintain.\r\n\r\nBy looking at databases as a static repository with relatively fixed schemas, the end result is a data structure (schema) that does not mirror application needs, perpetuating the cycle of development and database complexity over time.\r\n<h3><strong>Working with a Distributed Database Cluster</strong></h3>\r\nThis problem is significant, but there is yet another entire dimension to the problem. Today, applications and data sources are driving a Big Data explosion. This necessitates a <em>distributed database cluster</em> of one form or another to handle the load. Implementation of a database cluster requires <em>horizontal partitioning</em> of the data across multiple servers. Such partitioning, whether in a relational, NoSQL or NewSQL database engine, segments the data by a <em>key</em> across the various nodes (servers) in the cluster. This is typically done using a hash algorithm, and is a technique called <em>database sharding</em>.\r\n\r\nDatabase sharding can be extremely effective for horizontal scaling, as data read and write operations can be spread across many servers. However, partitioning data by a given key is good for some use cases – and is often bad for many others. The result is inefficient <em>distributed operations</em>, operations that can be slower than a single monolithic database.\r\n<h3><strong>Use of an In-Memory Cache</strong></h3>\r\nOften to get around such situations, architects and developers will implement an <em>in-memory caching</em> solution for these situations. This again can improve performance, but maintaining <em>cache consistency</em> is similar in nature to the de-normalization technique described above. In essence a cache is yet another copy of the data – one that must be maintained by the developer.\r\n<h3><strong>Aggregate Data Drives Operational Intelligence</strong></h3>\r\nThe final area contributing database and application complexity is the need for <em>aggregate data</em>. A key factor in the Big Data realm is to extract meaning from data to support <em>actionable decisions</em> through <em>operational intelligence.</em>\r\n\r\nAggregate (or summarized) data gives <em>meaning</em> to Big Data, from a variety of sources (including transactional systems). This data can be used for a many purposes, including dashboards, static reports and feeds to other systems and processes. Typically aggregate data is generated through the process of scanning large amounts of data in a given database.  This is a compute-intensive process and can put a large burden on source transactional systems.\r\n<h3><strong>The Wrong Way to Look at Databases</strong></h3>\r\nWhen addressing these problems, we need to take a step back. Is it possible that these critical issues can be attributed to looking at databases the <em>wrong way?</em>\r\n\r\nThe current view of the data infrastructure can be summarized by these points:\r\n\r\n-    Considering a database as a static repository;\r\n-    Relying on <em>fixed schemas</em> that do not directly reflect application needs;\r\n-    Continuing the viscous cycle of <em>adding complexity</em> to the data architecture, placing increasing burden on application functionality and developers.\r\n<h3><strong>An Agile View of Big Data</strong></h3>\r\nWhat is needed is an <i>agile</i> view of Big Data. Instead of looking at a database as a <i>static</i> <i>repository</i>, in an agile Big Data infrastructure data is considered as a <i>dynamic</i> <i>stream</i>.\r\n\r\n<a href=\"/wp-content/uploads/2014/07/AgilData-landing-page-Figure-4.jpg\"><img src=\"/wp-content/uploads/2014/07/AgilData-landing-page-Figure-4.jpg\" alt=\"AgilData landing page Figure 4\" width=\"550\" height=\"383\" /></a>\r\n\r\n<strong>Figure 4 An agile view of Big Data</strong>\r\n\r\nWhen considering data in an agile stream, it is possible to easily and quickly solve many problems, in a way that eases complexity for developers, yet greatly increasing the capabilities of the Big Data infrastructure. A dynamic, agile stream of data can yield an agile view of Big Data that matches application needs exactly, can scale, and can provide answers and meaning <em>now</em>, in real time.\r\n<h2>Introducing AgilData®</h2>\r\nCodeFutures, one of the leading innovators in scalable database systems, has been working hard on this problem for years.  Our team of technical architects – with extensive experience and knowledge in databases and scalable systems – has been as unsatisfied with the status quo of database systems. Thus we developed an innovative new Big Data platform to address the problem: AgilData®. AgilData® is more than “just another database” – it is an entirely new way of looking at, and working with your data.\r\n<h1><strong>Interested in finding out more?</strong></h1>\r\n• Read the <strong><a href=\"http://www.codefutures.com/agile-data-white-paper/\">White Paper Here</a></strong>.\r\n\r\n• Be the first to try AgilData®! <strong><a href=\"/agile-data-white-paper/#signup\">Apply Here</a> </strong>to participate in our limited private beta.\r\n\r\n• Get the open source code for <strong><a href=\"http://www.mapdb.org/\" target=\"_blank\">MapDB Here</a></strong>', 'AgilData', '', 'inherit', 'open', 'open', '', '149-revision-v1', '', '', '2015-05-22 13:24:45', '2015-05-22 19:24:45', '', '149', 'http://www.agildata.com/149-revision-v1/', '0', 'revision', '', '0');
INSERT INTO `wpag_posts` VALUES('152', '5', '2015-05-22 13:29:17', '0000-00-00 00:00:00', '<h1>Automatic Java Code Generation of DAOs</h1>\r\n<h2>Auto Code Generation: Generate Java source code for accessing relational databases</h2>\r\nFireStorm/DAO Auto Code Generation makes Java software developers more productive by automatically generating Java source code for accessing relational databases.\r\n<h2>Auto Code Generation: Reduced complexity</h2>\r\nFireStorm/DAO auto code generation of Java provides a one-to-one mapping between Java objects and database tables, which is simpler than using a complex mapping tier.\r\n<h2>Auto Code Generation: Portable code</h2>\r\nThe FireStorm/DAO generated Java is fully portable between stand-alone Java and Enterprise Java. The code is also portable between Application Servers(ensuring no lock-in). The auto code generation conforms to the widely accepted <a href=\"/data-access-object/\">Data Access Object</a> design pattern. FireStorm/DAO does not require proprietary runtime libraries.\r\n<h2>Service-Oriented</h2>\r\nThe Java generated by FireStorm/DAO Auto Code Generation is designed for use in service-oriented architectures. The Data Access Object (DAO) classes are stateless services that can easily be exposed as transactional Session Beans and are also suitable for use as part of a Web Services architecture.\r\n<h2>Auto Code Generation: Performance</h2>\r\nFireStorm/DAO Auto Code Generation is not limited to simple single-table operations but can also leverage the power of the relational database by generating Custom DAO classes that make use of complex SQL statements including table joins. FireStorm/DAO Auto Code Generation also provides support for exposing stored procedures as Data Access Objects.\r\n<h2>Auto Code Generation: Productivity Gains</h2>\r\nGenerating Java by definition is always going to be much faster than hand coding. For reference purposes, when using FireStorm/DAO Auto Code Generation with a reasonable large (over 20 tables) database, there is approximately a twenty-fold productivity increase.\r\n<h2>Auto Code Generation: Quality</h2>\r\nGenerated Java will always have fewer errors than hand written code, due to the elimination of typos, human error, and so on. FireStorm/DAO Auto Code Generation provides a consistent approach across multiple projects, multiple development teams, and against multiple types of database product. Generating Java ensures that software developers are more likely to be focussed on the business requirements than the more mundane task of coding.\r\n<h2>Additional Resources</h2>\r\nFireStorm/DAO is a <a href=\"/products/firestorm/\">database access tool</a> based on the <a href=\"/data-access-object/\">Data Access Object</a> design pattern.\r\n<p class=\"additionalrl\"><a href=\"/products/firestorm/download/\">Download FireStorm/DAO</a></p>\r\nCodeFutures provides a free program to analyze the performance of your MySQL database.\r\n<p class=\"additionalrl\"><a href=\"/database-performance-analysis/\">Free MySQL Performance Analysis</a></p>\r\nRead about how <a href=\"/database-sharding/\">Database Sharding</a> helps many major companies to linearly scale their database applications.\r\n<p class=\"additionalrl\"><a href=\"/database-sharding-white-paper/\">Request Database Sharding White Paper</a></p>\r\ndbShards economically scales large, high transaction volume databases using <a href=\"/database-sharding/\">Database Sharding</a>.\r\n<p class=\"additionalrl\"><a href=\"/dbshards-product-presentation/\">View Introduction to dbShards Video</a></p>', 'Automatic Java Code Generation for Data Persistence', '', 'draft', 'open', 'open', '', '', '', '', '2015-05-22 13:29:17', '2015-05-22 19:29:17', '', '0', 'http://www.agildata.com/?page_id=152', '0', 'page', '', '0');
INSERT INTO `wpag_posts` VALUES('153', '5', '2015-05-22 13:29:07', '2015-05-22 19:29:07', '<h1>Automatic Java Code Generation of DAOs</h1>\r\n<h2>Auto Code Generation: Generate Java source code for accessing relational databases</h2>\r\nFireStorm/DAO Auto Code Generation makes Java software developers more productive by automatically generating Java source code for accessing relational databases.\r\n<h2>Auto Code Generation: Reduced complexity</h2>\r\nFireStorm/DAO auto code generation of Java provides a one-to-one mapping between Java objects and database tables, which is simpler than using a complex mapping tier.\r\n<h2>Auto Code Generation: Portable code</h2>\r\nThe FireStorm/DAO generated Java is fully portable between stand-alone Java and Enterprise Java. The code is also portable between Application Servers(ensuring no lock-in). The auto code generation conforms to the widely accepted <a href=\"/data-access-object/\">Data Access Object</a> design pattern. FireStorm/DAO does not require proprietary runtime libraries.\r\n<h2>Service-Oriented</h2>\r\nThe Java generated by FireStorm/DAO Auto Code Generation is designed for use in service-oriented architectures. The Data Access Object (DAO) classes are stateless services that can easily be exposed as transactional Session Beans and are also suitable for use as part of a Web Services architecture.\r\n<h2>Auto Code Generation: Performance</h2>\r\nFireStorm/DAO Auto Code Generation is not limited to simple single-table operations but can also leverage the power of the relational database by generating Custom DAO classes that make use of complex SQL statements including table joins. FireStorm/DAO Auto Code Generation also provides support for exposing stored procedures as Data Access Objects.\r\n<h2>Auto Code Generation: Productivity Gains</h2>\r\nGenerating Java by definition is always going to be much faster than hand coding. For reference purposes, when using FireStorm/DAO Auto Code Generation with a reasonable large (over 20 tables) database, there is approximately a twenty-fold productivity increase.\r\n<h2>Auto Code Generation: Quality</h2>\r\nGenerated Java will always have fewer errors than hand written code, due to the elimination of typos, human error, and so on. FireStorm/DAO Auto Code Generation provides a consistent approach across multiple projects, multiple development teams, and against multiple types of database product. Generating Java ensures that software developers are more likely to be focussed on the business requirements than the more mundane task of coding.\r\n<h2>Additional Resources</h2>\r\nFireStorm/DAO is a <a href=\"/products/firestorm/\">database access tool</a> based on the <a href=\"/data-access-object/\">Data Access Object</a> design pattern.\r\n<p class=\"additionalrl\"><a href=\"/products/firestorm/download/\">Download FireStorm/DAO</a></p>\r\nCodeFutures provides a free program to analyze the performance of your MySQL database.\r\n<p class=\"additionalrl\"><a href=\"/database-performance-analysis/\">Free MySQL Performance Analysis</a></p>\r\nRead about how <a href=\"/database-sharding/\">Database Sharding</a> helps many major companies to linearly scale their database applications.\r\n<p class=\"additionalrl\"><a href=\"/database-sharding-white-paper/\">Request Database Sharding White Paper</a></p>\r\ndbShards economically scales large, high transaction volume databases using <a href=\"/database-sharding/\">Database Sharding</a>.\r\n<p class=\"additionalrl\"><a href=\"/dbshards-product-presentation/\">View Introduction to dbShards Video</a></p>', 'Automatic Java Code Generation for Data Persistence', '', 'inherit', 'open', 'open', '', '152-revision-v1', '', '', '2015-05-22 13:29:07', '2015-05-22 19:29:07', '', '152', 'http://www.agildata.com/152-revision-v1/', '0', 'revision', '', '0');
INSERT INTO `wpag_posts` VALUES('154', '5', '2015-05-22 13:32:00', '0000-00-00 00:00:00', '<h2>CodeFutures | Technical Support</h2>\r\n<h3>FireStorm/DAO Annual Subscriptions</h3>\r\nFireStorm/DAO Annual Subscriptions can be purchased directly over the Web at CodeFutures <a href=\"/purchase/\">online store</a> as individual developer support licenses (with the exception of FireStorm/DAO OEM Edition).\r\n\r\nFireStorm/DAO Annual Subscriptions includes 12 months of email support and all available upgrades, including early access to all new product releases.\r\n\r\n&nbsp;\r\n<h3>FireStorm/DAO FAQs</h3>\r\nCheck the <a href=\"/products/firestorm/faq/\">FAQs</a> for answers to the most common technical support questions on FireStorm/DAO.\r\n\r\n&nbsp;\r\n<h3>FireStorm/DAO Technical Tutorial</h3>\r\nA technical <a href=\"/products/firestorm/tutorial/\">tutorial</a> is available for FireStorm/DAO Enterprise Edition. The objective of the tutorial is to give a simple, step-by-step guide.\r\n\r\n&nbsp;\r\n<h3>Email Technical Support: dbShards, FireStorm/DAO</h3>\r\nTechnical support is available at no cost during FireStorm/DAO evaluations. However, existing customers with FireStorm/DAO Annual Developer Support always have priority.\r\n\r\nEmail Technical Support is available at all times for dbShards and FireStorm/SDO deployments.\r\n\r\nFor support on FireStorm/DAO, please email <a href=\"mailto:support@codefutures.com\">support@codefutures.com</a>\r\n\r\n&nbsp;', 'Customer and Technical Support, FireStorm/DAO Support, dbShards Support', '', 'draft', 'open', 'open', '', 'support', '', '', '2015-05-22 13:32:00', '2015-05-22 19:32:00', '', '0', 'http://www.agildata.com/?page_id=154', '0', 'page', '', '0');
INSERT INTO `wpag_posts` VALUES('155', '5', '2015-05-22 13:31:51', '2015-05-22 19:31:51', '<h2>CodeFutures | Technical Support</h2>\r\n<h3>FireStorm/DAO Annual Subscriptions</h3>\r\nFireStorm/DAO Annual Subscriptions can be purchased directly over the Web at CodeFutures <a href=\"/purchase/\">online store</a> as individual developer support licenses (with the exception of FireStorm/DAO OEM Edition).\r\n\r\nFireStorm/DAO Annual Subscriptions includes 12 months of email support and all available upgrades, including early access to all new product releases.\r\n\r\n&nbsp;\r\n<h3>FireStorm/DAO FAQs</h3>\r\nCheck the <a href=\"/products/firestorm/faq/\">FAQs</a> for answers to the most common technical support questions on FireStorm/DAO.\r\n\r\n&nbsp;\r\n<h3>FireStorm/DAO Technical Tutorial</h3>\r\nA technical <a href=\"/products/firestorm/tutorial/\">tutorial</a> is available for FireStorm/DAO Enterprise Edition. The objective of the tutorial is to give a simple, step-by-step guide.\r\n\r\n&nbsp;\r\n<h3>Email Technical Support: dbShards, FireStorm/DAO</h3>\r\nTechnical support is available at no cost during FireStorm/DAO evaluations. However, existing customers with FireStorm/DAO Annual Developer Support always have priority.\r\n\r\nEmail Technical Support is available at all times for dbShards and FireStorm/SDO deployments.\r\n\r\nFor support on FireStorm/DAO, please email <a href=\"mailto:support@codefutures.com\">support@codefutures.com</a>\r\n\r\n&nbsp;', 'Customer and Technical Support, FireStorm/DAO Support, dbShards Support', '', 'inherit', 'open', 'open', '', '154-revision-v1', '', '', '2015-05-22 13:31:51', '2015-05-22 19:31:51', '', '154', 'http://www.agildata.com/154-revision-v1/', '0', 'revision', '', '0');
INSERT INTO `wpag_posts` VALUES('156', '5', '2015-05-22 13:36:08', '0000-00-00 00:00:00', '<h1>DAO Code</h1>\r\n<h2>Overview of DAO Code types</h2>\r\nThere are three types of DAO code: Table DAO code, view DAO code, and Custom DAO code.\r\n<p class=\"additionalrl\"><a href=\"/products/firestorm/download/\">Generate DAOs: Download FireStorm/DAO</a></p>\r\n\r\n<h2>Table DAO Code</h2>\r\nTable DAO code is the most widely used Data Access Object. Each Table DAO represents a single table and contains methods to insert, update, and delete single rows using the following signatures (using an example Customer table):\r\n<pre class=\"prettyprint\">public void insert(Customer customer) throws CustomerDaoException\r\n\r\npublic void update(CustomerPk pk, Customer customer) throws CustomerDaoException\r\n\r\npublic void delete(CustomerPk pk) throws CustomerDaoException\r\n</pre>\r\nIn addition to this, there are also numerous \'finder\' methods generated. FireStorm/DAO creates default finders when you first import a schema but these are fully customizable. Some examples of finder methods:\r\n<pre class=\"prettyprint\">public Customer findByPrimaryKey(CustomerPk pk) throws CustomerDaoException;\r\n\r\npublic Customer[] findWhereLastNameEquals(String lastName) throws CustomerDaoException;\r\n\r\npublic Customer[] findByCountry(int countryId) throws CustomerDaoException;</pre>\r\n<h2>View DAO Code</h2>\r\nThe View DAO is generated for each view in the database. This DAO code offers the same finder methods as the Table DAO code but obviously does not\r\nprovide the insert, update, and delete operations because views are read-only.\r\n<h2>Custom DAO Code</h2>\r\nCustom DAO code is used when you have a complex SQL query that goes beyond the simple CRUD (create, update, delete) operations on a single table.\r\nExamples would be SQL queries that perform a join between several tables, queries that performs aggregration using the GROUP BY operator, and\r\nbulk update or delete queries.\r\n\r\nExample queries that the Custom DAO code feature in FireStorm/dAO can support:\r\n<pre class=\"prettyprint\">SELECT a.*, b.* FROM a, b WHERE a.id = b.id AND b.install_date between ? and ?\r\n\r\nDELETE customer WHERE status = ? AND create_date = ?\r\n\r\nSELECT product, count(*) FROM product WHERE download_date &gt; ? GROUP BY product</pre>\r\n<h2>Sample code for calling the generated DAO classes</h2>\r\n<pre class=\"prettyprint\">// obtain DAO instance for the Customer table\r\n\r\nCustomerDao dao = CustomerDaoFactory.create();\r\n\r\n// create a new customer\r\n\r\nCustomer newCust = new Customer();\r\n\r\nnewCust.setEmail( \"joe@bloggs.com\" );\r\n\r\nnewCust.setFirstName( \"joe\" );\r\n\r\nnewCust.setLastName( \"bloggs\" );\r\n\r\n// insert into the database\r\n\r\ndao.insert( newCust );\r\n\r\n// perform a query\r\n\r\nCustomer cust[] = dao.findWhereRegionEquals( \"US\" );</pre>\r\n&nbsp;\r\n<h2>Additional Resources</h2>\r\nFireStorm/DAO is a <a href=\"/products/firestorm/\">database access tool</a> based on the <a href=\"/data-access-object/\">Data Access Object</a> design pattern.\r\n<p class=\"additionalrl\"><a href=\"/products/firestorm/download/\">Download FireStorm/DAO</a></p>\r\nCodeFutures provides a free program to analyze the performance of your MySQL database.\r\n<p class=\"additionalrl\"><a href=\"/database-performance-analysis/\">Free MySQL Performance Analysis</a></p>\r\nRead about how <a href=\"/database-sharding/\">Database Sharding</a> helps many major companies to linearly scale their database applications.\r\n<p class=\"additionalrl\"><a href=\"/database-sharding-white-paper/\">Request Database Sharding White Paper</a></p>\r\ndbShards economically scales large, high transaction volume databases using <a href=\"/database-sharding/\">Database Sharding</a>.\r\n<p class=\"additionalrl\"><a href=\"/dbshards-product-presentation/\">View Introduction to dbShards Video</a></p>', 'DAO Code', '', 'draft', 'open', 'open', '', '', '', '', '2015-05-22 13:36:08', '2015-05-22 19:36:08', '', '0', 'http://www.agildata.com/?page_id=156', '0', 'page', '', '0');
INSERT INTO `wpag_posts` VALUES('157', '5', '2015-05-22 13:35:53', '2015-05-22 19:35:53', '<h1>DAO Code</h1>\r\n<h2>Overview of DAO Code types</h2>\r\nThere are three types of DAO code: Table DAO code, view DAO code, and Custom DAO code.\r\n<p class=\"additionalrl\"><a href=\"/products/firestorm/download/\">Generate DAOs: Download FireStorm/DAO</a></p>\r\n\r\n<h2>Table DAO Code</h2>\r\nTable DAO code is the most widely used Data Access Object. Each Table DAO represents a single table and contains methods to insert, update, and delete single rows using the following signatures (using an example Customer table):\r\n<pre class=\"prettyprint\">public void insert(Customer customer) throws CustomerDaoException\r\n\r\npublic void update(CustomerPk pk, Customer customer) throws CustomerDaoException\r\n\r\npublic void delete(CustomerPk pk) throws CustomerDaoException\r\n</pre>\r\nIn addition to this, there are also numerous \'finder\' methods generated. FireStorm/DAO creates default finders when you first import a schema but these are fully customizable. Some examples of finder methods:\r\n<pre class=\"prettyprint\">public Customer findByPrimaryKey(CustomerPk pk) throws CustomerDaoException;\r\n\r\npublic Customer[] findWhereLastNameEquals(String lastName) throws CustomerDaoException;\r\n\r\npublic Customer[] findByCountry(int countryId) throws CustomerDaoException;</pre>\r\n<h2>View DAO Code</h2>\r\nThe View DAO is generated for each view in the database. This DAO code offers the same finder methods as the Table DAO code but obviously does not\r\nprovide the insert, update, and delete operations because views are read-only.\r\n<h2>Custom DAO Code</h2>\r\nCustom DAO code is used when you have a complex SQL query that goes beyond the simple CRUD (create, update, delete) operations on a single table.\r\nExamples would be SQL queries that perform a join between several tables, queries that performs aggregration using the GROUP BY operator, and\r\nbulk update or delete queries.\r\n\r\nExample queries that the Custom DAO code feature in FireStorm/dAO can support:\r\n<pre class=\"prettyprint\">SELECT a.*, b.* FROM a, b WHERE a.id = b.id AND b.install_date between ? and ?\r\n\r\nDELETE customer WHERE status = ? AND create_date = ?\r\n\r\nSELECT product, count(*) FROM product WHERE download_date &gt; ? GROUP BY product</pre>\r\n<h2>Sample code for calling the generated DAO classes</h2>\r\n<pre class=\"prettyprint\">// obtain DAO instance for the Customer table\r\n\r\nCustomerDao dao = CustomerDaoFactory.create();\r\n\r\n// create a new customer\r\n\r\nCustomer newCust = new Customer();\r\n\r\nnewCust.setEmail( \"joe@bloggs.com\" );\r\n\r\nnewCust.setFirstName( \"joe\" );\r\n\r\nnewCust.setLastName( \"bloggs\" );\r\n\r\n// insert into the database\r\n\r\ndao.insert( newCust );\r\n\r\n// perform a query\r\n\r\nCustomer cust[] = dao.findWhereRegionEquals( \"US\" );</pre>\r\n&nbsp;\r\n<h2>Additional Resources</h2>\r\nFireStorm/DAO is a <a href=\"/products/firestorm/\">database access tool</a> based on the <a href=\"/data-access-object/\">Data Access Object</a> design pattern.\r\n<p class=\"additionalrl\"><a href=\"/products/firestorm/download/\">Download FireStorm/DAO</a></p>\r\nCodeFutures provides a free program to analyze the performance of your MySQL database.\r\n<p class=\"additionalrl\"><a href=\"/database-performance-analysis/\">Free MySQL Performance Analysis</a></p>\r\nRead about how <a href=\"/database-sharding/\">Database Sharding</a> helps many major companies to linearly scale their database applications.\r\n<p class=\"additionalrl\"><a href=\"/database-sharding-white-paper/\">Request Database Sharding White Paper</a></p>\r\ndbShards economically scales large, high transaction volume databases using <a href=\"/database-sharding/\">Database Sharding</a>.\r\n<p class=\"additionalrl\"><a href=\"/dbshards-product-presentation/\">View Introduction to dbShards Video</a></p>', 'DAO Code', '', 'inherit', 'open', 'open', '', '156-revision-v1', '', '', '2015-05-22 13:35:53', '2015-05-22 19:35:53', '', '156', 'http://www.agildata.com/156-revision-v1/', '0', 'revision', '', '0');
INSERT INTO `wpag_posts` VALUES('158', '5', '2015-05-22 13:38:30', '0000-00-00 00:00:00', '<h1>DAO Design Pattern</h1>\r\n<h2>Data Access Object Design Pattern</h2>\r\nThe Data Access Object (DAO) layer is an essential part of good application architecture. Business applications almost always need access to data from relational or object databases and the Java platform offers many techniques for accessing\r\nthis data. The oldest and most mature technique is to use the Java Database Connectivity (JDBC)\r\nAPI, which provides the capability to execute SQL queries against a database\r\nand then fetch the results, one column at a time. Although this API provides\r\neverything a developer needs to access data and to persist application state,\r\nit is a cumbersome API to develop against - which makes a code generator particularly useful.\r\n\r\nJava 2 Enterprise Edition (J2EE) offers a newer persistence framework in the\r\nform of <a class=\"landinglink\" href=\"/entity-beans/\">Entity Beans</a>, a subset of the Enterprise JavaBean (EJB) framework.\r\nAlthough there have been many\r\nimprovements in the more recent EJB 2.0 specification, many developers are now\r\nlooking to alternative persistence frameworks for their Data Access Objects, such as Java Persistence API (JPA) and <a href=\"/hibernate/\">Hibernate</a>.\r\n<h2>The Benefits of Data Access Objects</h2>\r\nThe Data Access Object design pattern provides a technique for separating\r\n<a href=\"/object-persistence/\">object persistence</a> and data access logic from any particular persistence\r\nmechanism or API. There are clear benefits to this approach from an\r\narchitectural perspective. The Data Access Object approach provides flexibility to change an\r\napplication\'s persistence mechanism over time without the need to re-engineer\r\napplication logic that interacts with the Data Access Object tier. For example, there may be\r\nperformance benefits in changing an application\'s performance mechanism from\r\nusing Entity Beans to using direct JDBC calls from a session bean, or even a\r\nmove to an alternative persistence framework, such as JDO. Without a Data Access Object tier\r\nin place, this sort of transition would require extensive re-engineering of\r\nexisting code.\r\n\r\nThe Data Access Object design pattern also provides a simple, consistent API for data access\r\nthat does not require knowledge of JDBC, EJB, Hibernate, or JDO interfaces. A typical Data Access Object\r\ninterface is shown below.\r\n<pre class=\"prettyprint\">public interface CustomerDAO\r\n\r\n{\r\n\r\npublic void insert(Customer customer)\r\n\r\nthrows CustomerDAOException;\r\n  public void update(CustomerPK pk, Customer customer)\r\n\r\nthrows CustomerDAOException;\r\n\r\npublic void delete(CustomerPK pk)\r\n\r\nthrows CustomerDAOException;\r\n\r\npublic Customer[] findAll()\r\n\r\nthrows CustomerDAOException;\r\n\r\npublic Customer findByPrimaryKey(String email)\r\n\r\nthrows CustomerDAOException;\r\n\r\npublic Customer[] findByCompany(int companyId)\r\n\r\nthrows CustomerDAOException;\r\n\r\n}</pre>\r\nIt is important to note that Data Access Object does not just apply to simple mappings of one object to one relational table,\r\nbut also allows complex queries to be performed and allows for stored procedures and database views to be mapped\r\ninto Java data structures.\r\n<h2>Minimizing the Impact of Moving to Data Access Objects</h2>\r\nCodeFutures\' objective is to minimize the importance of the main argument\r\nagainst using Data Access Objects: the fact that it requires a significant amount of\r\nrepetitive source code to be produced for no immediate advantage over using\r\nJDBC, EJB, or JDO directly. For many developers, this disadvantage is good\r\nenough reason to ignore the long-term benefits of using a framework-neutral\r\nAPI, especially where there are strict project deadlines. Without the code\r\ngeneration advantages of FireStorm/DAO, it is not easy to justify to a project\r\nmanager or project sponsor the time and cost of manually writing DAO code,\r\nregardless of any future benefits they may see.\r\n<h2>Data Access Object Code Generation</h2>\r\nCodeFutures\' solution to the manual coding problem is to automate the\r\nproduction of a Data Access Object tier, as well as automating the actual implementation logic\r\nfor whichever persistence framework is deemed appropriate for an application.\r\nThis approach is easy to adopt because almost all databases use a standard\r\nlanguage for defining their structure (SQL).\r\n<h2>Recommended Reading on Data Access Objects</h2>\r\nAdditional useful information on Data Access Objects is available here:\r\n\r\n<a href=\"http://java.sun.com/blueprints/corej2eepatterns/Patterns/DataAccessObject.html\" target=\"_blank\">http://java.sun.com/blueprints/corej2eepatterns/Patterns/DataAccessObject.html </a>\r\n\r\n<a href=\"http://www.corej2eepatterns.com/Patterns2ndEd/DataAccessObject.htm\" target=\"_blank\">http://www.corej2eepatterns.com/Patterns2ndEd/DataAccessObject.htm </a>\r\n\r\nThe best introduction to the general topic of core <a class=\"landinglink\" href=\"/j2ee-design-pattern/\">J2EE design pattern</a>s is <a href=\"http://www.amazon.com/exec/obidos/tg/detail/-/0131422464/qid=1110010875/sr=8-1/ref=sr_8_xs_ap_i1_xgl14/102-4587541-1528911\">Core J2EE Patterns: Best Practices and Design Strategies</a>\r\nby Dan Malks, Deepak Alur, and John Crupi.\r\n\r\n&nbsp;\r\n<h2>Additional Resources</h2>\r\nFireStorm/DAO is a <a href=\"/products/firestorm/\">database access tool</a> based on the <a href=\"/data-access-object/\">Data Access Object</a> design pattern.\r\n<p class=\"additionalrl\"><a href=\"/products/firestorm/download/\">Download FireStorm/DAO</a></p>\r\nCodeFutures provides a free program to analyze the performance of your MySQL database.\r\n<p class=\"additionalrl\"><a href=\"/database-performance-analysis/\">Free MySQL Performance Analysis</a></p>\r\nRead about how <a href=\"/database-sharding/\">Database Sharding</a> helps many major companies to linearly scale their database applications.\r\n<p class=\"additionalrl\"><a href=\"/database-sharding-white-paper/\">Request Database Sharding White Paper</a></p>\r\ndbShards economically scales large, high transaction volume databases using <a href=\"/database-sharding/\">Database Sharding</a>.\r\n<p class=\"additionalrl\"><a href=\"/dbshards-product-presentation/\">View Introduction to dbShards Video</a></p>', 'DAO Design Pattern', '', 'draft', 'open', 'open', '', '', '', '', '2015-05-22 13:38:30', '2015-05-22 19:38:30', '', '0', 'http://www.agildata.com/?page_id=158', '0', 'page', '', '0');
INSERT INTO `wpag_posts` VALUES('159', '5', '2015-05-22 13:38:23', '2015-05-22 19:38:23', '<h1>DAO Design Pattern</h1>\r\n<h2>Data Access Object Design Pattern</h2>\r\nThe Data Access Object (DAO) layer is an essential part of good application architecture. Business applications almost always need access to data from relational or object databases and the Java platform offers many techniques for accessing\r\nthis data. The oldest and most mature technique is to use the Java Database Connectivity (JDBC)\r\nAPI, which provides the capability to execute SQL queries against a database\r\nand then fetch the results, one column at a time. Although this API provides\r\neverything a developer needs to access data and to persist application state,\r\nit is a cumbersome API to develop against - which makes a code generator particularly useful.\r\n\r\nJava 2 Enterprise Edition (J2EE) offers a newer persistence framework in the\r\nform of <a class=\"landinglink\" href=\"/entity-beans/\">Entity Beans</a>, a subset of the Enterprise JavaBean (EJB) framework.\r\nAlthough there have been many\r\nimprovements in the more recent EJB 2.0 specification, many developers are now\r\nlooking to alternative persistence frameworks for their Data Access Objects, such as Java Persistence API (JPA) and <a href=\"/hibernate/\">Hibernate</a>.\r\n<h2>The Benefits of Data Access Objects</h2>\r\nThe Data Access Object design pattern provides a technique for separating\r\n<a href=\"/object-persistence/\">object persistence</a> and data access logic from any particular persistence\r\nmechanism or API. There are clear benefits to this approach from an\r\narchitectural perspective. The Data Access Object approach provides flexibility to change an\r\napplication\'s persistence mechanism over time without the need to re-engineer\r\napplication logic that interacts with the Data Access Object tier. For example, there may be\r\nperformance benefits in changing an application\'s performance mechanism from\r\nusing Entity Beans to using direct JDBC calls from a session bean, or even a\r\nmove to an alternative persistence framework, such as JDO. Without a Data Access Object tier\r\nin place, this sort of transition would require extensive re-engineering of\r\nexisting code.\r\n\r\nThe Data Access Object design pattern also provides a simple, consistent API for data access\r\nthat does not require knowledge of JDBC, EJB, Hibernate, or JDO interfaces. A typical Data Access Object\r\ninterface is shown below.\r\n<pre class=\"prettyprint\">public interface CustomerDAO\r\n\r\n{\r\n\r\npublic void insert(Customer customer)\r\n\r\nthrows CustomerDAOException;\r\n  public void update(CustomerPK pk, Customer customer)\r\n\r\nthrows CustomerDAOException;\r\n\r\npublic void delete(CustomerPK pk)\r\n\r\nthrows CustomerDAOException;\r\n\r\npublic Customer[] findAll()\r\n\r\nthrows CustomerDAOException;\r\n\r\npublic Customer findByPrimaryKey(String email)\r\n\r\nthrows CustomerDAOException;\r\n\r\npublic Customer[] findByCompany(int companyId)\r\n\r\nthrows CustomerDAOException;\r\n\r\n}</pre>\r\nIt is important to note that Data Access Object does not just apply to simple mappings of one object to one relational table,\r\nbut also allows complex queries to be performed and allows for stored procedures and database views to be mapped\r\ninto Java data structures.\r\n<h2>Minimizing the Impact of Moving to Data Access Objects</h2>\r\nCodeFutures\' objective is to minimize the importance of the main argument\r\nagainst using Data Access Objects: the fact that it requires a significant amount of\r\nrepetitive source code to be produced for no immediate advantage over using\r\nJDBC, EJB, or JDO directly. For many developers, this disadvantage is good\r\nenough reason to ignore the long-term benefits of using a framework-neutral\r\nAPI, especially where there are strict project deadlines. Without the code\r\ngeneration advantages of FireStorm/DAO, it is not easy to justify to a project\r\nmanager or project sponsor the time and cost of manually writing DAO code,\r\nregardless of any future benefits they may see.\r\n<h2>Data Access Object Code Generation</h2>\r\nCodeFutures\' solution to the manual coding problem is to automate the\r\nproduction of a Data Access Object tier, as well as automating the actual implementation logic\r\nfor whichever persistence framework is deemed appropriate for an application.\r\nThis approach is easy to adopt because almost all databases use a standard\r\nlanguage for defining their structure (SQL).\r\n<h2>Recommended Reading on Data Access Objects</h2>\r\nAdditional useful information on Data Access Objects is available here:\r\n\r\n<a href=\"http://java.sun.com/blueprints/corej2eepatterns/Patterns/DataAccessObject.html\" target=\"_blank\">http://java.sun.com/blueprints/corej2eepatterns/Patterns/DataAccessObject.html </a>\r\n\r\n<a href=\"http://www.corej2eepatterns.com/Patterns2ndEd/DataAccessObject.htm\" target=\"_blank\">http://www.corej2eepatterns.com/Patterns2ndEd/DataAccessObject.htm </a>\r\n\r\nThe best introduction to the general topic of core <a class=\"landinglink\" href=\"/j2ee-design-pattern/\">J2EE design pattern</a>s is <a href=\"http://www.amazon.com/exec/obidos/tg/detail/-/0131422464/qid=1110010875/sr=8-1/ref=sr_8_xs_ap_i1_xgl14/102-4587541-1528911\">Core J2EE Patterns: Best Practices and Design Strategies</a>\r\nby Dan Malks, Deepak Alur, and John Crupi.\r\n\r\n&nbsp;\r\n<h2>Additional Resources</h2>\r\nFireStorm/DAO is a <a href=\"/products/firestorm/\">database access tool</a> based on the <a href=\"/data-access-object/\">Data Access Object</a> design pattern.\r\n<p class=\"additionalrl\"><a href=\"/products/firestorm/download/\">Download FireStorm/DAO</a></p>\r\nCodeFutures provides a free program to analyze the performance of your MySQL database.\r\n<p class=\"additionalrl\"><a href=\"/database-performance-analysis/\">Free MySQL Performance Analysis</a></p>\r\nRead about how <a href=\"/database-sharding/\">Database Sharding</a> helps many major companies to linearly scale their database applications.\r\n<p class=\"additionalrl\"><a href=\"/database-sharding-white-paper/\">Request Database Sharding White Paper</a></p>\r\ndbShards economically scales large, high transaction volume databases using <a href=\"/database-sharding/\">Database Sharding</a>.\r\n<p class=\"additionalrl\"><a href=\"/dbshards-product-presentation/\">View Introduction to dbShards Video</a></p>', 'DAO Design Pattern', '', 'inherit', 'open', 'open', '', '158-revision-v1', '', '', '2015-05-22 13:38:23', '2015-05-22 19:38:23', '', '158', 'http://www.agildata.com/158-revision-v1/', '0', 'revision', '', '0');
INSERT INTO `wpag_posts` VALUES('251', '1', '2015-05-29 15:09:33', '2015-05-29 21:09:33', 'a:6:{s:8:\"location\";a:1:{i:0;a:1:{i:0;a:3:{s:5:\"param\";s:12:\"options_page\";s:8:\"operator\";s:2:\"==\";s:5:\"value\";s:16:\"acf-options-body\";}}}s:8:\"position\";s:6:\"normal\";s:5:\"style\";s:7:\"default\";s:15:\"label_placement\";s:3:\"top\";s:21:\"instruction_placement\";s:5:\"label\";s:14:\"hide_on_screen\";s:0:\"\";}', 'Buttons text and Links', 'buttons-text-and-links', 'publish', 'closed', 'closed', '', 'group_5568d54fdf86b', '', '', '2015-05-29 15:09:33', '2015-05-29 21:09:33', '', '0', 'http://www.agildata.com/?post_type=acf-field-group&#038;p=251', '0', 'acf-field-group', '', '0');
INSERT INTO `wpag_posts` VALUES('161', '5', '2015-05-22 13:42:31', '0000-00-00 00:00:00', '<h1>DAO Design Pattern: A Core J2EE Design Pattern</h1>\r\n<h2>DAO Design Pattern</h2>\r\nBusiness applications almost always need access to data from relational or\r\nobject databases and the Java platform offers many techniques for accessing\r\nthis data, the best of wich use the DAO Design Pattern. The oldest and most mature technique is to use the Java Database Connectivity (JDBC)\r\nAPI, which provides the capability to execute SQL queries against a database\r\nand then fetch the results, one column at a time. Although this API provides\r\neverything a developer needs to access data and to persist application state,\r\nit is a cumbersome API to develop against - which makes a code generator particularly useful.\r\n\r\nJava 2 Enterprise Edition (J2EE) offers a newer persistence framework in the\r\nform of Entity Beans, a subset of the Enterprise JavaBean (EJB) framework.\r\nAlthough there have been many\r\nimprovements in the more recent EJB 2.0 specification, many developers are now\r\nlooking to alternative persistence frameworks, such as Java Persistence API (JPA) and <a href=\"/hibernate/\">Hibernate DAO</a>.\r\n<h2>The Benefits of the DAO Design Pattern</h2>\r\nThe DAO Design Pattern provides a technique for separating\r\nobject persistence and data access logic from any particular persistence\r\nmechanism or API. There are clear benefits to this approach from an\r\narchitectural perspective. The DAO Design Pattern approach provides flexibility to change an\r\napplication\'s persistence mechanism over time without the need to re-engineer\r\napplication logic that interacts with the DAO Design Pattern tier. For example, there may be\r\nperformance benefits in changing an application\'s performance mechanism from\r\nusing Entity Beans to using direct JDBC calls from a session bean, or even a\r\nmove to an alternative persistence framework, such as Hibernate. Without a DAO Design Pattern tier\r\nin place, this sort of transition would require extensive re-engineering of\r\nexisting code.\r\n\r\nThe DAO design pattern also provides a simple, consistent API for data access\r\nthat does not require knowledge of JDBC or EJB interfaces. A typical DAO Design Pattern\r\ninterface is shown below.\r\n<pre class=\"prettyprint\">public interface CustomerDAO\r\n{\r\n  public void insert(Customer customer)\r\n   throws CustomerDAOException;\r\n\r\n  public void update(CustomerPK pk, Customer customer)\r\n   throws CustomerDAOException;\r\n\r\n  public void delete(CustomerPK pk)\r\n   throws CustomerDAOException;\r\n\r\n  public Customer[] findAll()\r\n   throws CustomerDAOException;\r\n\r\n  public Customer findByPrimaryKey(String email)\r\n   throws CustomerDAOException;\r\n\r\n  public Customer[] findByCompany(int companyId)\r\n   throws CustomerDAOException;\r\n}\r\n</pre>\r\nIt is important to note that DAO J2EE Design Pattern does not just apply to simple mappings of one object to one relational table,\r\nbut also allows complex queries to be performed and allows for stored procedures and database views to be mapped\r\ninto Java data structures.\r\n\r\nAdditional useful information on Data Access Objects J2EE Design Pattern is available here;\r\n\r\n<a href=\"http://java.sun.com/blueprints/corej2eepatterns/Patterns/DataAccessObject.html\" target=\"_blank\">http://java.sun.com/blueprints/corej2eepatterns/Patterns/DataAccessObject.html </a>\r\n\r\n<a href=\"http://www.corej2eepatterns.com/Patterns2ndEd/DataAccessObject.htm\" target=\"_blank\">http://www.corej2eepatterns.com/Patterns2ndEd/DataAccessObject.htm </a>\r\n<h2>Minimizing the Impact of Moving to DAO</h2>\r\nCodeFutures\' objective is to minimize the importance of the main argument\r\nagainst using DAO Design Pattern: the fact that it requires a significant amount of\r\nrepetitive source code to be produced for no immediate advantage over using\r\nJDBC or EJB directly. For many developers, this disadvantage is good\r\nenough reason to ignore the long-term benefits of using a framework-neutral\r\nAPI, especially where there are strict project deadlines. Without the code\r\ngeneration advantages of FireStorm/DAO, it is not easy to justify to a project\r\nmanager or project sponsor the time and cost of manually writing DAO code,\r\nregardless of any future benefits they may see.\r\n<h2>DAO Design Pattern Code Generation</h2>\r\nCodeFutures\' solution to the manual coding problem is to automate the\r\nproduction of a DAO Design Pattern tier, as well as automating the actual implementation logic\r\nfor whichever persistence framework is deemed appropriate for an application.\r\nThis approach is easy to adopt because almost all databases use a standard\r\nlanguage for defining their structure (SQL).\r\n<h2>Additional Reading on Design Patterns</h2>\r\nEJB Design Patterns by Floyd Marinescu\r\n\r\n<a href=\"http://www.theserverside.com/books/wiley/EJBDesignPatterns/index.tss\">http://www.theserverside.com/books/wiley/EJBDesignPatterns/index.tss</a>\r\n\r\nThe Hillside Group\r\n\r\n<a href=\"http://hillside.net/patterns/onlinepatterncatalog.htm\">http://hillside.net/patterns/onlinepatterncatalog.htm</a>\r\n\r\nJavaWorld list of  design pattern articles\r\n\r\n<a href=\"http://www.javaworld.com/columns/jw-java-design-patterns-index.shtml\">http://www.javaworld.com/columns/jw-java-design-patterns-index.shtml</a>\r\n\r\nThe  Design Patterns Java Companion\r\n\r\n<a href=\"http://www.patterndepot.com/put/8/JavaPatterns.htm\">http://www.patterndepot.com/put/8/JavaPatterns.htm</a>\r\n\r\nData and Object Factory\r\n\r\n<a href=\"http://www.dofactory.com/patterns/Patterns.aspx\">http://www.dofactory.com/patterns/Patterns.aspx</a>\r\n\r\nA Learning Guide To Design Patterns\r\n\r\n<a href=\"http://www.industriallogic.com/papers/learning.html\">http://www.industriallogic.com/papers/learning.html</a>\r\n\r\nDesign Patterns (good quality personal page)\r\n\r\n<a href=\"http://home.earthlink.net/huston2/dp/patterns.html\">http://home.earthlink.net/huston2/dp/patterns.html</a>\r\n<h2>Additional Resources</h2>\r\nFireStorm/DAO is a <a href=\"/products/firestorm/\">database access tool</a> based on the <a href=\"/data-access-object/\">Data Access Object</a> design pattern.\r\n<p class=\"additionalrl\"><a href=\"/products/firestorm/download/\">Download FireStorm/DAO</a></p>\r\nCodeFutures provides a free program to analyze the performance of your MySQL database.\r\n<p class=\"additionalrl\"><a href=\"/database-performance-analysis/\">Free MySQL Performance Analysis</a></p>\r\nRead about how <a href=\"/database-sharding/\">Database Sharding</a> helps many major companies to linearly scale their database applications.\r\n<p class=\"additionalrl\"><a href=\"/database-sharding-white-paper/\">Request Database Sharding White Paper</a></p>\r\ndbShards economically scales large, high transaction volume databases using <a href=\"/database-sharding/\">Database Sharding</a>.\r\n<p class=\"additionalrl\"><a href=\"/dbshards-product-presentation/\">View Introduction to dbShards Video</a></p>', 'DAO Design Pattern - A Core J2EE Design Pattern', '', 'draft', 'open', 'open', '', 'j2ee-design-pattern', '', '', '2015-05-22 13:42:31', '2015-05-22 19:42:31', '', '0', 'http://www.agildata.com/?page_id=161', '0', 'page', '', '0');
INSERT INTO `wpag_posts` VALUES('162', '5', '2015-05-22 13:42:23', '2015-05-22 19:42:23', '<h1>DAO Design Pattern: A Core J2EE Design Pattern</h1>\r\n<h2>DAO Design Pattern</h2>\r\nBusiness applications almost always need access to data from relational or\r\nobject databases and the Java platform offers many techniques for accessing\r\nthis data, the best of wich use the DAO Design Pattern. The oldest and most mature technique is to use the Java Database Connectivity (JDBC)\r\nAPI, which provides the capability to execute SQL queries against a database\r\nand then fetch the results, one column at a time. Although this API provides\r\neverything a developer needs to access data and to persist application state,\r\nit is a cumbersome API to develop against - which makes a code generator particularly useful.\r\n\r\nJava 2 Enterprise Edition (J2EE) offers a newer persistence framework in the\r\nform of Entity Beans, a subset of the Enterprise JavaBean (EJB) framework.\r\nAlthough there have been many\r\nimprovements in the more recent EJB 2.0 specification, many developers are now\r\nlooking to alternative persistence frameworks, such as Java Persistence API (JPA) and <a href=\"/hibernate/\">Hibernate DAO</a>.\r\n<h2>The Benefits of the DAO Design Pattern</h2>\r\nThe DAO Design Pattern provides a technique for separating\r\nobject persistence and data access logic from any particular persistence\r\nmechanism or API. There are clear benefits to this approach from an\r\narchitectural perspective. The DAO Design Pattern approach provides flexibility to change an\r\napplication\'s persistence mechanism over time without the need to re-engineer\r\napplication logic that interacts with the DAO Design Pattern tier. For example, there may be\r\nperformance benefits in changing an application\'s performance mechanism from\r\nusing Entity Beans to using direct JDBC calls from a session bean, or even a\r\nmove to an alternative persistence framework, such as Hibernate. Without a DAO Design Pattern tier\r\nin place, this sort of transition would require extensive re-engineering of\r\nexisting code.\r\n\r\nThe DAO design pattern also provides a simple, consistent API for data access\r\nthat does not require knowledge of JDBC or EJB interfaces. A typical DAO Design Pattern\r\ninterface is shown below.\r\n<pre class=\"prettyprint\">public interface CustomerDAO\r\n{\r\n  public void insert(Customer customer)\r\n   throws CustomerDAOException;\r\n\r\n  public void update(CustomerPK pk, Customer customer)\r\n   throws CustomerDAOException;\r\n\r\n  public void delete(CustomerPK pk)\r\n   throws CustomerDAOException;\r\n\r\n  public Customer[] findAll()\r\n   throws CustomerDAOException;\r\n\r\n  public Customer findByPrimaryKey(String email)\r\n   throws CustomerDAOException;\r\n\r\n  public Customer[] findByCompany(int companyId)\r\n   throws CustomerDAOException;\r\n}\r\n</pre>\r\nIt is important to note that DAO J2EE Design Pattern does not just apply to simple mappings of one object to one relational table,\r\nbut also allows complex queries to be performed and allows for stored procedures and database views to be mapped\r\ninto Java data structures.\r\n\r\nAdditional useful information on Data Access Objects J2EE Design Pattern is available here;\r\n\r\n<a href=\"http://java.sun.com/blueprints/corej2eepatterns/Patterns/DataAccessObject.html\" target=\"_blank\">http://java.sun.com/blueprints/corej2eepatterns/Patterns/DataAccessObject.html </a>\r\n\r\n<a href=\"http://www.corej2eepatterns.com/Patterns2ndEd/DataAccessObject.htm\" target=\"_blank\">http://www.corej2eepatterns.com/Patterns2ndEd/DataAccessObject.htm </a>\r\n<h2>Minimizing the Impact of Moving to DAO</h2>\r\nCodeFutures\' objective is to minimize the importance of the main argument\r\nagainst using DAO Design Pattern: the fact that it requires a significant amount of\r\nrepetitive source code to be produced for no immediate advantage over using\r\nJDBC or EJB directly. For many developers, this disadvantage is good\r\nenough reason to ignore the long-term benefits of using a framework-neutral\r\nAPI, especially where there are strict project deadlines. Without the code\r\ngeneration advantages of FireStorm/DAO, it is not easy to justify to a project\r\nmanager or project sponsor the time and cost of manually writing DAO code,\r\nregardless of any future benefits they may see.\r\n<h2>DAO Design Pattern Code Generation</h2>\r\nCodeFutures\' solution to the manual coding problem is to automate the\r\nproduction of a DAO Design Pattern tier, as well as automating the actual implementation logic\r\nfor whichever persistence framework is deemed appropriate for an application.\r\nThis approach is easy to adopt because almost all databases use a standard\r\nlanguage for defining their structure (SQL).\r\n<h2>Additional Reading on Design Patterns</h2>\r\nEJB Design Patterns by Floyd Marinescu\r\n\r\n<a href=\"http://www.theserverside.com/books/wiley/EJBDesignPatterns/index.tss\">http://www.theserverside.com/books/wiley/EJBDesignPatterns/index.tss</a>\r\n\r\nThe Hillside Group\r\n\r\n<a href=\"http://hillside.net/patterns/onlinepatterncatalog.htm\">http://hillside.net/patterns/onlinepatterncatalog.htm</a>\r\n\r\nJavaWorld list of  design pattern articles\r\n\r\n<a href=\"http://www.javaworld.com/columns/jw-java-design-patterns-index.shtml\">http://www.javaworld.com/columns/jw-java-design-patterns-index.shtml</a>\r\n\r\nThe  Design Patterns Java Companion\r\n\r\n<a href=\"http://www.patterndepot.com/put/8/JavaPatterns.htm\">http://www.patterndepot.com/put/8/JavaPatterns.htm</a>\r\n\r\nData and Object Factory\r\n\r\n<a href=\"http://www.dofactory.com/patterns/Patterns.aspx\">http://www.dofactory.com/patterns/Patterns.aspx</a>\r\n\r\nA Learning Guide To Design Patterns\r\n\r\n<a href=\"http://www.industriallogic.com/papers/learning.html\">http://www.industriallogic.com/papers/learning.html</a>\r\n\r\nDesign Patterns (good quality personal page)\r\n\r\n<a href=\"http://home.earthlink.net/huston2/dp/patterns.html\">http://home.earthlink.net/huston2/dp/patterns.html</a>\r\n<h2>Additional Resources</h2>\r\nFireStorm/DAO is a <a href=\"/products/firestorm/\">database access tool</a> based on the <a href=\"/data-access-object/\">Data Access Object</a> design pattern.\r\n<p class=\"additionalrl\"><a href=\"/products/firestorm/download/\">Download FireStorm/DAO</a></p>\r\nCodeFutures provides a free program to analyze the performance of your MySQL database.\r\n<p class=\"additionalrl\"><a href=\"/database-performance-analysis/\">Free MySQL Performance Analysis</a></p>\r\nRead about how <a href=\"/database-sharding/\">Database Sharding</a> helps many major companies to linearly scale their database applications.\r\n<p class=\"additionalrl\"><a href=\"/database-sharding-white-paper/\">Request Database Sharding White Paper</a></p>\r\ndbShards economically scales large, high transaction volume databases using <a href=\"/database-sharding/\">Database Sharding</a>.\r\n<p class=\"additionalrl\"><a href=\"/dbshards-product-presentation/\">View Introduction to dbShards Video</a></p>', 'DAO Design Pattern - A Core J2EE Design Pattern', '', 'inherit', 'open', 'open', '', '161-revision-v1', '', '', '2015-05-22 13:42:23', '2015-05-22 19:42:23', '', '161', 'http://www.agildata.com/161-revision-v1/', '0', 'revision', '', '0');
INSERT INTO `wpag_posts` VALUES('163', '5', '2015-05-22 13:44:06', '0000-00-00 00:00:00', '<h1>DAO Generator</h1>\r\n<h2>DAO Generator: Data Access Object Design Pattern</h2>\r\nA DAO generator solves a basic business application development problem. Business applications almost always need access to data from relational or\r\nobject databases and the Java platform offers many techniques for accessing\r\nthis data. The oldest and most mature technique is to use the Java Database Connectivity\r\nAPI, which provides the capability to execute SQL queries against a database\r\nand then fetch the results, one column at a time. Although this API provides\r\neverything a developer needs to access data and to persist application state,\r\nit is a cumbersome API to develop against - which makes a code generator particularly useful. That\'s where a DAO generator is very useful.\r\n\r\nJava 2 Enterprise Edition (J2EE) offers a newer persistence framework in the\r\nform of Entity Beans, a subset of the Enterprise JavaBean (EJB) framework.\r\nAlthough there have been many\r\nimprovements in the more recent EJB 2.0 specification, many developers are now\r\nlooking to alternative persistence frameworks, such as Spring DAO and <a href=\"/hibernate/\">Hibernate DAO</a>.\r\n<h2>The Benefits of a DAO Generator</h2>\r\nThe Data Access Object (DAO) design pattern provides a technique for separating object persistence and data access logic from any particular persistence\r\nmechanism or API. There are clear benefits to this approach from an\r\narchitectural perspective. The DAO generator approach provides flexibility to change an\r\napplication\'s persistence mechanism over time without the need to re-engineer\r\napplication logic that interacts with the DAO tier. For example, there may be\r\nperformance benefits in changing an application\'s performance mechanism from\r\nusing Entity Beans to using direct JDBC calls from a session bean, or even a\r\nmove to an alternative persistence framework, such as Spring or Hibernate. Without a DAO tier\r\nin place, this sort of transition would require extensive re-engineering of\r\nexisting code.\r\n\r\nThe DAO design pattern also provides a simple, consistent API for data access\r\nthat does not require knowledge of JDBC, EJB, Hibernate, or Spring interfaces. A typical DAO\r\ninterface, produced by a DAO generator, is shown below.\r\n<pre class=\"prettyprint\">public interface CustomerDAO\r\n\r\n{\r\n\r\npublic void insert(Customer customer)\r\n\r\nthrows CustomerDAOException;\r\n  public void update(CustomerPK pk, Customer customer)\r\n\r\nthrows CustomerDAOException;\r\n\r\npublic void delete(CustomerPK pk)\r\n\r\nthrows CustomerDAOException;\r\n\r\npublic Customer[] findAll()\r\n\r\nthrows CustomerDAOException;\r\n\r\npublic Customer findByPrimaryKey(String email)\r\n\r\nthrows CustomerDAOException;\r\n\r\npublic Customer[] findByCompany(int companyId)\r\n\r\nthrows CustomerDAOException;\r\n\r\n}</pre>\r\nIt is important to note that a DAO generator does not just apply to simple mappings of one object to one relational table,\r\nbut also allows complex queries to be performed and allows for stored procedures and database views to be mapped\r\ninto Java data structures. This makes a DAO generator useful for real-world applications.\r\n<h2>Minimizing the Impact of Moving to A DAO Generator</h2>\r\nCodeFutures\' objective is to minimize the importance of the main argument\r\nagainst using DAO: the fact that it requires a significant amount of\r\nrepetitive source code to be produced for no immediate advantage over using\r\nJDBC, EJB, or JDO directly. For many developers, this disadvantage is good\r\nenough reason to ignore the long-term benefits of using a framework-neutral\r\nAPI, especially where there are strict project deadlines. Without the code generation advantages of FireStorm/DAO, it is not easy to justify to a project\r\nmanager or project sponsor the time and cost of manually writing DAO code,\r\nregardless of any future benefits they may see.\r\n<h2>DAO Generator</h2>\r\nCodeFutures\' solution to the manual coding problem is to automate the\r\nproduction of a DAO tier with a DAO generator, as well as automating the actual implementation logic\r\nfor whichever persistence framework is deemed appropriate for an application - all provided by the DAO generator.\r\nThis approach is easy to adopt because almost all databases use a standard\r\nlanguage for defining their structure (SQL).\r\n\r\nClick on a product edition of the DAO generator for more details or view an overview of the <a href=\"/products/firestorm/editions/\">product range</a>.\r\n<h2>Additional Resources</h2>\r\nFireStorm/DAO is a <a href=\"/products/firestorm/\">database access tool</a> based on the <a href=\"/data-access-object/\">Data Access Object</a> design pattern.\r\n<p class=\"additionalrl\"><a href=\"/products/firestorm/download/\">Download FireStorm/DAO</a></p>\r\nCodeFutures provides a free program to analyze the performance of your MySQL database.\r\n<p class=\"additionalrl\"><a href=\"/database-performance-analysis/\">Free MySQL Performance Analysis</a></p>\r\nRead about how <a href=\"/database-sharding/\">Database Sharding</a> helps many major companies to linearly scale their database applications.\r\n<p class=\"additionalrl\"><a href=\"/database-sharding-white-paper/\">Request Database Sharding White Paper</a></p>\r\ndbShards economically scales large, high transaction volume databases using <a href=\"/database-sharding/\">Database Sharding</a>.\r\n<p class=\"additionalrl\"><a href=\"/dbshards-product-presentation/\">View Introduction to dbShards Video</a></p>', 'DAO Generator', '', 'draft', 'open', 'open', '', '', '', '', '2015-05-22 13:44:06', '2015-05-22 19:44:06', '', '0', 'http://www.agildata.com/?page_id=163', '0', 'page', '', '0');
INSERT INTO `wpag_posts` VALUES('164', '5', '2015-05-22 13:43:59', '2015-05-22 19:43:59', '<h1>DAO Generator</h1>\r\n<h2>DAO Generator: Data Access Object Design Pattern</h2>\r\nA DAO generator solves a basic business application development problem. Business applications almost always need access to data from relational or\r\nobject databases and the Java platform offers many techniques for accessing\r\nthis data. The oldest and most mature technique is to use the Java Database Connectivity\r\nAPI, which provides the capability to execute SQL queries against a database\r\nand then fetch the results, one column at a time. Although this API provides\r\neverything a developer needs to access data and to persist application state,\r\nit is a cumbersome API to develop against - which makes a code generator particularly useful. That\'s where a DAO generator is very useful.\r\n\r\nJava 2 Enterprise Edition (J2EE) offers a newer persistence framework in the\r\nform of Entity Beans, a subset of the Enterprise JavaBean (EJB) framework.\r\nAlthough there have been many\r\nimprovements in the more recent EJB 2.0 specification, many developers are now\r\nlooking to alternative persistence frameworks, such as Spring DAO and <a href=\"/hibernate/\">Hibernate DAO</a>.\r\n<h2>The Benefits of a DAO Generator</h2>\r\nThe Data Access Object (DAO) design pattern provides a technique for separating object persistence and data access logic from any particular persistence\r\nmechanism or API. There are clear benefits to this approach from an\r\narchitectural perspective. The DAO generator approach provides flexibility to change an\r\napplication\'s persistence mechanism over time without the need to re-engineer\r\napplication logic that interacts with the DAO tier. For example, there may be\r\nperformance benefits in changing an application\'s performance mechanism from\r\nusing Entity Beans to using direct JDBC calls from a session bean, or even a\r\nmove to an alternative persistence framework, such as Spring or Hibernate. Without a DAO tier\r\nin place, this sort of transition would require extensive re-engineering of\r\nexisting code.\r\n\r\nThe DAO design pattern also provides a simple, consistent API for data access\r\nthat does not require knowledge of JDBC, EJB, Hibernate, or Spring interfaces. A typical DAO\r\ninterface, produced by a DAO generator, is shown below.\r\n<pre class=\"prettyprint\">public interface CustomerDAO\r\n\r\n{\r\n\r\npublic void insert(Customer customer)\r\n\r\nthrows CustomerDAOException;\r\n  public void update(CustomerPK pk, Customer customer)\r\n\r\nthrows CustomerDAOException;\r\n\r\npublic void delete(CustomerPK pk)\r\n\r\nthrows CustomerDAOException;\r\n\r\npublic Customer[] findAll()\r\n\r\nthrows CustomerDAOException;\r\n\r\npublic Customer findByPrimaryKey(String email)\r\n\r\nthrows CustomerDAOException;\r\n\r\npublic Customer[] findByCompany(int companyId)\r\n\r\nthrows CustomerDAOException;\r\n\r\n}</pre>\r\nIt is important to note that a DAO generator does not just apply to simple mappings of one object to one relational table,\r\nbut also allows complex queries to be performed and allows for stored procedures and database views to be mapped\r\ninto Java data structures. This makes a DAO generator useful for real-world applications.\r\n<h2>Minimizing the Impact of Moving to A DAO Generator</h2>\r\nCodeFutures\' objective is to minimize the importance of the main argument\r\nagainst using DAO: the fact that it requires a significant amount of\r\nrepetitive source code to be produced for no immediate advantage over using\r\nJDBC, EJB, or JDO directly. For many developers, this disadvantage is good\r\nenough reason to ignore the long-term benefits of using a framework-neutral\r\nAPI, especially where there are strict project deadlines. Without the code generation advantages of FireStorm/DAO, it is not easy to justify to a project\r\nmanager or project sponsor the time and cost of manually writing DAO code,\r\nregardless of any future benefits they may see.\r\n<h2>DAO Generator</h2>\r\nCodeFutures\' solution to the manual coding problem is to automate the\r\nproduction of a DAO tier with a DAO generator, as well as automating the actual implementation logic\r\nfor whichever persistence framework is deemed appropriate for an application - all provided by the DAO generator.\r\nThis approach is easy to adopt because almost all databases use a standard\r\nlanguage for defining their structure (SQL).\r\n\r\nClick on a product edition of the DAO generator for more details or view an overview of the <a href=\"/products/firestorm/editions/\">product range</a>.\r\n<h2>Additional Resources</h2>\r\nFireStorm/DAO is a <a href=\"/products/firestorm/\">database access tool</a> based on the <a href=\"/data-access-object/\">Data Access Object</a> design pattern.\r\n<p class=\"additionalrl\"><a href=\"/products/firestorm/download/\">Download FireStorm/DAO</a></p>\r\nCodeFutures provides a free program to analyze the performance of your MySQL database.\r\n<p class=\"additionalrl\"><a href=\"/database-performance-analysis/\">Free MySQL Performance Analysis</a></p>\r\nRead about how <a href=\"/database-sharding/\">Database Sharding</a> helps many major companies to linearly scale their database applications.\r\n<p class=\"additionalrl\"><a href=\"/database-sharding-white-paper/\">Request Database Sharding White Paper</a></p>\r\ndbShards economically scales large, high transaction volume databases using <a href=\"/database-sharding/\">Database Sharding</a>.\r\n<p class=\"additionalrl\"><a href=\"/dbshards-product-presentation/\">View Introduction to dbShards Video</a></p>', 'DAO Generator', '', 'inherit', 'open', 'open', '', '163-revision-v1', '', '', '2015-05-22 13:43:59', '2015-05-22 19:43:59', '', '163', 'http://www.agildata.com/163-revision-v1/', '0', 'revision', '', '0');
INSERT INTO `wpag_posts` VALUES('165', '5', '2015-05-22 13:46:18', '0000-00-00 00:00:00', '<h1>FireStorm/DAO Tutorial</h1>\r\nGenerating a data persistence tier and presentation layer for any JDBC-compliant database.\r\n\r\nThis tutorial demonstrates how Data Access Object (DAO) source code can be generated from\r\na relational database schema using FireStorm/DAO, the popular data-access code generation\r\ntool for Java.\r\n\r\nFireStorm/DAO is a very simple product to use and this tutorial is intended as a quick start\r\nguide to the product rather than providng in-depth technical training.\r\n\r\nThe tutorial has the following steps:\r\n<table class=\"tutoriallist\">\r\n<tbody>\r\n<tr>\r\n<td><img src=\"/img/tutorial/index1.gif\" alt=\"\" /></td>\r\n<td><a href=\"/dao-tutorial-installation/\">Downloading and installing FireStorm/DAO</a></td>\r\n</tr>\r\n<tr>\r\n<td><img src=\"/img/tutorial/index2.gif\" alt=\"\" /></td>\r\n<td><a href=\"/dao-tutorial-running/\">Running FireStorm/DAO</a></td>\r\n</tr>\r\n<tr>\r\n<td><img src=\"/img/tutorial/index3.gif\" alt=\"\" /></td>\r\n<td><a href=\"/dao-tutorial-configuration/\">Configuring FireStorm/DAO</a></td>\r\n</tr>\r\n<tr>\r\n<td><img src=\"/img/tutorial/index4.gif\" alt=\"\" /></td>\r\n<td><a href=\"/dao-tutorial-importschema/\">Importing a database schema into FireStorm/DAO</a></td>\r\n</tr>\r\n<tr>\r\n<td><img src=\"/img/tutorial/index5.gif\" alt=\"\" /></td>\r\n<td><a href=\"/dao-tutorial-generatej2se/\">Generating J2SE code using FireStorm/DAO</a></td>\r\n</tr>\r\n<tr>\r\n<td><img src=\"/img/tutorial/index6.gif\" alt=\"\" /></td>\r\n<td><a href=\"/dao-tutorial-generatej2ee/\">Generating J2EE code using FireStorm/DAO</a></td>\r\n</tr>\r\n</tbody>\r\n</table>\r\n\r\n<hr />\r\n\r\n<h2>Product Demonstration Video</h2>\r\n<div style=\"max-width: 420px;\"><iframe src=\"//www.youtube.com/embed/nzLm03I5WtY?rel=0\" width=\"420\" height=\"315\" frameborder=\"0\" allowfullscreen=\"allowfullscreen\"></iframe></div>', 'DAO Tutorial', '', 'draft', 'open', 'open', '', '', '', '', '2015-05-22 13:46:18', '2015-05-22 19:46:18', '', '0', 'http://www.agildata.com/?page_id=165', '0', 'page', '', '0');
INSERT INTO `wpag_posts` VALUES('166', '5', '2015-05-22 13:45:34', '2015-05-22 19:45:34', '<h1>FireStorm/DAO Tutorial</h1>\r\nGenerating a data persistence tier and presentation layer for any JDBC-compliant database.\r\n\r\nThis tutorial demonstrates how Data Access Object (DAO) source code can be generated from\r\na relational database schema using FireStorm/DAO, the popular data-access code generation\r\ntool for Java.\r\n\r\nFireStorm/DAO is a very simple product to use and this tutorial is intended as a quick start\r\nguide to the product rather than providng in-depth technical training.\r\n\r\nThe tutorial has the following steps:\r\n<table class=\"tutoriallist\">\r\n<tbody>\r\n<tr>\r\n<td><img src=\"/img/tutorial/index1.gif\" alt=\"\" /></td>\r\n<td><a href=\"/dao-tutorial-installation/\">Downloading and installing FireStorm/DAO</a></td>\r\n</tr>\r\n<tr>\r\n<td><img src=\"/img/tutorial/index2.gif\" alt=\"\" /></td>\r\n<td><a href=\"/dao-tutorial-running/\">Running FireStorm/DAO</a></td>\r\n</tr>\r\n<tr>\r\n<td><img src=\"/img/tutorial/index3.gif\" alt=\"\" /></td>\r\n<td><a href=\"/dao-tutorial-configuration/\">Configuring FireStorm/DAO</a></td>\r\n</tr>\r\n<tr>\r\n<td><img src=\"/img/tutorial/index4.gif\" alt=\"\" /></td>\r\n<td><a href=\"/dao-tutorial-importschema/\">Importing a database schema into FireStorm/DAO</a></td>\r\n</tr>\r\n<tr>\r\n<td><img src=\"/img/tutorial/index5.gif\" alt=\"\" /></td>\r\n<td><a href=\"/dao-tutorial-generatej2se/\">Generating J2SE code using FireStorm/DAO</a></td>\r\n</tr>\r\n<tr>\r\n<td><img src=\"/img/tutorial/index6.gif\" alt=\"\" /></td>\r\n<td><a href=\"/dao-tutorial-generatej2ee/\">Generating J2EE code using FireStorm/DAO</a></td>\r\n</tr>\r\n</tbody>\r\n</table>\r\n\r\n<hr />\r\n\r\n<h2>Product Demonstration Video</h2>\r\n<div style=\"max-width: 420px;\"><iframe src=\"//www.youtube.com/embed/nzLm03I5WtY?rel=0\" width=\"420\" height=\"315\" frameborder=\"0\" allowfullscreen=\"allowfullscreen\"></iframe></div>', 'DAO Tutorial', '', 'inherit', 'open', 'open', '', '165-revision-v1', '', '', '2015-05-22 13:45:34', '2015-05-22 19:45:34', '', '165', 'http://www.agildata.com/165-revision-v1/', '0', 'revision', '', '0');
INSERT INTO `wpag_posts` VALUES('167', '5', '2015-05-22 13:48:20', '0000-00-00 00:00:00', '<h1>Data Access Layer</h1>\r\n<h2>Using the Data Access Object Design (DAO) Pattern to Build a Data Access Layer (DAL)</h2>\r\nA data access layer can be an imporant part of a software application. Business applications almost always need access to data from relational or object databases and the Java platform offers many techniques for accessing this data, regardless of whether a data access layer is used. The oldest, and most mature and reliable technique, is to use the Java Database Connectivity - JDBC API, which provides the capability to execute SQL queries against a database and then fetch the results, one column at a time. Although this API provides everything a developer needs to access data and to persist application state, Java Enterprise Edition (JEE) offers a newer persistence framework in the\r\nform of Entity Beans, a subset of the Enterprise JavaBean (EJB) framework.\r\nAlthough there have been many improvements in the more recent EJB 2.0\r\nspecification, many developers are now looking to alternative persistence frameworks, such as Java Persistence API (JPA).\r\n<h2>The Benefits of Using Data Access Objects for your Data Access Layer</h2>\r\nThe DAO design pattern provides a technique for separating object persistence and data access logic from any particular persistence mechanism or API, making it ideal for a data access layer. There are clear benefits to this approach from an architectural perspective. The DAO approach provides flexibility to change an application\'s persistence mechanism over time without the need to re-engineer application logic that interacts with the data access layer. For example, there may be performance benefits in changing an application\'s performance mechanism from using Entity Beans to using direct JDBC calls from a session bean, or even a move to an alternative persistence framework, such as Spring. Without a data access layer in place, this sort of transition would require extensive re-engineering of existing code.\r\n\r\nThe DAO design pattern also provides a simple, consistent API for data access that does not require knowledge of JDBC, EJB, Spring DAO, and <a href=\"/hibernate/\">Hibernate DAO</a> interfaces. A typical DAO interface for a data access layer is shown below.\r\n<pre class=\"prettyprint\">public interface CustomerDAO\r\n{\r\n\r\npublic void insert(Customer customer)\r\n\r\nthrows CustomerDAOException;\r\npublic void update(CustomerPK pk, Customer customer)\r\nthrows CustomerDAOException;\r\npublic void delete(CustomerPK pk)\r\nthrows CustomerDAOException;\r\npublic Customer[] findAll()\r\nthrows CustomerDAOException;\r\npublic Customer findByPrimaryKey(String email)\r\nthrows CustomerDAOException;\r\npublic Customer[] findByCompany(int companyId)\r\nthrows CustomerDAOException;\r\n\r\n}</pre>\r\nIt is important to note that DAO does not just apply to simple mappings of one object to one relational table, but also allows complex queries to be performed and allows for stored procedures and database views to be mapped into Java data structures.\r\n<h2>Minimizing the Impact of Moving to DAO for you Data Access Layer</h2>\r\nCodeFutures\' objective is to minimize the importance of the main argument against using DAO: the fact that it requires a significant amount of repetitive source code to be produced for no immediate advantage over using JDBC or EJB directly. For many developers, this disadvantage is good enough reason to ignore the long-term benefits of using a framework-neutral API, especially where there are strict project deadlines. Without the <a href=\"/code-generation/\">Java code generation</a> advantages of FireStorm/DAO, it is not easy to justify to a project manager or\r\nproject sponsor the time and cost of manually writing DAO code, regardless of any future benefits they may see.\r\n<h2>Data Access Layer Code Generation</h2>\r\nCodeFutures\' solution to the manual coding problem is to automate the production of a DAO tier, as well as automating the actual implementation logic for whichever persistence framework is deemed appropriate for an application. This approach is easy to adopt because almost all databases use a standard language for defining their structure (SQL).\r\n<h2>Additional Resources</h2>\r\nFireStorm/DAO is a <a href=\"/products/firestorm/\">database access tool</a> based on the <a href=\"/data-access-object/\">Data Access Object</a> design pattern.\r\n<p class=\"additionalrl\"><a href=\"/products/firestorm/download/\">Download FireStorm/DAO</a></p>\r\nCodeFutures provides a free program to analyze the performance of your MySQL database.\r\n<p class=\"additionalrl\"><a href=\"/database-performance-analysis/\">Free MySQL Performance Analysis</a></p>\r\nRead about how <a href=\"/database-sharding/\">Database Sharding</a> helps many major companies to linearly scale their database applications.\r\n<p class=\"additionalrl\"><a href=\"/database-sharding-white-paper/\">Request Database Sharding White Paper</a></p>\r\ndbShards economically scales large, high transaction volume databases using <a href=\"/database-sharding/\">Database Sharding</a>.\r\n<p class=\"additionalrl\"><a href=\"/dbshards-product-presentation/\">View Introduction to dbShards Video</a></p>', 'Data Access Layer', '', 'draft', 'open', 'open', '', '', '', '', '2015-05-22 13:48:20', '2015-05-22 19:48:20', '', '0', 'http://www.agildata.com/?page_id=167', '0', 'page', '', '0');
INSERT INTO `wpag_posts` VALUES('168', '5', '2015-05-22 13:48:12', '2015-05-22 19:48:12', '<h1>Data Access Layer</h1>\r\n<h2>Using the Data Access Object Design (DAO) Pattern to Build a Data Access Layer (DAL)</h2>\r\nA data access layer can be an imporant part of a software application. Business applications almost always need access to data from relational or object databases and the Java platform offers many techniques for accessing this data, regardless of whether a data access layer is used. The oldest, and most mature and reliable technique, is to use the Java Database Connectivity - JDBC API, which provides the capability to execute SQL queries against a database and then fetch the results, one column at a time. Although this API provides everything a developer needs to access data and to persist application state, Java Enterprise Edition (JEE) offers a newer persistence framework in the\r\nform of Entity Beans, a subset of the Enterprise JavaBean (EJB) framework.\r\nAlthough there have been many improvements in the more recent EJB 2.0\r\nspecification, many developers are now looking to alternative persistence frameworks, such as Java Persistence API (JPA).\r\n<h2>The Benefits of Using Data Access Objects for your Data Access Layer</h2>\r\nThe DAO design pattern provides a technique for separating object persistence and data access logic from any particular persistence mechanism or API, making it ideal for a data access layer. There are clear benefits to this approach from an architectural perspective. The DAO approach provides flexibility to change an application\'s persistence mechanism over time without the need to re-engineer application logic that interacts with the data access layer. For example, there may be performance benefits in changing an application\'s performance mechanism from using Entity Beans to using direct JDBC calls from a session bean, or even a move to an alternative persistence framework, such as Spring. Without a data access layer in place, this sort of transition would require extensive re-engineering of existing code.\r\n\r\nThe DAO design pattern also provides a simple, consistent API for data access that does not require knowledge of JDBC, EJB, Spring DAO, and <a href=\"/hibernate/\">Hibernate DAO</a> interfaces. A typical DAO interface for a data access layer is shown below.\r\n<pre class=\"prettyprint\">public interface CustomerDAO\r\n{\r\n\r\npublic void insert(Customer customer)\r\n\r\nthrows CustomerDAOException;\r\npublic void update(CustomerPK pk, Customer customer)\r\nthrows CustomerDAOException;\r\npublic void delete(CustomerPK pk)\r\nthrows CustomerDAOException;\r\npublic Customer[] findAll()\r\nthrows CustomerDAOException;\r\npublic Customer findByPrimaryKey(String email)\r\nthrows CustomerDAOException;\r\npublic Customer[] findByCompany(int companyId)\r\nthrows CustomerDAOException;\r\n\r\n}</pre>\r\nIt is important to note that DAO does not just apply to simple mappings of one object to one relational table, but also allows complex queries to be performed and allows for stored procedures and database views to be mapped into Java data structures.\r\n<h2>Minimizing the Impact of Moving to DAO for you Data Access Layer</h2>\r\nCodeFutures\' objective is to minimize the importance of the main argument against using DAO: the fact that it requires a significant amount of repetitive source code to be produced for no immediate advantage over using JDBC or EJB directly. For many developers, this disadvantage is good enough reason to ignore the long-term benefits of using a framework-neutral API, especially where there are strict project deadlines. Without the <a href=\"/code-generation/\">Java code generation</a> advantages of FireStorm/DAO, it is not easy to justify to a project manager or\r\nproject sponsor the time and cost of manually writing DAO code, regardless of any future benefits they may see.\r\n<h2>Data Access Layer Code Generation</h2>\r\nCodeFutures\' solution to the manual coding problem is to automate the production of a DAO tier, as well as automating the actual implementation logic for whichever persistence framework is deemed appropriate for an application. This approach is easy to adopt because almost all databases use a standard language for defining their structure (SQL).\r\n<h2>Additional Resources</h2>\r\nFireStorm/DAO is a <a href=\"/products/firestorm/\">database access tool</a> based on the <a href=\"/data-access-object/\">Data Access Object</a> design pattern.\r\n<p class=\"additionalrl\"><a href=\"/products/firestorm/download/\">Download FireStorm/DAO</a></p>\r\nCodeFutures provides a free program to analyze the performance of your MySQL database.\r\n<p class=\"additionalrl\"><a href=\"/database-performance-analysis/\">Free MySQL Performance Analysis</a></p>\r\nRead about how <a href=\"/database-sharding/\">Database Sharding</a> helps many major companies to linearly scale their database applications.\r\n<p class=\"additionalrl\"><a href=\"/database-sharding-white-paper/\">Request Database Sharding White Paper</a></p>\r\ndbShards economically scales large, high transaction volume databases using <a href=\"/database-sharding/\">Database Sharding</a>.\r\n<p class=\"additionalrl\"><a href=\"/dbshards-product-presentation/\">View Introduction to dbShards Video</a></p>', 'Data Access Layer', '', 'inherit', 'open', 'open', '', '167-revision-v1', '', '', '2015-05-22 13:48:12', '2015-05-22 19:48:12', '', '167', 'http://www.agildata.com/167-revision-v1/', '0', 'revision', '', '0');
INSERT INTO `wpag_posts` VALUES('169', '5', '2015-05-22 13:49:39', '0000-00-00 00:00:00', '<h1>Data Access Object</h1>\r\n<h2>Data Access Object Design Pattern</h2>\r\nThe Data Access Object (DAO) layer is an essential part of good application architecture. Business applications almost always need access to data from relational or\r\nobject databases and the Java platform offers many techniques for accessing\r\nthis data. The oldest and most mature technique is to use the Java Database Connectivity (JDBC)\r\nAPI, which provides the capability to execute SQL queries against a database\r\nand then fetch the results, one column at a time. Although this API provides\r\neverything a developer needs to access data and to persist application state,\r\nit is a cumbersome API to develop against - which makes a code generator particularly useful.\r\n<p class=\"additionalrl\"><a href=\"/products/firestorm/download/\">Generate DAOs: Download FireStorm/DAO</a></p>\r\nJava 2 Enterprise Edition (J2EE) offers a newer persistence framework in the\r\nform of Entity Beans, a subset of the Enterprise JavaBean (EJB) framework.\r\nAlthough there have been many\r\nimprovements in the more recent EJB 2.0 specification, many developers are now\r\nlooking to alternative persistence frameworks for their Data Access Objects, such as <a href=\"/spring-dao/\">Spring DAO</a> and <a href=\"/hibernate/\">Hibernate DAO</a>.\r\n<h2>The Benefits of Data Access Objects</h2>\r\nThe Data Access Object design pattern provides a technique for separating\r\nobject persistence and data access logic from any particular persistence\r\nmechanism or API. There are clear benefits to this approach from an\r\narchitectural perspective. The Data Access Object approach provides flexibility to change an\r\napplication\'s persistence mechanism over time without the need to re-engineer\r\napplication logic that interacts with the Data Access Object tier. For example, there may be\r\nperformance benefits in changing an application\'s performance mechanism from\r\nusing Entity Beans to using direct JDBC calls from a session bean, or even a\r\nmove to an alternative persistence framework, such as the Spring Framework. Without a Data Access Object tier\r\nin place, this sort of transition would require extensive re-engineering of\r\nexisting code.\r\n\r\nThe Data Access Object design pattern also provides a simple, consistent API for data access\r\nthat does not require knowledge of JDBC, EJB, Hibernate, or Spring interfaces. A typical Data Access Object\r\ninterface is shown below.\r\n<pre class=\"prettyprint\">public interface CustomerDAO\r\n\r\n{\r\n\r\npublic void insert(Customer customer)\r\n\r\nthrows CustomerDAOException;\r\n  public void update(CustomerPK pk, Customer customer)\r\n\r\nthrows CustomerDAOException;\r\n\r\npublic void delete(CustomerPK pk)\r\n\r\nthrows CustomerDAOException;\r\n\r\npublic Customer[] findAll()\r\n\r\nthrows CustomerDAOException;\r\n\r\npublic Customer findByPrimaryKey(String email)\r\n\r\nthrows CustomerDAOException;\r\n\r\npublic Customer[] findByCompany(int companyId)\r\n\r\nthrows CustomerDAOException;\r\n\r\n}</pre>\r\nIt is important to note that Data Access Object does not just apply to simple mappings of one object to one relational table,\r\nbut also allows complex queries to be performed and allows for stored procedures and database views to be mapped\r\ninto Java data structures.\r\n<h2>Minimizing the Impact of Moving to Data Access Objects</h2>\r\nCodeFutures\' objective is to minimize the importance of the main argument\r\nagainst using Data Access Objects: the fact that it requires a significant amount of\r\nrepetitive source code to be produced for no immediate advantage over using\r\nJDBC, Spring, or Hibernate directly. For many developers, this disadvantage is good\r\nenough reason to ignore the long-term benefits of using a framework-neutral\r\nAPI, especially where there are strict project deadlines. Without the code\r\ngeneration advantages of FireStorm/DAO, it is not easy to justify to a project\r\nmanager or project sponsor the time and cost of manually writing DAO code,\r\nregardless of any future benefits they may see.\r\n<h2>Data Access Object Code Generation</h2>\r\nCodeFutures\' solution to the manual coding problem is to automate the\r\nproduction of a Data Access Object tier, as well as automating the actual implementation logic\r\nfor whichever persistence framework is deemed appropriate for an application.\r\nThis approach is easy to adopt because almost all databases use a standard\r\nlanguage for defining their structure (SQL).\r\n<h2>Additional Resources</h2>\r\nFireStorm/DAO is a <a href=\"/products/firestorm/\">database access tool</a> based on the <a href=\"/data-access-object/\">Data Access Object</a> design pattern.\r\n<p class=\"additionalrl\"><a href=\"/products/firestorm/download/\">Download FireStorm/DAO</a></p>\r\nCodeFutures provides a free program to analyze the performance of your MySQL database.\r\n<p class=\"additionalrl\"><a href=\"/database-performance-analysis/\">Free MySQL Performance Analysis</a></p>\r\nRead about how <a href=\"/database-sharding/\">Database Sharding</a> helps many major companies to linearly scale their database applications.\r\n<p class=\"additionalrl\"><a href=\"/database-sharding-white-paper/\">Request Database Sharding White Paper</a></p>\r\ndbShards economically scales large, high transaction volume databases using <a href=\"/database-sharding/\">Database Sharding</a>.\r\n<p class=\"additionalrl\"><a href=\"/dbshards-product-presentation/\">View Introduction to dbShards Video</a></p>', 'Data Access Object', '', 'draft', 'open', 'open', '', '', '', '', '2015-05-22 13:49:39', '2015-05-22 19:49:39', '', '0', 'http://www.agildata.com/?page_id=169', '0', 'page', '', '0');
INSERT INTO `wpag_posts` VALUES('170', '5', '2015-05-22 13:49:26', '2015-05-22 19:49:26', '<h1>Data Access Object</h1>\r\n<h2>Data Access Object Design Pattern</h2>\r\nThe Data Access Object (DAO) layer is an essential part of good application architecture. Business applications almost always need access to data from relational or\r\nobject databases and the Java platform offers many techniques for accessing\r\nthis data. The oldest and most mature technique is to use the Java Database Connectivity (JDBC)\r\nAPI, which provides the capability to execute SQL queries against a database\r\nand then fetch the results, one column at a time. Although this API provides\r\neverything a developer needs to access data and to persist application state,\r\nit is a cumbersome API to develop against - which makes a code generator particularly useful.\r\n<p class=\"additionalrl\"><a href=\"/products/firestorm/download/\">Generate DAOs: Download FireStorm/DAO</a></p>\r\nJava 2 Enterprise Edition (J2EE) offers a newer persistence framework in the\r\nform of Entity Beans, a subset of the Enterprise JavaBean (EJB) framework.\r\nAlthough there have been many\r\nimprovements in the more recent EJB 2.0 specification, many developers are now\r\nlooking to alternative persistence frameworks for their Data Access Objects, such as <a href=\"/spring-dao/\">Spring DAO</a> and <a href=\"/hibernate/\">Hibernate DAO</a>.\r\n<h2>The Benefits of Data Access Objects</h2>\r\nThe Data Access Object design pattern provides a technique for separating\r\nobject persistence and data access logic from any particular persistence\r\nmechanism or API. There are clear benefits to this approach from an\r\narchitectural perspective. The Data Access Object approach provides flexibility to change an\r\napplication\'s persistence mechanism over time without the need to re-engineer\r\napplication logic that interacts with the Data Access Object tier. For example, there may be\r\nperformance benefits in changing an application\'s performance mechanism from\r\nusing Entity Beans to using direct JDBC calls from a session bean, or even a\r\nmove to an alternative persistence framework, such as the Spring Framework. Without a Data Access Object tier\r\nin place, this sort of transition would require extensive re-engineering of\r\nexisting code.\r\n\r\nThe Data Access Object design pattern also provides a simple, consistent API for data access\r\nthat does not require knowledge of JDBC, EJB, Hibernate, or Spring interfaces. A typical Data Access Object\r\ninterface is shown below.\r\n<pre class=\"prettyprint\">public interface CustomerDAO\r\n\r\n{\r\n\r\npublic void insert(Customer customer)\r\n\r\nthrows CustomerDAOException;\r\n  public void update(CustomerPK pk, Customer customer)\r\n\r\nthrows CustomerDAOException;\r\n\r\npublic void delete(CustomerPK pk)\r\n\r\nthrows CustomerDAOException;\r\n\r\npublic Customer[] findAll()\r\n\r\nthrows CustomerDAOException;\r\n\r\npublic Customer findByPrimaryKey(String email)\r\n\r\nthrows CustomerDAOException;\r\n\r\npublic Customer[] findByCompany(int companyId)\r\n\r\nthrows CustomerDAOException;\r\n\r\n}</pre>\r\nIt is important to note that Data Access Object does not just apply to simple mappings of one object to one relational table,\r\nbut also allows complex queries to be performed and allows for stored procedures and database views to be mapped\r\ninto Java data structures.\r\n<h2>Minimizing the Impact of Moving to Data Access Objects</h2>\r\nCodeFutures\' objective is to minimize the importance of the main argument\r\nagainst using Data Access Objects: the fact that it requires a significant amount of\r\nrepetitive source code to be produced for no immediate advantage over using\r\nJDBC, Spring, or Hibernate directly. For many developers, this disadvantage is good\r\nenough reason to ignore the long-term benefits of using a framework-neutral\r\nAPI, especially where there are strict project deadlines. Without the code\r\ngeneration advantages of FireStorm/DAO, it is not easy to justify to a project\r\nmanager or project sponsor the time and cost of manually writing DAO code,\r\nregardless of any future benefits they may see.\r\n<h2>Data Access Object Code Generation</h2>\r\nCodeFutures\' solution to the manual coding problem is to automate the\r\nproduction of a Data Access Object tier, as well as automating the actual implementation logic\r\nfor whichever persistence framework is deemed appropriate for an application.\r\nThis approach is easy to adopt because almost all databases use a standard\r\nlanguage for defining their structure (SQL).\r\n<h2>Additional Resources</h2>\r\nFireStorm/DAO is a <a href=\"/products/firestorm/\">database access tool</a> based on the <a href=\"/data-access-object/\">Data Access Object</a> design pattern.\r\n<p class=\"additionalrl\"><a href=\"/products/firestorm/download/\">Download FireStorm/DAO</a></p>\r\nCodeFutures provides a free program to analyze the performance of your MySQL database.\r\n<p class=\"additionalrl\"><a href=\"/database-performance-analysis/\">Free MySQL Performance Analysis</a></p>\r\nRead about how <a href=\"/database-sharding/\">Database Sharding</a> helps many major companies to linearly scale their database applications.\r\n<p class=\"additionalrl\"><a href=\"/database-sharding-white-paper/\">Request Database Sharding White Paper</a></p>\r\ndbShards economically scales large, high transaction volume databases using <a href=\"/database-sharding/\">Database Sharding</a>.\r\n<p class=\"additionalrl\"><a href=\"/dbshards-product-presentation/\">View Introduction to dbShards Video</a></p>', 'Data Access Object', '', 'inherit', 'open', 'open', '', '169-revision-v1', '', '', '2015-05-22 13:49:26', '2015-05-22 19:49:26', '', '169', 'http://www.agildata.com/169-revision-v1/', '0', 'revision', '', '0');
INSERT INTO `wpag_posts` VALUES('171', '5', '2015-05-22 13:51:24', '0000-00-00 00:00:00', '<h2>Database Access Tool: FireStorm/DAO</h2>\r\nFireStorm/DAO is a code generator that makes software developers more productive by automatically generating DAO code for accessing relational databases. FireStorm/DAO\'s code generation approach cuts costs through higher developer productivity, better software quality, and lower maintenance costs.\r\n<h3>A Database Access Tool for Data Access Objects</h3>\r\nFireStorm/DAO is a database access tool that imports existing database schemas (from a SQL script or from a live JDBC connection) and generates a complete data persistence tier based on any of the following persistence technologies:\r\n<ul>\r\n	<li>Standard <a href=\"/java-dao/\">Java DAO</a> using <a href=\"/jdbc-dao/\">JDBC DAO</a></li>\r\n	<li><a href=\"/hibernate/\">Hibernate DAO</a></li>\r\n	<li><a href=\"/spring-dao/\">Spring DAO</a> JDBC</li>\r\n	<li>Ruby (using the mysql-ruby library)</li>\r\n</ul>\r\nFireStorm/DAO generates code that is compliant with the Data Access Object design pattern (the DAO design pattern is a core J2EE design pattern). The database access tool generates Java DAO code and configuration files that developers would otherwise have to write by hand. In addition to being a database access tool, FireStorm/DAO can also generate presentation tier code based on JSPs and Struts.ac\r\n<h3 style=\"clear: none;\">A Database Access Tool to Reduce Complexity</h3>\r\nFireStorm/DAO adopts a pragmatic approach of generating Java DAO code for data persistence that is a direct mapping of a particular relational database schema. It is also possible to define complex multi-table queries and to leverage existing database logic contained within stored procedures.\r\n\r\nFireStorm/DAO can generate DAO code for standalone Java as well as for leading J2EE application servers, such as JBoss, BEA WebLogic, IBM WebSphere, and Apache Tomcat. The generated DAO code is well-written, consistent, and contains technical documentation. Most importantly, the generated code is production quality and has been deployed in thousands of applications worldwide.\r\n<p class=\"additionalrl\"><a href=\"/products/firestorm/download/\">Free Evaluation: Download FireStorm/DAO</a></p>\r\n\r\n<h2>FireStorm/DAO Product Editions</h2>\r\n<h3>FireStorm/DAO Architect Edition</h3>\r\n<a href=\"/architect/\"><img src=\"/img/CF_FS_BOX_02_AR_SM.gif\" alt=\"\" align=\"left\" border=\"0\" /></a>\r\n\r\nFireStorm/DAO Architect Edition generates a JDBC DAO tier and a complete Web application based on Struts and Tiles, generates DAOs for partial schemas from user-selected tables and rows, and provides performance tuning options. FireStorm/DAO generates <a href=\"/hibernate/\">Hibernate DAO</a> and <a href=\"/spring-dao/\">Spring DAO</a> persistence tiers. FireStorm/DAO allows new custom code generation modules to be developed and integrated with the FireStorm/DAO Studio environment. The code generation modules are written in standard Java so there is no need to learn a proprietary code generation template language as with other solutions.\r\n<h3>FireStorm/DAO OEM Edition</h3>\r\n<a href=\"/products/firestorm/editions/oem/\"><img src=\"/img/CF_FS_BOX_02_OE_SM.gif\" alt=\"\" align=\"left\" border=\"0\" /></a>\r\n\r\nFireStorm/DAO OEM Edition is specifically aimed at software product vendors. The functionality is the same as FireStorm/DAO Architect Edition, with additional, normally unavailable, internal technical documentation as possibly access to source code. CodeFutures\' commitment to flexible licensing arrangement and product packages ensures that ISVs of any size can be accommodated. FireStorm/DAO is highly portable and easy to integrate with third-party software.\r\n\r\n&nbsp;\r\n<h2>A Database Access Tool to Reduce Development Costs</h2>\r\nRead about the benefits of a database access tool:\r\n\r\n<strong>How does FireStorm/DAO cut costs?</strong>\r\n<ul>\r\n<ul>\r\n	<li>Cut Development Costs with Measurable Productivity Gains</li>\r\n	<li>Lower Ongoing Maintenance Costs\r\n<ul>\r\n	<li>Better Software Design</li>\r\n	<li>Business Rather Than Technical Focus</li>\r\n	<li>Consistent Design Practices</li>\r\n	<li>Fewer Errors Reduces Testing and Debugging Costs</li>\r\n</ul>\r\n</li>\r\n</ul>\r\n</ul>\r\nRead <a href=\"/dao-benefits/#valuable\">more here</a>.\r\n\r\n<strong>What are the technical benefits of FireStorm/DAO?</strong>\r\n<ul>\r\n<ul>\r\n	<li>No Database Changes Required</li>\r\n	<li>Standards-Based Development</li>\r\n	<li>High Performance Code</li>\r\n	<li>Portable code</li>\r\n	<li>Shorter Development Cycles</li>\r\n	<li>Reduced Testing</li>\r\n	<li>Professional Product Packaging\r\n<ul>\r\n	<li>User Friendly Interface</li>\r\n	<li>No Proprietary Runtime Libraries Required</li>\r\n	<li>Compatible with Existing Development Processes</li>\r\n	<li>Easy Installation and Configuration</li>\r\n</ul>\r\n</li>\r\n</ul>\r\n</ul>\r\nRead <a href=\"/dao-benefits/#benefits\">more here</a>.\r\n\r\n<strong>Where is FireStorm/DAO used?</strong>\r\n\r\nThere are many scenarios where FireStorm/DAO is an ideal database access tool, including where there frequent changes to the database schema and therefore the DAO code, when the database schema is very large and writing the data access code would take considerable time, and so on.\r\n\r\nRead <a href=\"/dao-benefits/#used\">more here</a>.\r\n<h2>FireStorm/DAO Architect Edition</h2>\r\n<img src=\"/img/CF_FS_BOX_02_AR_SM.gif\" alt=\"\" width=\"110\" height=\"121\" align=\"left\" />\r\n\r\nFireStorm/DAO Architect Edition is powerful and flexible database access tool that offers the choice of generating a DAO tier using either JDBC DAO, EJB CMP DAO, <a href=\"/hibernate/\">Hibernate DAO</a>, and <a href=\"/spring-dao/\">Spring DAO</a>. In addition, the Architect Edition can also generate J2EE Web applications for Tomcat, JBoss, BEA WebLogic, and IBM WebSphere.\r\n\r\n&nbsp;\r\n<p class=\"additionalrl\"><a href=\"/products/firestorm/download/\">Download FireStorm/DAO Architect Edition Evaluation</a></p>\r\n&nbsp;\r\n\r\nFireStorm/DAO Architect Edition is priced at $995 per developer for Annual Developer Subscriptions, which can be purchased from the CodeFutures <a href=\"/purchase\">online store</a>.\r\n\r\n&nbsp;\r\n\r\nCodeFutures provides FireStorm/DAO users with the source code for the entire product, including the source code for the code generation templates (JDBC DAO, <a href=\"/hibernate/\">Hibernate DAO</a>, and Spring DAO).\r\n\r\nThe code generation templates are written in standard Java so there is no need to learn a proprietary code generation template language as with other solutions. There is no limit on the number of custom DAO design templates can be developed – possibly using different DAO templates for different parts of the same application. Additional non-DAO custom code generation templates can also be developed and used with FireStorm/DAO.\r\n\r\n&nbsp;\r\n\r\nFireStorm/DAO Architect Edition includes the source code for the entire product, including the source code for the each of the DAOs (JDBC DAO, <a href=\"/hibernate/\">Hibernate DAO</a>, and <a href=\"/spring-dao/\">Spring DAO</a>). This allows FireStorm/DAO to be customized:\r\n<ul>\r\n<ul>\r\n	<li>Optimize performance based on specific project requirements</li>\r\n	<li>Integrate more closely with existing development procedures and build environments, such as internal coding standards</li>\r\n	<li>Add environment-specific extra custom features such as caching, security, auditing, and clustering</li>\r\n</ul>\r\n</ul>\r\nFireStorm/DAO Architect Edition also allows new custom code generation templates to be developed and integrated with the FireStorm/DAO Studio environment.\r\n\r\n&nbsp;\r\n<h2>FireStorm/DAO Architect Edition Features</h2>\r\n<ul>\r\n<ul>\r\n	<li>Import database schemas from a JDBC connection</li>\r\n	<li>Import database schemas from SQL/DDL scripts</li>\r\n	<li>Reverse-engineer stored procedures</li>\r\n	<li>Round-trip engineering (import modifications made to a schema)</li>\r\n	<li>Create new schemas using a simple user interface</li>\r\n	<li>Imported schemas can be modified using a simple user interface</li>\r\n	<li>Generates Data Access Object (DAO) interfaces</li>\r\n	<li>Generates Data Access Object (DAO) exception classes</li>\r\n	<li>Generates Data Transfer Object (DTO) classes</li>\r\n	<li>Generates Data Access Object (DAO) classes for JDBC</li>\r\n	<li>Generates Data Access Object (DAO) classes for Java Persistence API (JPA)</li>\r\n	<li>Generates Data Access Object (DAO) classes for Spring JDBC</li>\r\n	<li>Generates Session Bean facade for each DAO interface</li>\r\n	<li>Generates Web pages based on Apache Struts framework</li>\r\n	<li>Generates Web pages based on plain Java Server Pages</li>\r\n	<li>Dynamic Update Method</li>\r\n	<li>Interactive SQL Tool</li>\r\n	<li>Database Schema Migration</li>\r\n	<li>Optimized JDBC Code</li>\r\n	<li>Import Generation for Partial Schema</li>\r\n	<li>Generates CMP deployment descriptors</li>\r\n	<li>Generates J2EE deployment descriptors</li>\r\n	<li>Generates ANT build scripts</li>\r\n</ul>\r\n</ul>\r\n<h2>Supported Databases</h2>\r\nAll editions of FireStorm/DAO support the following database platforms:\r\n<ul>\r\n<ul>\r\n	<li>Oracle 8i/9i</li>\r\n	<li>Sybase</li>\r\n	<li>IBM DB2</li>\r\n	<li>MySQL</li>\r\n	<li>IBM Cloudscape</li>\r\n	<li>Microsoft SQL Server</li>\r\n	<li>Informix</li>\r\n	<li>Apache Derby</li>\r\n	<li>Microsoft Access</li>\r\n	<li>InnoDB</li>\r\n	<li>PostgreSQL</li>\r\n	<li>Any JDBC-compliant database</li>\r\n</ul>\r\n</ul>\r\n<h2>Supported J2EE Platforms</h2>\r\nFireStorm/DAO Enterprise Edition generates code for the following J2EE platforms:\r\n<ul>\r\n<ul>\r\n	<li>BEA WebLogic 6.1</li>\r\n	<li>BEA WebLogic 7</li>\r\n	<li>BEA WebLogic 8.1</li>\r\n	<li>IBM WebSphere 4</li>\r\n	<li>IBM WebSphere 5</li>\r\n	<li>JBoss 3.2</li>\r\n</ul>\r\n</ul>\r\n<h2>Supported Operating Systems</h2>\r\nAll editions of FireStorm/DAO run on the following operating systems:\r\n<ul>\r\n<ul>\r\n	<li>Microsoft Windows 2000, Windows NT4, Windows XP, Windows Vista</li>\r\n	<li>UNIX</li>\r\n	<li>Linux</li>\r\n	<li>Mac OS X</li>\r\n</ul>\r\n</ul>\r\n<h2>FireStorm/DAO Architect Edition - Demonstration Video</h2>\r\n<div style=\"max-width: 420px;\"><iframe src=\"//www.youtube.com/embed/nzLm03I5WtY\" width=\"240\" height=\"180\" frameborder=\"0\" allowfullscreen=\"allowfullscreen\"></iframe></div>\r\n<h2 id=\"Team\">Team Development using the Architect Edition</h2>\r\nThe maximum benefits of FireStorm/DAO are usually derived by a software development group using the Architect Edition to customize the DAO design template for its environment.\r\n\r\n&nbsp;\r\n\r\nAn experienced software developer within a software development team customizes the DAO template. Then any other programmers who want to develop a data persistence tier use the Enterprise Edition and the custom DAO template provided by the DAO architect.\r\n\r\n&nbsp;\r\n\r\nThe DAO templates in FireStorm/DAO Architect Edition can be customized to a project’s exact requirements: optimize performance, integrate more closely with existing build environments, and add environment-specific extra custom features such as caching, security, auditing, and clustering.\r\n\r\n&nbsp;\r\n\r\nThe benefits of using FireStorm/DAO Architect Edition with development teams include:\r\n\r\n&nbsp;\r\n<ul>\r\n<ul>\r\n	<li>The DAO architect has control over the code generated by all other developers using FireStorm/DAO Enterprise Edition, so they can benefit from the DAO architect\'s specialist expertise.</li>\r\n	<li>The DAO architect can ensure that programmers are strictly following coding standards/best practices. This benefit is important in large organizations with multiple development teams, or where there are multiple development projects, because it ensures a consistent approach to the common task of database access.</li>\r\n	<li>Multiple custom DAOs can be developed as required for different types of projects (for example, optimization for different databases)</li>\r\n	<li>Additional features can be added to the DAO templates by the DAO architect</li>\r\n	<li>FireStorm/DAO can be more closely integrated with existing development procedures (for example, special build system requirements, internal coding standards)</li>\r\n	<li>The Architect Edition can be used to address certain skill shortages – where the DAO expert can control the activities of less skilled developers. It is particularly useful for software developers with database skills that may not have sufficient Java experience to write Java persistence code from scratch.</li>\r\n</ul>\r\n</ul>\r\n<h2>Custom Code Generation with FireStorm/DAO Architect Edition</h2>\r\nFireStorm/DAO™ Architect Edition allows custom code generation modules to be developed and integrated into the FireStorm/DAO product.\r\n\r\n&nbsp;\r\n\r\nThe FireStorm/DAO™ SDK provides two interfaces that must be implemented by user-defined code generation providers. These are the <span style=\"font-family: courier;\">Provider</span> and <span style=\"font-family: courier;\">ProviderOptions</span> interfaces.\r\n\r\n&nbsp;\r\n\r\nOnce the user-defined provider class has been developed it can be integrated with FireStorm/DAO™ by simply adding the class name to the firestorm-conf.xml file as in the following example:\r\n<p class=\"courier\">&lt;codegen-providers&gt;\r\n&lt;provider&gt;com.mycompany.codegen.MyProvider&lt;/provider&gt;\r\n&lt;/codegen-providers&gt;</p>\r\n&nbsp;\r\n\r\nThis code generation provider will now be available within the \"Generate\" menu in the FireStorm/DAO™ user interface and will also be available to the Ant code generation task.\r\n\r\nThe following syntax can be used to invoke a user-defined code generation provider using Ant:\r\n<pre class=\"prettyprint\">&lt;codegen\r\nhome=\"${firestorm.home}\"\r\nsrc=\"${firestorm.home}/projects/myproject.xml\"\r\nprovider=\"myprovider\"\r\noutput=\"generated-code\"\r\n/&gt;</pre>\r\n<a id=\"codegeneration\" name=\"codegeneration\"></a>\r\n<h2>Example of Code Generation Template</h2>\r\n<pre class=\"prettyprint\">/*\r\n* Copyright 2008 CodeFutures Corporation. All rights reserved.\r\n*\r\n* This is vendor code. Use is subject to license terms.\r\n*\r\n* Author: Andy Grove\r\n* Date: 21-April-2008\r\n* Time: 08:57:11\r\n*\r\n* Visit / for more information.\r\n*/\r\npackage com.codefutures.firestorm.codegen.dao;\r\n\r\nimport com.codefutures.jingo.source.dom.JClass;\r\nimport com.codefutures.jingo.source.dom.JAttribute;\r\nimport com.codefutures.jingo.source.factory.SourceFactory;\r\nimport com.codefutures.firestorm.project.dom.TableDao;\r\nimport com.codefutures.firestorm.project.dom.TableDaoColumn;\r\nimport com.codefutures.firestorm.project.dom.PrimaryKey;\r\nimport com.codefutures.firestorm.api.CommonOptions;\r\n\r\npublic class GenTablePk\r\n{\r\n     public staticJClassgenerate(\r\n    TableDaodao,\r\n     CommonOptionsconfig\r\n     )\r\n     {\r\n         JClassc= SourceFactory.createClass(\r\n         config.getDtoPackageName(),\r\n         dao.getJavaName()\r\n         +DaoConst.PK_SUFFIX\r\n         );\r\n\r\n         c.setJavaDoc(\r\n           \"This class represents the primary key of the \"\r\n             +dao.getSqlName()\r\n           +\" table.\"\r\n         );\r\n\r\n          c.addImport( \"java.io.Serializable\");\r\n          c.addImplements( \"Serializable\");\r\n\r\n          PrimaryKeypk= dao.getPrimaryKey();\r\n\r\n          if (pk!=null)\r\n         {\r\n             TableDaoColumncol[]=dao.getPrimaryKeyColumnList();\r\n             for (inti= 0;i col.length; i++)\r\n              {\r\n                JAttributeattr= c.createAttribute(\r\n                 col[i].getJavaType(),\r\n                 col[i].getJavaName()\r\n                 );\r\n\r\n                  c.createAccessorMethods(attr );\r\n               }\r\n\r\n                c.createConstructor( c.getAttributeList());\r\n          }\r\n\r\n          DaoCodeGenHelper.createToStringMethod(\r\n             c,\r\n              dao.getPrimaryKeyColumnList()\r\n          );\r\n\r\n          return c;\r\n     }\r\n\r\n}</pre>\r\n<h2>FireStorm/DAO Architect Edition Customer Testimonials</h2>\r\n“FireStorm/DAO Architect Edition gives us full control and ownership over the code that is much preferred over other proprietary products. In our experience, most other DB mapping tools and products provide great productivity over the short term, but over the long term, the inability to control the generated JDBC introduces bugs that are very difficult to fix and maintain. Unnecessary workarounds are then used which contaminate our system\'s architecture. FireStorm/DAO will definitely stay part of our tool set within the foreseeable future!”\r\n<em>Kobus Steenekamp, Senior Java Developer, Discovery Health</em>\r\n\r\n&nbsp;\r\n\r\n“FireStorm/DAO is a great tool not only for rapidly prototyping, but also for doing production quality code. During code reviews and load testing, we have found that the code generated by FireStorm/DAO performs exceptionally well.\r\nWe have eliminated the concern of connections remaining open and each developer implementing persistence layers differently.”\r\n<em>Robert Peck, Lead Architect, Ahold USA</em>\r\n\r\n&nbsp;\r\n\r\n“FireStorm/DAO Architect Edition allows us complete control over the generated code mitigating any risks of changes in our application or the product. We were able to build upon the generated persistence layer and generate much of our client and business layer code. In some cases, we were able to generate up to 75% of the code leaving only business logic to program.\r\n\r\nWe like to joke that at the end of our 18-month project, we will have figured out how to generate the entire application. We would like to thank the FireStorm/DAO team for their outstanding support throughout our project.”\r\n<em>Matt Pearce, Technology Consultant, Ajilon Consulting</em>\r\n<p class=\"additionalrl\"><a href=\"/products/firestorm/download/\">Download FireStorm/DAO </a></p>\r\n&nbsp;\r\n<h1>FireStorm/DAO OEM Edition</h1>\r\n<img src=\"/img/CF_FS_BOX_02_OE_SM.gif\" alt=\"\" align=\"left\" />\r\n\r\nFireStorm/DAO OEM Edition is specifically aimed at software product vendors. The functionality isthe same as FireStorm/DAO Architect Edition, with additional, normally unavailable, internal technical documentation as possibly access to source code. CodeFutures\' commitment to flexible licensing arrangement and product packages ensures that ISVs of any size can be accommodated. FireStorm/DAO is highly portable and easy to integrate with third-party software.\r\n\r\nThe product packaging options available for negotiation are:\r\n<ul>\r\n<ul>\r\n	<li>Software, full product or specified components</li>\r\n	<li>Product documentation</li>\r\n	<li>Branding</li>\r\n	<li>Technical support</li>\r\n	<li>Services from CodeFutures Customer Engineering Group</li>\r\n	<li>Training</li>\r\n	<li>Sales support</li>\r\n	<li>Marketing support</li>\r\n	<li>Product development support</li>\r\n	<li>Intellectual property rights</li>\r\n</ul>\r\n</ul>\r\nThe benefits of embedding FireStorm/DAO include:\r\n<ul>\r\n<ul>\r\n	<li>Lower cost than in-house development</li>\r\n</ul>\r\n</ul>\r\nThe technology investment in providing DAO has already been made by CodeFutures. Therefore, it is possible to offer this technology to other ISVs at a much-reducedcost compared with the cost of starting development. A considerable amount of effort is currently required to write the core code generation utilities.\r\n<ul>\r\n<ul>\r\n	<li>Short time-to-market</li>\r\n</ul>\r\n</ul>\r\nFireStorm/DAO is ready for immediate use. The products have been availablefor several releases and successfully deployed, both directly by customers and as part of OEM Edition ISV agreements.\r\n<ul>\r\n<ul>\r\n	<li>Core competence</li>\r\n</ul>\r\n</ul>\r\nThe core competence in CodeFutures is code automation. Without a specialist development team, it is difficult for other ISVs to replicate the features and functionality provided in CodeFutures™ products.\r\n\r\nFurther information on the FireStorm/DAO OEM Edition can be obtained by contacting <a href=\"mailto:sales@codefutures.com\">sales@codefutures.com</a>.\r\n\r\n&nbsp;\r\n<p class=\"additionalrl\"><a href=\"/products/firestorm/download/\">Download FireStorm/DAO</a></p>', 'Database Access Tool: FireStorm/DAO', '', 'draft', 'open', 'open', '', '', '', '', '2015-05-22 13:51:24', '2015-05-22 19:51:24', '', '0', 'http://www.agildata.com/?page_id=171', '0', 'page', '', '0');
INSERT INTO `wpag_posts` VALUES('172', '5', '2015-05-22 13:51:15', '2015-05-22 19:51:15', '<h2>Database Access Tool: FireStorm/DAO</h2>\r\nFireStorm/DAO is a code generator that makes software developers more productive by automatically generating DAO code for accessing relational databases. FireStorm/DAO\'s code generation approach cuts costs through higher developer productivity, better software quality, and lower maintenance costs.\r\n<h3>A Database Access Tool for Data Access Objects</h3>\r\nFireStorm/DAO is a database access tool that imports existing database schemas (from a SQL script or from a live JDBC connection) and generates a complete data persistence tier based on any of the following persistence technologies:\r\n<ul>\r\n	<li>Standard <a href=\"/java-dao/\">Java DAO</a> using <a href=\"/jdbc-dao/\">JDBC DAO</a></li>\r\n	<li><a href=\"/hibernate/\">Hibernate DAO</a></li>\r\n	<li><a href=\"/spring-dao/\">Spring DAO</a> JDBC</li>\r\n	<li>Ruby (using the mysql-ruby library)</li>\r\n</ul>\r\nFireStorm/DAO generates code that is compliant with the Data Access Object design pattern (the DAO design pattern is a core J2EE design pattern). The database access tool generates Java DAO code and configuration files that developers would otherwise have to write by hand. In addition to being a database access tool, FireStorm/DAO can also generate presentation tier code based on JSPs and Struts.ac\r\n<h3 style=\"clear: none;\">A Database Access Tool to Reduce Complexity</h3>\r\nFireStorm/DAO adopts a pragmatic approach of generating Java DAO code for data persistence that is a direct mapping of a particular relational database schema. It is also possible to define complex multi-table queries and to leverage existing database logic contained within stored procedures.\r\n\r\nFireStorm/DAO can generate DAO code for standalone Java as well as for leading J2EE application servers, such as JBoss, BEA WebLogic, IBM WebSphere, and Apache Tomcat. The generated DAO code is well-written, consistent, and contains technical documentation. Most importantly, the generated code is production quality and has been deployed in thousands of applications worldwide.\r\n<p class=\"additionalrl\"><a href=\"/products/firestorm/download/\">Free Evaluation: Download FireStorm/DAO</a></p>\r\n\r\n<h2>FireStorm/DAO Product Editions</h2>\r\n<h3>FireStorm/DAO Architect Edition</h3>\r\n<a href=\"/architect/\"><img src=\"/img/CF_FS_BOX_02_AR_SM.gif\" alt=\"\" align=\"left\" border=\"0\" /></a>\r\n\r\nFireStorm/DAO Architect Edition generates a JDBC DAO tier and a complete Web application based on Struts and Tiles, generates DAOs for partial schemas from user-selected tables and rows, and provides performance tuning options. FireStorm/DAO generates <a href=\"/hibernate/\">Hibernate DAO</a> and <a href=\"/spring-dao/\">Spring DAO</a> persistence tiers. FireStorm/DAO allows new custom code generation modules to be developed and integrated with the FireStorm/DAO Studio environment. The code generation modules are written in standard Java so there is no need to learn a proprietary code generation template language as with other solutions.\r\n<h3>FireStorm/DAO OEM Edition</h3>\r\n<a href=\"/products/firestorm/editions/oem/\"><img src=\"/img/CF_FS_BOX_02_OE_SM.gif\" alt=\"\" align=\"left\" border=\"0\" /></a>\r\n\r\nFireStorm/DAO OEM Edition is specifically aimed at software product vendors. The functionality is the same as FireStorm/DAO Architect Edition, with additional, normally unavailable, internal technical documentation as possibly access to source code. CodeFutures\' commitment to flexible licensing arrangement and product packages ensures that ISVs of any size can be accommodated. FireStorm/DAO is highly portable and easy to integrate with third-party software.\r\n\r\n&nbsp;\r\n<h2>A Database Access Tool to Reduce Development Costs</h2>\r\nRead about the benefits of a database access tool:\r\n\r\n<strong>How does FireStorm/DAO cut costs?</strong>\r\n<ul>\r\n<ul>\r\n	<li>Cut Development Costs with Measurable Productivity Gains</li>\r\n	<li>Lower Ongoing Maintenance Costs\r\n<ul>\r\n	<li>Better Software Design</li>\r\n	<li>Business Rather Than Technical Focus</li>\r\n	<li>Consistent Design Practices</li>\r\n	<li>Fewer Errors Reduces Testing and Debugging Costs</li>\r\n</ul>\r\n</li>\r\n</ul>\r\n</ul>\r\nRead <a href=\"/dao-benefits/#valuable\">more here</a>.\r\n\r\n<strong>What are the technical benefits of FireStorm/DAO?</strong>\r\n<ul>\r\n<ul>\r\n	<li>No Database Changes Required</li>\r\n	<li>Standards-Based Development</li>\r\n	<li>High Performance Code</li>\r\n	<li>Portable code</li>\r\n	<li>Shorter Development Cycles</li>\r\n	<li>Reduced Testing</li>\r\n	<li>Professional Product Packaging\r\n<ul>\r\n	<li>User Friendly Interface</li>\r\n	<li>No Proprietary Runtime Libraries Required</li>\r\n	<li>Compatible with Existing Development Processes</li>\r\n	<li>Easy Installation and Configuration</li>\r\n</ul>\r\n</li>\r\n</ul>\r\n</ul>\r\nRead <a href=\"/dao-benefits/#benefits\">more here</a>.\r\n\r\n<strong>Where is FireStorm/DAO used?</strong>\r\n\r\nThere are many scenarios where FireStorm/DAO is an ideal database access tool, including where there frequent changes to the database schema and therefore the DAO code, when the database schema is very large and writing the data access code would take considerable time, and so on.\r\n\r\nRead <a href=\"/dao-benefits/#used\">more here</a>.\r\n<h2>FireStorm/DAO Architect Edition</h2>\r\n<img src=\"/img/CF_FS_BOX_02_AR_SM.gif\" alt=\"\" width=\"110\" height=\"121\" align=\"left\" />\r\n\r\nFireStorm/DAO Architect Edition is powerful and flexible database access tool that offers the choice of generating a DAO tier using either JDBC DAO, EJB CMP DAO, <a href=\"/hibernate/\">Hibernate DAO</a>, and <a href=\"/spring-dao/\">Spring DAO</a>. In addition, the Architect Edition can also generate J2EE Web applications for Tomcat, JBoss, BEA WebLogic, and IBM WebSphere.\r\n\r\n&nbsp;\r\n<p class=\"additionalrl\"><a href=\"/products/firestorm/download/\">Download FireStorm/DAO Architect Edition Evaluation</a></p>\r\n&nbsp;\r\n\r\nFireStorm/DAO Architect Edition is priced at $995 per developer for Annual Developer Subscriptions, which can be purchased from the CodeFutures <a href=\"/purchase\">online store</a>.\r\n\r\n&nbsp;\r\n\r\nCodeFutures provides FireStorm/DAO users with the source code for the entire product, including the source code for the code generation templates (JDBC DAO, <a href=\"/hibernate/\">Hibernate DAO</a>, and Spring DAO).\r\n\r\nThe code generation templates are written in standard Java so there is no need to learn a proprietary code generation template language as with other solutions. There is no limit on the number of custom DAO design templates can be developed – possibly using different DAO templates for different parts of the same application. Additional non-DAO custom code generation templates can also be developed and used with FireStorm/DAO.\r\n\r\n&nbsp;\r\n\r\nFireStorm/DAO Architect Edition includes the source code for the entire product, including the source code for the each of the DAOs (JDBC DAO, <a href=\"/hibernate/\">Hibernate DAO</a>, and <a href=\"/spring-dao/\">Spring DAO</a>). This allows FireStorm/DAO to be customized:\r\n<ul>\r\n<ul>\r\n	<li>Optimize performance based on specific project requirements</li>\r\n	<li>Integrate more closely with existing development procedures and build environments, such as internal coding standards</li>\r\n	<li>Add environment-specific extra custom features such as caching, security, auditing, and clustering</li>\r\n</ul>\r\n</ul>\r\nFireStorm/DAO Architect Edition also allows new custom code generation templates to be developed and integrated with the FireStorm/DAO Studio environment.\r\n\r\n&nbsp;\r\n<h2>FireStorm/DAO Architect Edition Features</h2>\r\n<ul>\r\n<ul>\r\n	<li>Import database schemas from a JDBC connection</li>\r\n	<li>Import database schemas from SQL/DDL scripts</li>\r\n	<li>Reverse-engineer stored procedures</li>\r\n	<li>Round-trip engineering (import modifications made to a schema)</li>\r\n	<li>Create new schemas using a simple user interface</li>\r\n	<li>Imported schemas can be modified using a simple user interface</li>\r\n	<li>Generates Data Access Object (DAO) interfaces</li>\r\n	<li>Generates Data Access Object (DAO) exception classes</li>\r\n	<li>Generates Data Transfer Object (DTO) classes</li>\r\n	<li>Generates Data Access Object (DAO) classes for JDBC</li>\r\n	<li>Generates Data Access Object (DAO) classes for Java Persistence API (JPA)</li>\r\n	<li>Generates Data Access Object (DAO) classes for Spring JDBC</li>\r\n	<li>Generates Session Bean facade for each DAO interface</li>\r\n	<li>Generates Web pages based on Apache Struts framework</li>\r\n	<li>Generates Web pages based on plain Java Server Pages</li>\r\n	<li>Dynamic Update Method</li>\r\n	<li>Interactive SQL Tool</li>\r\n	<li>Database Schema Migration</li>\r\n	<li>Optimized JDBC Code</li>\r\n	<li>Import Generation for Partial Schema</li>\r\n	<li>Generates CMP deployment descriptors</li>\r\n	<li>Generates J2EE deployment descriptors</li>\r\n	<li>Generates ANT build scripts</li>\r\n</ul>\r\n</ul>\r\n<h2>Supported Databases</h2>\r\nAll editions of FireStorm/DAO support the following database platforms:\r\n<ul>\r\n<ul>\r\n	<li>Oracle 8i/9i</li>\r\n	<li>Sybase</li>\r\n	<li>IBM DB2</li>\r\n	<li>MySQL</li>\r\n	<li>IBM Cloudscape</li>\r\n	<li>Microsoft SQL Server</li>\r\n	<li>Informix</li>\r\n	<li>Apache Derby</li>\r\n	<li>Microsoft Access</li>\r\n	<li>InnoDB</li>\r\n	<li>PostgreSQL</li>\r\n	<li>Any JDBC-compliant database</li>\r\n</ul>\r\n</ul>\r\n<h2>Supported J2EE Platforms</h2>\r\nFireStorm/DAO Enterprise Edition generates code for the following J2EE platforms:\r\n<ul>\r\n<ul>\r\n	<li>BEA WebLogic 6.1</li>\r\n	<li>BEA WebLogic 7</li>\r\n	<li>BEA WebLogic 8.1</li>\r\n	<li>IBM WebSphere 4</li>\r\n	<li>IBM WebSphere 5</li>\r\n	<li>JBoss 3.2</li>\r\n</ul>\r\n</ul>\r\n<h2>Supported Operating Systems</h2>\r\nAll editions of FireStorm/DAO run on the following operating systems:\r\n<ul>\r\n<ul>\r\n	<li>Microsoft Windows 2000, Windows NT4, Windows XP, Windows Vista</li>\r\n	<li>UNIX</li>\r\n	<li>Linux</li>\r\n	<li>Mac OS X</li>\r\n</ul>\r\n</ul>\r\n<h2>FireStorm/DAO Architect Edition - Demonstration Video</h2>\r\n<div style=\"max-width: 420px;\"><iframe src=\"//www.youtube.com/embed/nzLm03I5WtY\" width=\"240\" height=\"180\" frameborder=\"0\" allowfullscreen=\"allowfullscreen\"></iframe></div>\r\n<h2 id=\"Team\">Team Development using the Architect Edition</h2>\r\nThe maximum benefits of FireStorm/DAO are usually derived by a software development group using the Architect Edition to customize the DAO design template for its environment.\r\n\r\n&nbsp;\r\n\r\nAn experienced software developer within a software development team customizes the DAO template. Then any other programmers who want to develop a data persistence tier use the Enterprise Edition and the custom DAO template provided by the DAO architect.\r\n\r\n&nbsp;\r\n\r\nThe DAO templates in FireStorm/DAO Architect Edition can be customized to a project’s exact requirements: optimize performance, integrate more closely with existing build environments, and add environment-specific extra custom features such as caching, security, auditing, and clustering.\r\n\r\n&nbsp;\r\n\r\nThe benefits of using FireStorm/DAO Architect Edition with development teams include:\r\n\r\n&nbsp;\r\n<ul>\r\n<ul>\r\n	<li>The DAO architect has control over the code generated by all other developers using FireStorm/DAO Enterprise Edition, so they can benefit from the DAO architect\'s specialist expertise.</li>\r\n	<li>The DAO architect can ensure that programmers are strictly following coding standards/best practices. This benefit is important in large organizations with multiple development teams, or where there are multiple development projects, because it ensures a consistent approach to the common task of database access.</li>\r\n	<li>Multiple custom DAOs can be developed as required for different types of projects (for example, optimization for different databases)</li>\r\n	<li>Additional features can be added to the DAO templates by the DAO architect</li>\r\n	<li>FireStorm/DAO can be more closely integrated with existing development procedures (for example, special build system requirements, internal coding standards)</li>\r\n	<li>The Architect Edition can be used to address certain skill shortages – where the DAO expert can control the activities of less skilled developers. It is particularly useful for software developers with database skills that may not have sufficient Java experience to write Java persistence code from scratch.</li>\r\n</ul>\r\n</ul>\r\n<h2>Custom Code Generation with FireStorm/DAO Architect Edition</h2>\r\nFireStorm/DAO™ Architect Edition allows custom code generation modules to be developed and integrated into the FireStorm/DAO product.\r\n\r\n&nbsp;\r\n\r\nThe FireStorm/DAO™ SDK provides two interfaces that must be implemented by user-defined code generation providers. These are the <span style=\"font-family: courier;\">Provider</span> and <span style=\"font-family: courier;\">ProviderOptions</span> interfaces.\r\n\r\n&nbsp;\r\n\r\nOnce the user-defined provider class has been developed it can be integrated with FireStorm/DAO™ by simply adding the class name to the firestorm-conf.xml file as in the following example:\r\n<p class=\"courier\">&lt;codegen-providers&gt;\r\n&lt;provider&gt;com.mycompany.codegen.MyProvider&lt;/provider&gt;\r\n&lt;/codegen-providers&gt;</p>\r\n&nbsp;\r\n\r\nThis code generation provider will now be available within the \"Generate\" menu in the FireStorm/DAO™ user interface and will also be available to the Ant code generation task.\r\n\r\nThe following syntax can be used to invoke a user-defined code generation provider using Ant:\r\n<pre class=\"prettyprint\">&lt;codegen\r\nhome=\"${firestorm.home}\"\r\nsrc=\"${firestorm.home}/projects/myproject.xml\"\r\nprovider=\"myprovider\"\r\noutput=\"generated-code\"\r\n/&gt;</pre>\r\n<a id=\"codegeneration\" name=\"codegeneration\"></a>\r\n<h2>Example of Code Generation Template</h2>\r\n<pre class=\"prettyprint\">/*\r\n* Copyright 2008 CodeFutures Corporation. All rights reserved.\r\n*\r\n* This is vendor code. Use is subject to license terms.\r\n*\r\n* Author: Andy Grove\r\n* Date: 21-April-2008\r\n* Time: 08:57:11\r\n*\r\n* Visit / for more information.\r\n*/\r\npackage com.codefutures.firestorm.codegen.dao;\r\n\r\nimport com.codefutures.jingo.source.dom.JClass;\r\nimport com.codefutures.jingo.source.dom.JAttribute;\r\nimport com.codefutures.jingo.source.factory.SourceFactory;\r\nimport com.codefutures.firestorm.project.dom.TableDao;\r\nimport com.codefutures.firestorm.project.dom.TableDaoColumn;\r\nimport com.codefutures.firestorm.project.dom.PrimaryKey;\r\nimport com.codefutures.firestorm.api.CommonOptions;\r\n\r\npublic class GenTablePk\r\n{\r\n     public staticJClassgenerate(\r\n    TableDaodao,\r\n     CommonOptionsconfig\r\n     )\r\n     {\r\n         JClassc= SourceFactory.createClass(\r\n         config.getDtoPackageName(),\r\n         dao.getJavaName()\r\n         +DaoConst.PK_SUFFIX\r\n         );\r\n\r\n         c.setJavaDoc(\r\n           \"This class represents the primary key of the \"\r\n             +dao.getSqlName()\r\n           +\" table.\"\r\n         );\r\n\r\n          c.addImport( \"java.io.Serializable\");\r\n          c.addImplements( \"Serializable\");\r\n\r\n          PrimaryKeypk= dao.getPrimaryKey();\r\n\r\n          if (pk!=null)\r\n         {\r\n             TableDaoColumncol[]=dao.getPrimaryKeyColumnList();\r\n             for (inti= 0;i col.length; i++)\r\n              {\r\n                JAttributeattr= c.createAttribute(\r\n                 col[i].getJavaType(),\r\n                 col[i].getJavaName()\r\n                 );\r\n\r\n                  c.createAccessorMethods(attr );\r\n               }\r\n\r\n                c.createConstructor( c.getAttributeList());\r\n          }\r\n\r\n          DaoCodeGenHelper.createToStringMethod(\r\n             c,\r\n              dao.getPrimaryKeyColumnList()\r\n          );\r\n\r\n          return c;\r\n     }\r\n\r\n}</pre>\r\n<h2>FireStorm/DAO Architect Edition Customer Testimonials</h2>\r\n“FireStorm/DAO Architect Edition gives us full control and ownership over the code that is much preferred over other proprietary products. In our experience, most other DB mapping tools and products provide great productivity over the short term, but over the long term, the inability to control the generated JDBC introduces bugs that are very difficult to fix and maintain. Unnecessary workarounds are then used which contaminate our system\'s architecture. FireStorm/DAO will definitely stay part of our tool set within the foreseeable future!”\r\n<em>Kobus Steenekamp, Senior Java Developer, Discovery Health</em>\r\n\r\n&nbsp;\r\n\r\n“FireStorm/DAO is a great tool not only for rapidly prototyping, but also for doing production quality code. During code reviews and load testing, we have found that the code generated by FireStorm/DAO performs exceptionally well.\r\nWe have eliminated the concern of connections remaining open and each developer implementing persistence layers differently.”\r\n<em>Robert Peck, Lead Architect, Ahold USA</em>\r\n\r\n&nbsp;\r\n\r\n“FireStorm/DAO Architect Edition allows us complete control over the generated code mitigating any risks of changes in our application or the product. We were able to build upon the generated persistence layer and generate much of our client and business layer code. In some cases, we were able to generate up to 75% of the code leaving only business logic to program.\r\n\r\nWe like to joke that at the end of our 18-month project, we will have figured out how to generate the entire application. We would like to thank the FireStorm/DAO team for their outstanding support throughout our project.”\r\n<em>Matt Pearce, Technology Consultant, Ajilon Consulting</em>\r\n<p class=\"additionalrl\"><a href=\"/products/firestorm/download/\">Download FireStorm/DAO </a></p>\r\n&nbsp;\r\n<h1>FireStorm/DAO OEM Edition</h1>\r\n<img src=\"/img/CF_FS_BOX_02_OE_SM.gif\" alt=\"\" align=\"left\" />\r\n\r\nFireStorm/DAO OEM Edition is specifically aimed at software product vendors. The functionality isthe same as FireStorm/DAO Architect Edition, with additional, normally unavailable, internal technical documentation as possibly access to source code. CodeFutures\' commitment to flexible licensing arrangement and product packages ensures that ISVs of any size can be accommodated. FireStorm/DAO is highly portable and easy to integrate with third-party software.\r\n\r\nThe product packaging options available for negotiation are:\r\n<ul>\r\n<ul>\r\n	<li>Software, full product or specified components</li>\r\n	<li>Product documentation</li>\r\n	<li>Branding</li>\r\n	<li>Technical support</li>\r\n	<li>Services from CodeFutures Customer Engineering Group</li>\r\n	<li>Training</li>\r\n	<li>Sales support</li>\r\n	<li>Marketing support</li>\r\n	<li>Product development support</li>\r\n	<li>Intellectual property rights</li>\r\n</ul>\r\n</ul>\r\nThe benefits of embedding FireStorm/DAO include:\r\n<ul>\r\n<ul>\r\n	<li>Lower cost than in-house development</li>\r\n</ul>\r\n</ul>\r\nThe technology investment in providing DAO has already been made by CodeFutures. Therefore, it is possible to offer this technology to other ISVs at a much-reducedcost compared with the cost of starting development. A considerable amount of effort is currently required to write the core code generation utilities.\r\n<ul>\r\n<ul>\r\n	<li>Short time-to-market</li>\r\n</ul>\r\n</ul>\r\nFireStorm/DAO is ready for immediate use. The products have been availablefor several releases and successfully deployed, both directly by customers and as part of OEM Edition ISV agreements.\r\n<ul>\r\n<ul>\r\n	<li>Core competence</li>\r\n</ul>\r\n</ul>\r\nThe core competence in CodeFutures is code automation. Without a specialist development team, it is difficult for other ISVs to replicate the features and functionality provided in CodeFutures™ products.\r\n\r\nFurther information on the FireStorm/DAO OEM Edition can be obtained by contacting <a href=\"mailto:sales@codefutures.com\">sales@codefutures.com</a>.\r\n\r\n&nbsp;\r\n<p class=\"additionalrl\"><a href=\"/products/firestorm/download/\">Download FireStorm/DAO</a></p>', 'Database Access Tool: FireStorm/DAO', '', 'inherit', 'open', 'open', '', '171-revision-v1', '', '', '2015-05-22 13:51:15', '2015-05-22 19:51:15', '', '171', 'http://www.agildata.com/171-revision-v1/', '0', 'revision', '', '0');
INSERT INTO `wpag_posts` VALUES('173', '5', '2015-05-22 13:53:31', '0000-00-00 00:00:00', '<h2>AgilData | Real-Time Big Data Platform</h2>\r\nAgilData is more than “just another database” – it is an entirely new way of looking at, and working with your data. We have developed an innovative new Big Data platform, designed to remove the complexity and limitations of current data management approaches. AgilData features real-time high-performance stream processing to support data-driven enterprises who crave real-time results.\r\n\r\nAgilData allows quick and proficient accumulation of meaningful data that is increasingly difficult to access for large-enterprise, online gaming, interactive-mobile and other high-volume, Web 2.0 applications.\r\n\r\n<a href=\"http://www.codefutures.com/agildata/\">Read more about AgilData</a>\r\n\r\n<a href=\"http://www.codefutures.com/agile-data-white-paper/\">Get AgilData Whitepaper</a>\r\n\r\n<a href=\"http://www.codefutures.com/agile-data-white-paper/#signup\">Apply to be a private beta tester of AgilData</a>\r\n\r\n&nbsp;\r\n<h2>MapDB | Open Source Agile Database For Java</h2>\r\nMapDB, developed by Jan Kotek, is a new and open source project for Java databases that increases the speed, flexibility and performance of managing and gaining significance in Java applications.  It is especially useful to Java developers, as they now have a native platform to integrate Java applications directly with data stores of virtually any size.\r\n\r\n<a href=\"http://www.codefutures.com/mapdb/\">Read more about MapDB</a>\r\n\r\n<a href=\"http://www.mapdb.org/\" target=\"_blank\">Download MapDB under the Apache 2.0 license here</a>\r\n\r\n<a href=\"http://www.codefutures.com/mapdb/\">Request support for MapDB</a>\r\n<h2></h2>\r\n<h2>CodeFutures | Database Products</h2>\r\n<h3>dbShards: Database Scalability and Performance with <em><a href=\"/database-sharding/\">Database Sharding</a></em></h3>\r\ndbShards helps companies to scale large, high-volume databases using <a href=\"/database-sharding/\">Database Sharding</a>, the database scalability architecture made famous by high volume Web sites such as Flickr, YouTube, and Google. Going beyond traditional Data Warehouse Appliances, dbShards dramatically improves response times and scalability of OLTP databases, Software as a Service, and any other systems with many concurrent users – all using cost-effective commodity hardware.\r\n\r\n<a href=\"/dbshards/\">Read more about dbShards</a>.\r\n\r\n<a href=\"/database-performance-analysis/\">Free MySQL Database Performance Analysis</a>.\r\n\r\n<a href=\"/database-sharding-white-paper/\">Request Database Sharding White Paper</a>.\r\n\r\n&nbsp;\r\n<h2>FireStorm/DAO: Database Access Tool using Data Access Objects</h2>\r\n<strong><em>FireStorm/DAO</em></strong> is a <a href=\"/products/firestorm/\">database access tool</a> based on the <a href=\"/data-access-object/\">Data Access Object</a> design pattern. FireStorm/DAO makes software developers more productive by generating the Java persistence code for accessing relational databases. FireStorm/DAO cuts development costs through higher developer productivity, better software quality, and lower maintenance costs.\r\n\r\n<a href=\"/products/firestorm/\">Read more about FireStorm/DAO</a>.\r\n\r\n<a href=\"/products/firestorm/download/\">Download FireStorm/DAO</a>.\r\n<h3>FireStorm/SDO: SOA Persistence using Service Data Objects</h3>\r\n<em><strong>FireStorm/SDO</strong></em> provides database persistence based on the Service Data Object (SDO) specification. FireStorm/SDO is particularly useful for high performance applications that have a Service-Oriented Architecture.\r\n<h2><span style=\"font-size: 14px; line-height: 1.5em;\"> provides database persistence based on the Service Data Object (SDO) specification. FireStorm/SDO is particularly useful for high performance applications that have a Service-Oriented Architecture.</span></h2>', 'Database Products', '', 'draft', 'open', 'open', '', '', '', '', '2015-05-22 13:53:31', '2015-05-22 19:53:31', '', '0', 'http://www.agildata.com/?page_id=173', '0', 'page', '', '0');
INSERT INTO `wpag_posts` VALUES('174', '5', '2015-05-22 13:53:20', '2015-05-22 19:53:20', '<h2>AgilData | Real-Time Big Data Platform</h2>\r\nAgilData is more than “just another database” – it is an entirely new way of looking at, and working with your data. We have developed an innovative new Big Data platform, designed to remove the complexity and limitations of current data management approaches. AgilData features real-time high-performance stream processing to support data-driven enterprises who crave real-time results.\r\n\r\nAgilData allows quick and proficient accumulation of meaningful data that is increasingly difficult to access for large-enterprise, online gaming, interactive-mobile and other high-volume, Web 2.0 applications.\r\n\r\n<a href=\"http://www.codefutures.com/agildata/\">Read more about AgilData</a>\r\n\r\n<a href=\"http://www.codefutures.com/agile-data-white-paper/\">Get AgilData Whitepaper</a>\r\n\r\n<a href=\"http://www.codefutures.com/agile-data-white-paper/#signup\">Apply to be a private beta tester of AgilData</a>\r\n\r\n&nbsp;\r\n<h2>MapDB | Open Source Agile Database For Java</h2>\r\nMapDB, developed by Jan Kotek, is a new and open source project for Java databases that increases the speed, flexibility and performance of managing and gaining significance in Java applications.  It is especially useful to Java developers, as they now have a native platform to integrate Java applications directly with data stores of virtually any size.\r\n\r\n<a href=\"http://www.codefutures.com/mapdb/\">Read more about MapDB</a>\r\n\r\n<a href=\"http://www.mapdb.org/\" target=\"_blank\">Download MapDB under the Apache 2.0 license here</a>\r\n\r\n<a href=\"http://www.codefutures.com/mapdb/\">Request support for MapDB</a>\r\n<h2></h2>\r\n<h2>CodeFutures | Database Products</h2>\r\n<h3>dbShards: Database Scalability and Performance with <em><a href=\"/database-sharding/\">Database Sharding</a></em></h3>\r\ndbShards helps companies to scale large, high-volume databases using <a href=\"/database-sharding/\">Database Sharding</a>, the database scalability architecture made famous by high volume Web sites such as Flickr, YouTube, and Google. Going beyond traditional Data Warehouse Appliances, dbShards dramatically improves response times and scalability of OLTP databases, Software as a Service, and any other systems with many concurrent users – all using cost-effective commodity hardware.\r\n\r\n<a href=\"/dbshards/\">Read more about dbShards</a>.\r\n\r\n<a href=\"/database-performance-analysis/\">Free MySQL Database Performance Analysis</a>.\r\n\r\n<a href=\"/database-sharding-white-paper/\">Request Database Sharding White Paper</a>.\r\n\r\n&nbsp;\r\n<h2>FireStorm/DAO: Database Access Tool using Data Access Objects</h2>\r\n<strong><em>FireStorm/DAO</em></strong> is a <a href=\"/products/firestorm/\">database access tool</a> based on the <a href=\"/data-access-object/\">Data Access Object</a> design pattern. FireStorm/DAO makes software developers more productive by generating the Java persistence code for accessing relational databases. FireStorm/DAO cuts development costs through higher developer productivity, better software quality, and lower maintenance costs.\r\n\r\n<a href=\"/products/firestorm/\">Read more about FireStorm/DAO</a>.\r\n\r\n<a href=\"/products/firestorm/download/\">Download FireStorm/DAO</a>.\r\n<h3>FireStorm/SDO: SOA Persistence using Service Data Objects</h3>\r\n<em><strong>FireStorm/SDO</strong></em> provides database persistence based on the Service Data Object (SDO) specification. FireStorm/SDO is particularly useful for high performance applications that have a Service-Oriented Architecture.\r\n<h2><span style=\"font-size: 14px; line-height: 1.5em;\"> provides database persistence based on the Service Data Object (SDO) specification. FireStorm/SDO is particularly useful for high performance applications that have a Service-Oriented Architecture.</span></h2>', 'Database Products', '', 'inherit', 'open', 'open', '', '173-revision-v1', '', '', '2015-05-22 13:53:20', '2015-05-22 19:53:20', '', '173', 'http://www.agildata.com/173-revision-v1/', '0', 'revision', '', '0');
INSERT INTO `wpag_posts` VALUES('175', '5', '2015-05-22 13:56:06', '0000-00-00 00:00:00', 'CodeFutures offers an effective sharding solution with our product, dbShards, and our newest product <a href=\"http://codefutures.com/agildata/\" target=\"_blank\">AgilData</a>. Our customers have used dbShards to achieve unprecedented performance, in the scope of hundreds of millions of reads and millions of writes every day.\r\n\r\n<a href=\"http://www.dbshards.com\">Learn More</a>\r\n<h1>Database Sharding</h1>\r\n<h2>The Rise of Database Sharding</h2>\r\nThe concept of Database Sharding has been gaining popularity over the past several years, due to the enormous growth in transaction volume and size of business application databases. This is particularly true for many successful online service providers, Software as a Service (SaaS) companies, and social networking Web sites.\r\n\r\nDatabase Sharding can be simply defined as a \"shared-nothing\" partitioning scheme for large databases across a number of servers, enabling new levels of database performance and scalability achievable. If you think of broken glass, you can get the concept of sharding - breaking your database down into smaller chunks called “shards” and spreading those across a number of distributed servers.\r\n\r\nThe term \"sharding\" was coined by Google engineers, and popularized through their publication of the Big Table architecture. However, the concept of \"shared-nothing\" database partitioning has been around for a decade or more and there have been many implementations over this period, especially high profile in-house built solutions by Internet leaders such as eBay, Amazon, Digg, Flickr, Skype, YouTube, Facebook, Friendster, and Wikipedia.\r\n\r\nThe focus of this paper is on the need for Database Sharding, the options available for database partitioning, and the key considerations for a successful sharding implementation.\r\n<h2>What Drives the Need for Database Sharding?</h2>\r\nDatabase Sharding is a highly scalable approach for improving the throughput and overall performance of high-transaction, large database-centric business applications. Since the inception of the relational database, application engineers and architects have required ever-increasing performance and capacity, based on the simple observation that business databases generally grow in size over time. Adding to this general trend is the extreme expansion of business data due to the evolution of the Internet economy, the Information Age, and the prevalence of high-volume electronic commerce.\r\n\r\nAs any experienced database administrator or application developer knows all too well, it is axiomatic that as the size and transaction volume of the database tier incurs linear growth, response times tend to grow logarithmically. This is shown in the following diagram:\r\n\r\n<a href=\"http://codefutures.com/wp-content/uploads/2014/03/database-sharding-figure-1.jpg\"><img class=\"alignnone wp-image-14624 size-medium\" src=\"http://codefutures.com/wp-content/uploads/2014/03/database-sharding-figure-1-300x300.jpg\" alt=\"database sharding figure 1\" width=\"300\" height=\"300\" /></a>\r\n<p class=\"imgdesc\"><strong>Figure 1. The growth in database transactions and volumes has a large impact on response times.</strong></p>\r\nThe reasons for the performance and scalability challenges are inherent to the fundamental design of the database management systems themselves. Databases rely heavily on the primary three components of any computer:\r\n<ul>\r\n	<li>CPU</li>\r\n	<li>Memory</li>\r\n	<li>Disk</li>\r\n</ul>\r\nThrough benchmark tests that we have performed, we know that each of these elements on a single server can only scale to a given point, and then other measures must be taken. While it is clear that disk I/O is the primary bottleneck, as database management systems have improved they also continue to take greater advantage of CPU and memory. In fact, we have observed that it is the matching of these three factors that determines maximum performance. In other words, you cannot add an unlimited number of CPUs (or processing cores) and see a commensurate increase in performance without also improving the memory capacity and performance of the disk drive subsystem. It is also common to see a diminishing return as resources are added to a single database server. These factors are especially true in mixed-use business transaction systems; systems that perform a high volume of read and write transactions, as well as supporting generalized business reporting tasks.\r\n\r\nTherefore, as business applications gain sophistication and continue to grow in demand, architects, developers and database administrators have been presented with a constant challenge of maintaining database performance for mission critical systems. This landscape drives the need for Database Sharding.\r\n<h2>Database Partitioning Options</h2>\r\nIt has long been known that database partitioning is the answer to improving the performance and scalability of relational databases. Many techniques have been evolved, including:\r\n<ul>\r\n	<li><strong>Master/Slave:</strong> This is the simplest option used by many organizations, with a single Master server for all write (Create Update or Delete, or CRUD) operations, and one or many additional Slave servers that provide read-only operations. The Master uses standard, near-real-time database replication to each of the Slave servers. The Master/Slave model can speed overall performance to a point, allowing read-intensive processing to be offloaded to the Slave servers, but there are several limitations with this approach:\r\n<ul>\r\n	<li>The single Master server for writes is a clear limit to scalability, and can quickly create a bottleneck.</li>\r\n	<li>The Master/Slave replication mechanism is \"near-real-time,\" meaning that the Slave servers are not guaranteed to have a current picture of the data that is in the Master. While this is fine for some applications, if your applications require an up-to-date view, this approach is unacceptable.</li>\r\n	<li>Many organizations use the Master/Slave approach for high-availability as well, but it suffers from this same limitation given that the Slave servers are not necessarily current with the Master. If a catastrophic failure of the Master server occurs, any transactions that are pending for replication will be lost, a situation that is highly unacceptable for most business transaction applications.</li>\r\n</ul>\r\n</li>\r\n	<li><strong>Cluster Computing:</strong> Cluster computing utilizes many servers operating in a group, with shared messaging between the nodes of the cluster. Most often this scenario relies on a centralized shared disk facility, typically a Storage Area Network (SAN). Each node in the cluster runs a single instance of the database server, operating in various modes:\r\n<ul>\r\n	<li>For high-availability, many nodes in the cluster can be used for reads, but only one for write (CRUD) operations. This can make reads faster, but write transactions do not see any benefit. If a failure of one node occurs, then another node in the cluster takes over, again continuing to operating against the shared disk facility. This approach has limited scalability due to the single bottleneck for CRUD operations. Even the reads will ultimately hit a performance limit as the centralized shared disk facility can only spread the load so much before diminishing returns are experienced. The read limitations are particularly evident when an application requires complex joins or contains non-optimized SQL statements.</li>\r\n	<li>More advanced clustering techniques rely on real-time memory replication between nodes, keeping the memory image of nodes in the cluster up to date via a real-time messaging system. This allows each node to operate in both read or write mode, but is ultimately limited by the amount of traffic that can be transmitted between nodes (using a typical network or other high-speed communication mechanism). Therefore, as nodes are added, the communication and memory replication overhead increases geometrically, thus hitting severe scalability limits, often with a relatively small number of nodes. This solution also suffers from the same shared disk limitations of a traditional cluster, given that a growing, single large database has increasingly intensive disk I/O.</li>\r\n</ul>\r\n</li>\r\n	<li><strong>Table Partitioning:</strong> Many database management systems support table partitioning, where data in a single large table can be split across multiple disks for improved disk I/O utilization. The partitioning is typically done horizontally (separating rows by range across disk partitions), but can be vertical in some systems as well (placing different columns on separate partitions). This approach can help reduce the disk I/O bottleneck for a given table, but can often make joins and other operations slower. Further, since the approach relies on a single server instance of the database management system, all other CPU and memory contention limitations apply, further limiting scalability.</li>\r\n	<li><strong>Federated Tables:</strong> An offshoot of Table Partitioning is the Federated Table approach, where tables can be accessed across multiple servers. This approach is necessarily highly complex to administer, and lacks efficiency as the federated tables must be accessed over the network. This approach may work for some reporting or analytical tasks, but for general read/write transactions it is not a very likely choice.</li>\r\n</ul>\r\nThe common drawback with each of these approaches is the reliance on shared facilities and resources. Whether relying on shared memory, centralized disk, or processor capacity they each suffer with scalability limitations, not to mention many other drawbacks, including complex administration, lack of support for critical business requirements, and high availability limitations.\r\n<h2>Database Sharding, The \"Shared-Nothing\" Approach</h2>\r\nDatabase Sharding provides a method for scalability across independent servers, each with their own CPU, memory and disk. Contrasted with other traditional methods of achieving greater database performance, it does not suffer from many of the typical limitations posed by these other approaches. The concept of a \"shared-nothing\" database implementation has been under research or discussion for 15+ years, but it appears that the business application market is just now finding the more general need for such capability due to the exponential increase in data volumes over the past several years.\r\n\r\nThe basic concept of Database Sharding is very straightforward: take a large database, and break it into a number of smaller databases across servers. The concept is illustrated in the following diagram:\r\n\r\n<a href=\"http://codefutures.com/wp-content/uploads/2014/03/database-sharding-figure-2.jpg\"><img class=\"alignnone size-medium wp-image-14625\" src=\"http://codefutures.com/wp-content/uploads/2014/03/database-sharding-figure-2-289x300.jpg\" alt=\"database sharding figure 2\" width=\"289\" height=\"300\" /></a>\r\n<p class=\"imgdesc\"><strong>Figure 2. Database Sharding takes large databases and breaks them down into smaller databases.</strong></p>\r\nThe obvious advantage of the shared-nothing Database Sharding approach is improved scalability, growing in a near-linear fashion as more servers are added to the network. However, there are several other advantages of smaller databases, which should not be overlooked when considering a sharding solution:\r\n<ul>\r\n	<li><em>Smaller databases are easier to manage.</em> Production databases must be fully managed for regular backups, database optimization and other common tasks. With a single large database these routine tasks can be very difficult to accomplish, if only in terms of the time window required for completion. Routine table and index optimizations can stretch to hours or days, in some cases making regular maintenance infeasible. By using the sharding approach, each individual \"shard\" can be maintained independently, providing a far more manageable scenario, performing such maintenance tasks in parallel.</li>\r\n	<li><em>Smaller databases are faster.</em> The scalability of sharding is apparent, achieved through the distribution of processing across multiple shards and servers in the network. What is less apparent is the fact that each individual shard database will outperform a single large database due to its smaller size. By hosting each shard database on its own server, the ratio between memory and data on disk is greatly improved, thereby reducing disk I/O. This results in less contention for resources, greater join performance, faster index searches, and fewer database locks. Therefore, not only can a sharded system scale to new levels of capacity, individual transaction performance is benefited as well.</li>\r\n	<li><em>Database Sharding can reduce costs.</em> Most Database Sharding implementations take advantage of lower-cost open source databases, or can even take advantage of \"workgroup\" versions of commercial databases. Additionally, sharding works well with commodity multi-core server hardware, far less expensive than high-end multi-CPU servers and expensive SANs. The overall reduction in cost due to savings in license fees, software maintenance and hardware investment is substantial, in some cases 70% or more when compared to other solutions.</li>\r\n</ul>\r\nThere is no doubt that Database Sharding is a viable solution for many organizations, supported by the number of large online vendors and SaaS organizations that have implemented the technology (giants such as Amazon, eBay, and of course Google).\r\n<h2>Practicalities of Database Sharding</h2>\r\nIf Database Sharding is highly scalable, less costly, and improves performance, why hasn\'t adoption of the technology been more widespread? Is it feasible for your organization?\r\n\r\nThe reality is that Database Sharding is a very useful technology, but like other approaches, there are many factors to consider that ensure a successful implementation. Further, there are some limitations and Database Sharding will not work well for every type of business application. This chapter discusses these critical considerations and how they can be addressed.\r\n<h2>Database Sharding Challenges</h2>\r\nDue to the distributed nature of individual databases, a number of key elements must be taken into account:\r\n<ul>\r\n	<li><em>Reliability.</em> First and foremost, any production business application must be reliable and fault-tolerant, and cannot be subject to frequent outages. The database tier is often the single most critical element in any reliability design, and therefore an implementation of Database Sharding is no exception. In fact, due to the distributed nature of multiple shard databases, the criticality of a well-designed approach is even greater. To ensure a fault-tolerant and reliable approach, the following items are required:\r\n<ul>\r\n	<li>Automated backups of individual Database Shards.</li>\r\n	<li>Database Shard redundancy, ensuring at least 2 \"live\" copies of each shard are available in the event of an outage or server failure. This requires a high-performance, efficient, and reliable replication mechanism.</li>\r\n	<li>Cost-effective hardware redundancy, both within and across servers.</li>\r\n	<li>Automated failover when an outage or server failure occurs.</li>\r\n	<li>Disaster Recovery site management.</li>\r\n</ul>\r\n</li>\r\n	<li><em>Distributed queries.</em> Many types of queries can be processed far faster using distributed queries, performing parallel processing of interim results on each shard server. This technique can achieve order-of-magnitude improvements in performance, in many cases 10X or more. To enable distributed queries in a seamless manner for the application, it is important to have a facility that can process a segment of the query on each individual shard, and then consolidate the results into a single result set for the application tier. Common queries that can benefit from distributed processing are:\r\n<ul>\r\n	<li>Aggregation of statistics, requiring a broad sweep of data across the entire system. Such an example is the computation of sales by product, which ordinarily requires evaluation of the entire database.</li>\r\n	<li>Queries that support comprehensive reports, such as listings of all individual customers that purchased a given product in the last day, week or month.</li>\r\n</ul>\r\n</li>\r\n	<li><em>Avoidance of cross-shard joins.</em> In a sharded system, queries or other statements that use inner-joins that span shards are highly inefficient and difficult to perform. In the majority of cases, it has been found that such inner-joins are not actually required by an application, so long as the correct techniques are applied. The primary technique is the replication of Global Tables, the relatively static lookup tables that are common utilized when joining to much larger primary tables. Tables containing values as Status Codes, Countries, Types, and even Products fall into this category. What is required is an automated replication mechanism that ensures values for Global Tables are in synch across all shards, minimizing or eliminating the need for cross-shard joins.</li>\r\n	<li><em>Auto-increment key management.</em> Typical auto-increment functionality provided by database management systems generate a sequential key for each new row inserted into the database. This is fine for a single database application, but when using Database Sharding, keys must be managed across all shards in a coordinated fashion. The requirement here is to provide a seamless, automated method of key generation to the application, one that operates across all shards, ensuring that keys are unique across the entire system.</li>\r\n	<li><em>Support for multiple Shard Schemes.</em> It is important to note that Database Sharding is effective because it offers an application specific technique for massive scalability and performance improvements. In fact it can be said that the degree of effectiveness is directly related to how well the sharding algorithms themselves are tailored to the application problem at hand. What is required is a set of multiple, flexible shard schemes, each designed to address a specific type of application problem. Each scheme has inherent performance and/or application characteristics and advantages when applied to a specific problem domain. In fact, using the wrong shard scheme can actually inhibit performance and the very results you are trying to obtain. It is also not uncommon for a single application to use more than one shard scheme, each applied to a specific portion of the application to achieve optimum results. Here is a list of some common shard schemes:\r\n<ul>\r\n	<li>Session-based sharding, where each individual user or process interacts with a specific shard for the duration of the user or process session. This is the simplest technique to implement, and adds virtually zero overhead to overall performance, since the sharding decision is made only once per session. Applications which can benefit from this approach are often customer-centric, where all data for a given customer is contained in a single shard, and that is all the data that the customer requires.</li>\r\n	<li>Transaction-based sharding determines the shard by examining the first SQL Statement in a given database transaction. This is normally done by evaluating the \"shard key\" value used in the statement (such as an Order Number), and then directing all other statements in the transaction to the same shard.</li>\r\n	<li>Statement-based sharding is the most process intensive of all types, evaluating each individual SQL Statement to determine the appropriate shard to direct it to. Again, evaluation of the shard key value is required. This option is often desirable on high-volume, granular transactions, such as recording phone call records.</li>\r\n</ul>\r\n</li>\r\n	<li>Determine the optimum method for sharding the data. This is another area that is highly variable, change from application to application. It is closely tied with the selection of the Database Shard Scheme described above. There are numerous methods for deciding how to shard your data, and its important to understand your transaction rates, table volumes, key distribution, and other characteristics of your application. This data is required to determine the optimum sharding strategy:\r\n<ul>\r\n	<li>Shard by a primary key on a table. This is the most straightforward option, and easiest to map to a given application. However, this is only effective if your data is reasonably well distributed. For example, if you elected to shard by Customer ID (and this is a sequential numeric value), and most of your transactions are for new customers, very little if anything will be gained by sharding your database. On the other hand, if you can select a key that does adequately and naturally distribute your transactions, great benefits can be realized.</li>\r\n	<li>Shard by the modulus of a key value. This option works in a vast number of cases, by applying the modulus function to the key value, and distributing transactions based on the calculated value. In essence you can predetermine any number of shards, and the modulus function effectively distributes across your shards on a “round-robin” basis, creating a very even distribution of new key values.</li>\r\n	<li>Maintain a master shard index table. This technique involves using a single master table that maps various values to specific shards. It is very flexible, and meets a wide variety of application situations. However, this option often delivers lower performance as it requires an extra lookup for each sharded SQL Statement.</li>\r\n</ul>\r\n</li>\r\n</ul>\r\nAs you can see, there are many things to consider and many capabilities required in order to ensure that a Database Sharding implementation is successful and effective, delivering on its objectives of providing new levels of scalability and performance in a cost-effective manner.\r\n<h2>When Database Sharding is Appropriate</h2>\r\nDatabase Sharding is an excellent fit for many types of business applications, those with general purpose database requirements. It can also be used effectively for Data Warehousing applications, and as there are many available products and technologies to accomplish this, we will not focus on this element here.\r\n\r\nThe general purpose database requirements that are a fit for sharding include:\r\n<ul>\r\n	<li>High-transaction database applications</li>\r\n	<li>Mixed workload database usage\r\n<ul>\r\n	<li>Frequent reads, including complex queries and joins</li>\r\n	<li>Write-intensive transactions (CRUD statements, including INSERT, UPDATE, DELETE)</li>\r\n	<li>Contention for common tables and/or rows</li>\r\n</ul>\r\n</li>\r\n	<li>General Business Reporting\r\n<ul>\r\n	<li>Typical \"repeating segment\" report generation</li>\r\n	<li>Some data analysis (mixed with other workloads)</li>\r\n</ul>\r\n</li>\r\n</ul>\r\nTo determine if Database Sharding is applicable to your specific application or environment, the most important thing to evaluate is how well your database schema lends itself to sharding. In essence, Database Sharding is a method of “horizontal” portioning, meaning that database rows (as opposed to columns) for a single schema table are distributed across multiple shards. To understand the characteristics of how well sharding fits a given situation, here are the important things to determine:\r\n<ul>\r\n	<li>Identify all transaction-intensive tables in your schema.</li>\r\n	<li>Determine the transaction volume your database is currently handling (or is expected to handle).</li>\r\n	<li>Identify all common SQL statements (SELECT, INSERT, UPDATE, DELETE), and the volumes associated with each.</li>\r\n	<li>Develop an understanding of your \"table hierarchy\" contained in your schema; in other words the main parent-child relationships.</li>\r\n	<li>Determine the \"key distribution\" for transactions on high-volume tables, to determine if they are evenly spread or are concentrated in narrow ranges.</li>\r\n</ul>\r\nWith this information, you can rapidly gain an assessment of the value and applicability of sharding to your application. As an example, here is a simple Bookstore schema showing how the data can be sharded:\r\n\r\n<a href=\"http://www.codefutures.com/img/dbs-bookstoreschema.gif\" target=\"blank\">View the BookStore demo here.</a>\r\n<p class=\"imgdesc\"><a href=\"http://codefutures.com/wp-content/uploads/2014/03/database-sharding-figure-3.jpg\"><img class=\"alignnone wp-image-14626 size-full\" src=\"http://codefutures.com/wp-content/uploads/2014/03/database-sharding-figure-3.jpg\" alt=\"database sharding figure 3\" width=\"554\" height=\"415\" /></a></p>\r\n<p class=\"imgdesc\"><strong>Figure 3. Example Bookstore schema showing how data is sharded.</strong></p>\r\nIn the Bookstore example, the Primary Shard Table is the \'customer\' entity. This is the table that is used to shard the data. The \'customer\' table is the parent of the shard hierarchy, with the \'customer_order\' and \'order_item\' entities as child tables. The data is sharded by the \'customer.id\' attribute, and all related rows in the child tables associated with a given \'customer.id\' are sharded as well. The Global Tables are the common lookup tables, which have relatively low activity, and these tables are replicated to all shards to avoid cross-shard joins.\r\n\r\nWhile this example is very basic, it does provide the basic considerations for determining how to shard a given database application. By using this evaluation approach, you can determine if sharding is applicable to your particular environment, and what benefits can be realized by implementing Database Sharding.\r\n<h2>Read More about Database Sharding: Request Free White Paper</h2>\r\nFind out more about Database Sharding by requested the white paper below.\r\n<p style=\"text-align: center;\">_________________________________________________________________________</p>\r\n<a href=\"http://codefutures.com/wp-content/uploads/2014/07/AgilData-Twitter.jpg\"><img class=\"alignleft wp-image-14165 size-medium\" src=\"http://codefutures.com/wp-content/uploads/2014/07/AgilData-Twitter-300x207.jpg\" alt=\"AgilData-Twitter\" width=\"300\" height=\"207\" /></a>\r\n<h3><strong>Are you ready to go Agile?</strong></h3>\r\nLearn more about our newest product, <a href=\"http://codefutures.com/agildata/\" target=\"_blank\">AgilData here</a>\r\n\r\nGet the <a href=\"http://codefutures.com/agile-data-white-paper/\" target=\"_blank\">FREE whitepaper here</a>, <em>and</em>\r\n\r\n<a href=\"http://codefutures.com/agile-data-white-paper/\" target=\"_blank\">Apply to be a beta-tester!</a>', 'Database Sharding', '', 'draft', 'open', 'open', '', '', '', '', '2015-05-22 13:56:06', '2015-05-22 19:56:06', '', '0', 'http://www.agildata.com/?page_id=175', '0', 'page', '', '0');
INSERT INTO `wpag_posts` VALUES('176', '5', '2015-05-22 13:55:45', '2015-05-22 19:55:45', 'CodeFutures offers an effective sharding solution with our product, dbShards, and our newest product <a href=\"http://codefutures.com/agildata/\" target=\"_blank\">AgilData</a>. Our customers have used dbShards to achieve unprecedented performance, in the scope of hundreds of millions of reads and millions of writes every day.\r\n\r\n<a href=\"http://www.dbshards.com\">Learn More</a>\r\n<h1>Database Sharding</h1>\r\n<h2>The Rise of Database Sharding</h2>\r\nThe concept of Database Sharding has been gaining popularity over the past several years, due to the enormous growth in transaction volume and size of business application databases. This is particularly true for many successful online service providers, Software as a Service (SaaS) companies, and social networking Web sites.\r\n\r\nDatabase Sharding can be simply defined as a \"shared-nothing\" partitioning scheme for large databases across a number of servers, enabling new levels of database performance and scalability achievable. If you think of broken glass, you can get the concept of sharding - breaking your database down into smaller chunks called “shards” and spreading those across a number of distributed servers.\r\n\r\nThe term \"sharding\" was coined by Google engineers, and popularized through their publication of the Big Table architecture. However, the concept of \"shared-nothing\" database partitioning has been around for a decade or more and there have been many implementations over this period, especially high profile in-house built solutions by Internet leaders such as eBay, Amazon, Digg, Flickr, Skype, YouTube, Facebook, Friendster, and Wikipedia.\r\n\r\nThe focus of this paper is on the need for Database Sharding, the options available for database partitioning, and the key considerations for a successful sharding implementation.\r\n<h2>What Drives the Need for Database Sharding?</h2>\r\nDatabase Sharding is a highly scalable approach for improving the throughput and overall performance of high-transaction, large database-centric business applications. Since the inception of the relational database, application engineers and architects have required ever-increasing performance and capacity, based on the simple observation that business databases generally grow in size over time. Adding to this general trend is the extreme expansion of business data due to the evolution of the Internet economy, the Information Age, and the prevalence of high-volume electronic commerce.\r\n\r\nAs any experienced database administrator or application developer knows all too well, it is axiomatic that as the size and transaction volume of the database tier incurs linear growth, response times tend to grow logarithmically. This is shown in the following diagram:\r\n\r\n<a href=\"http://codefutures.com/wp-content/uploads/2014/03/database-sharding-figure-1.jpg\"><img class=\"alignnone wp-image-14624 size-medium\" src=\"http://codefutures.com/wp-content/uploads/2014/03/database-sharding-figure-1-300x300.jpg\" alt=\"database sharding figure 1\" width=\"300\" height=\"300\" /></a>\r\n<p class=\"imgdesc\"><strong>Figure 1. The growth in database transactions and volumes has a large impact on response times.</strong></p>\r\nThe reasons for the performance and scalability challenges are inherent to the fundamental design of the database management systems themselves. Databases rely heavily on the primary three components of any computer:\r\n<ul>\r\n	<li>CPU</li>\r\n	<li>Memory</li>\r\n	<li>Disk</li>\r\n</ul>\r\nThrough benchmark tests that we have performed, we know that each of these elements on a single server can only scale to a given point, and then other measures must be taken. While it is clear that disk I/O is the primary bottleneck, as database management systems have improved they also continue to take greater advantage of CPU and memory. In fact, we have observed that it is the matching of these three factors that determines maximum performance. In other words, you cannot add an unlimited number of CPUs (or processing cores) and see a commensurate increase in performance without also improving the memory capacity and performance of the disk drive subsystem. It is also common to see a diminishing return as resources are added to a single database server. These factors are especially true in mixed-use business transaction systems; systems that perform a high volume of read and write transactions, as well as supporting generalized business reporting tasks.\r\n\r\nTherefore, as business applications gain sophistication and continue to grow in demand, architects, developers and database administrators have been presented with a constant challenge of maintaining database performance for mission critical systems. This landscape drives the need for Database Sharding.\r\n<h2>Database Partitioning Options</h2>\r\nIt has long been known that database partitioning is the answer to improving the performance and scalability of relational databases. Many techniques have been evolved, including:\r\n<ul>\r\n	<li><strong>Master/Slave:</strong> This is the simplest option used by many organizations, with a single Master server for all write (Create Update or Delete, or CRUD) operations, and one or many additional Slave servers that provide read-only operations. The Master uses standard, near-real-time database replication to each of the Slave servers. The Master/Slave model can speed overall performance to a point, allowing read-intensive processing to be offloaded to the Slave servers, but there are several limitations with this approach:\r\n<ul>\r\n	<li>The single Master server for writes is a clear limit to scalability, and can quickly create a bottleneck.</li>\r\n	<li>The Master/Slave replication mechanism is \"near-real-time,\" meaning that the Slave servers are not guaranteed to have a current picture of the data that is in the Master. While this is fine for some applications, if your applications require an up-to-date view, this approach is unacceptable.</li>\r\n	<li>Many organizations use the Master/Slave approach for high-availability as well, but it suffers from this same limitation given that the Slave servers are not necessarily current with the Master. If a catastrophic failure of the Master server occurs, any transactions that are pending for replication will be lost, a situation that is highly unacceptable for most business transaction applications.</li>\r\n</ul>\r\n</li>\r\n	<li><strong>Cluster Computing:</strong> Cluster computing utilizes many servers operating in a group, with shared messaging between the nodes of the cluster. Most often this scenario relies on a centralized shared disk facility, typically a Storage Area Network (SAN). Each node in the cluster runs a single instance of the database server, operating in various modes:\r\n<ul>\r\n	<li>For high-availability, many nodes in the cluster can be used for reads, but only one for write (CRUD) operations. This can make reads faster, but write transactions do not see any benefit. If a failure of one node occurs, then another node in the cluster takes over, again continuing to operating against the shared disk facility. This approach has limited scalability due to the single bottleneck for CRUD operations. Even the reads will ultimately hit a performance limit as the centralized shared disk facility can only spread the load so much before diminishing returns are experienced. The read limitations are particularly evident when an application requires complex joins or contains non-optimized SQL statements.</li>\r\n	<li>More advanced clustering techniques rely on real-time memory replication between nodes, keeping the memory image of nodes in the cluster up to date via a real-time messaging system. This allows each node to operate in both read or write mode, but is ultimately limited by the amount of traffic that can be transmitted between nodes (using a typical network or other high-speed communication mechanism). Therefore, as nodes are added, the communication and memory replication overhead increases geometrically, thus hitting severe scalability limits, often with a relatively small number of nodes. This solution also suffers from the same shared disk limitations of a traditional cluster, given that a growing, single large database has increasingly intensive disk I/O.</li>\r\n</ul>\r\n</li>\r\n	<li><strong>Table Partitioning:</strong> Many database management systems support table partitioning, where data in a single large table can be split across multiple disks for improved disk I/O utilization. The partitioning is typically done horizontally (separating rows by range across disk partitions), but can be vertical in some systems as well (placing different columns on separate partitions). This approach can help reduce the disk I/O bottleneck for a given table, but can often make joins and other operations slower. Further, since the approach relies on a single server instance of the database management system, all other CPU and memory contention limitations apply, further limiting scalability.</li>\r\n	<li><strong>Federated Tables:</strong> An offshoot of Table Partitioning is the Federated Table approach, where tables can be accessed across multiple servers. This approach is necessarily highly complex to administer, and lacks efficiency as the federated tables must be accessed over the network. This approach may work for some reporting or analytical tasks, but for general read/write transactions it is not a very likely choice.</li>\r\n</ul>\r\nThe common drawback with each of these approaches is the reliance on shared facilities and resources. Whether relying on shared memory, centralized disk, or processor capacity they each suffer with scalability limitations, not to mention many other drawbacks, including complex administration, lack of support for critical business requirements, and high availability limitations.\r\n<h2>Database Sharding, The \"Shared-Nothing\" Approach</h2>\r\nDatabase Sharding provides a method for scalability across independent servers, each with their own CPU, memory and disk. Contrasted with other traditional methods of achieving greater database performance, it does not suffer from many of the typical limitations posed by these other approaches. The concept of a \"shared-nothing\" database implementation has been under research or discussion for 15+ years, but it appears that the business application market is just now finding the more general need for such capability due to the exponential increase in data volumes over the past several years.\r\n\r\nThe basic concept of Database Sharding is very straightforward: take a large database, and break it into a number of smaller databases across servers. The concept is illustrated in the following diagram:\r\n\r\n<a href=\"http://codefutures.com/wp-content/uploads/2014/03/database-sharding-figure-2.jpg\"><img class=\"alignnone size-medium wp-image-14625\" src=\"http://codefutures.com/wp-content/uploads/2014/03/database-sharding-figure-2-289x300.jpg\" alt=\"database sharding figure 2\" width=\"289\" height=\"300\" /></a>\r\n<p class=\"imgdesc\"><strong>Figure 2. Database Sharding takes large databases and breaks them down into smaller databases.</strong></p>\r\nThe obvious advantage of the shared-nothing Database Sharding approach is improved scalability, growing in a near-linear fashion as more servers are added to the network. However, there are several other advantages of smaller databases, which should not be overlooked when considering a sharding solution:\r\n<ul>\r\n	<li><em>Smaller databases are easier to manage.</em> Production databases must be fully managed for regular backups, database optimization and other common tasks. With a single large database these routine tasks can be very difficult to accomplish, if only in terms of the time window required for completion. Routine table and index optimizations can stretch to hours or days, in some cases making regular maintenance infeasible. By using the sharding approach, each individual \"shard\" can be maintained independently, providing a far more manageable scenario, performing such maintenance tasks in parallel.</li>\r\n	<li><em>Smaller databases are faster.</em> The scalability of sharding is apparent, achieved through the distribution of processing across multiple shards and servers in the network. What is less apparent is the fact that each individual shard database will outperform a single large database due to its smaller size. By hosting each shard database on its own server, the ratio between memory and data on disk is greatly improved, thereby reducing disk I/O. This results in less contention for resources, greater join performance, faster index searches, and fewer database locks. Therefore, not only can a sharded system scale to new levels of capacity, individual transaction performance is benefited as well.</li>\r\n	<li><em>Database Sharding can reduce costs.</em> Most Database Sharding implementations take advantage of lower-cost open source databases, or can even take advantage of \"workgroup\" versions of commercial databases. Additionally, sharding works well with commodity multi-core server hardware, far less expensive than high-end multi-CPU servers and expensive SANs. The overall reduction in cost due to savings in license fees, software maintenance and hardware investment is substantial, in some cases 70% or more when compared to other solutions.</li>\r\n</ul>\r\nThere is no doubt that Database Sharding is a viable solution for many organizations, supported by the number of large online vendors and SaaS organizations that have implemented the technology (giants such as Amazon, eBay, and of course Google).\r\n<h2>Practicalities of Database Sharding</h2>\r\nIf Database Sharding is highly scalable, less costly, and improves performance, why hasn\'t adoption of the technology been more widespread? Is it feasible for your organization?\r\n\r\nThe reality is that Database Sharding is a very useful technology, but like other approaches, there are many factors to consider that ensure a successful implementation. Further, there are some limitations and Database Sharding will not work well for every type of business application. This chapter discusses these critical considerations and how they can be addressed.\r\n<h2>Database Sharding Challenges</h2>\r\nDue to the distributed nature of individual databases, a number of key elements must be taken into account:\r\n<ul>\r\n	<li><em>Reliability.</em> First and foremost, any production business application must be reliable and fault-tolerant, and cannot be subject to frequent outages. The database tier is often the single most critical element in any reliability design, and therefore an implementation of Database Sharding is no exception. In fact, due to the distributed nature of multiple shard databases, the criticality of a well-designed approach is even greater. To ensure a fault-tolerant and reliable approach, the following items are required:\r\n<ul>\r\n	<li>Automated backups of individual Database Shards.</li>\r\n	<li>Database Shard redundancy, ensuring at least 2 \"live\" copies of each shard are available in the event of an outage or server failure. This requires a high-performance, efficient, and reliable replication mechanism.</li>\r\n	<li>Cost-effective hardware redundancy, both within and across servers.</li>\r\n	<li>Automated failover when an outage or server failure occurs.</li>\r\n	<li>Disaster Recovery site management.</li>\r\n</ul>\r\n</li>\r\n	<li><em>Distributed queries.</em> Many types of queries can be processed far faster using distributed queries, performing parallel processing of interim results on each shard server. This technique can achieve order-of-magnitude improvements in performance, in many cases 10X or more. To enable distributed queries in a seamless manner for the application, it is important to have a facility that can process a segment of the query on each individual shard, and then consolidate the results into a single result set for the application tier. Common queries that can benefit from distributed processing are:\r\n<ul>\r\n	<li>Aggregation of statistics, requiring a broad sweep of data across the entire system. Such an example is the computation of sales by product, which ordinarily requires evaluation of the entire database.</li>\r\n	<li>Queries that support comprehensive reports, such as listings of all individual customers that purchased a given product in the last day, week or month.</li>\r\n</ul>\r\n</li>\r\n	<li><em>Avoidance of cross-shard joins.</em> In a sharded system, queries or other statements that use inner-joins that span shards are highly inefficient and difficult to perform. In the majority of cases, it has been found that such inner-joins are not actually required by an application, so long as the correct techniques are applied. The primary technique is the replication of Global Tables, the relatively static lookup tables that are common utilized when joining to much larger primary tables. Tables containing values as Status Codes, Countries, Types, and even Products fall into this category. What is required is an automated replication mechanism that ensures values for Global Tables are in synch across all shards, minimizing or eliminating the need for cross-shard joins.</li>\r\n	<li><em>Auto-increment key management.</em> Typical auto-increment functionality provided by database management systems generate a sequential key for each new row inserted into the database. This is fine for a single database application, but when using Database Sharding, keys must be managed across all shards in a coordinated fashion. The requirement here is to provide a seamless, automated method of key generation to the application, one that operates across all shards, ensuring that keys are unique across the entire system.</li>\r\n	<li><em>Support for multiple Shard Schemes.</em> It is important to note that Database Sharding is effective because it offers an application specific technique for massive scalability and performance improvements. In fact it can be said that the degree of effectiveness is directly related to how well the sharding algorithms themselves are tailored to the application problem at hand. What is required is a set of multiple, flexible shard schemes, each designed to address a specific type of application problem. Each scheme has inherent performance and/or application characteristics and advantages when applied to a specific problem domain. In fact, using the wrong shard scheme can actually inhibit performance and the very results you are trying to obtain. It is also not uncommon for a single application to use more than one shard scheme, each applied to a specific portion of the application to achieve optimum results. Here is a list of some common shard schemes:\r\n<ul>\r\n	<li>Session-based sharding, where each individual user or process interacts with a specific shard for the duration of the user or process session. This is the simplest technique to implement, and adds virtually zero overhead to overall performance, since the sharding decision is made only once per session. Applications which can benefit from this approach are often customer-centric, where all data for a given customer is contained in a single shard, and that is all the data that the customer requires.</li>\r\n	<li>Transaction-based sharding determines the shard by examining the first SQL Statement in a given database transaction. This is normally done by evaluating the \"shard key\" value used in the statement (such as an Order Number), and then directing all other statements in the transaction to the same shard.</li>\r\n	<li>Statement-based sharding is the most process intensive of all types, evaluating each individual SQL Statement to determine the appropriate shard to direct it to. Again, evaluation of the shard key value is required. This option is often desirable on high-volume, granular transactions, such as recording phone call records.</li>\r\n</ul>\r\n</li>\r\n	<li>Determine the optimum method for sharding the data. This is another area that is highly variable, change from application to application. It is closely tied with the selection of the Database Shard Scheme described above. There are numerous methods for deciding how to shard your data, and its important to understand your transaction rates, table volumes, key distribution, and other characteristics of your application. This data is required to determine the optimum sharding strategy:\r\n<ul>\r\n	<li>Shard by a primary key on a table. This is the most straightforward option, and easiest to map to a given application. However, this is only effective if your data is reasonably well distributed. For example, if you elected to shard by Customer ID (and this is a sequential numeric value), and most of your transactions are for new customers, very little if anything will be gained by sharding your database. On the other hand, if you can select a key that does adequately and naturally distribute your transactions, great benefits can be realized.</li>\r\n	<li>Shard by the modulus of a key value. This option works in a vast number of cases, by applying the modulus function to the key value, and distributing transactions based on the calculated value. In essence you can predetermine any number of shards, and the modulus function effectively distributes across your shards on a “round-robin” basis, creating a very even distribution of new key values.</li>\r\n	<li>Maintain a master shard index table. This technique involves using a single master table that maps various values to specific shards. It is very flexible, and meets a wide variety of application situations. However, this option often delivers lower performance as it requires an extra lookup for each sharded SQL Statement.</li>\r\n</ul>\r\n</li>\r\n</ul>\r\nAs you can see, there are many things to consider and many capabilities required in order to ensure that a Database Sharding implementation is successful and effective, delivering on its objectives of providing new levels of scalability and performance in a cost-effective manner.\r\n<h2>When Database Sharding is Appropriate</h2>\r\nDatabase Sharding is an excellent fit for many types of business applications, those with general purpose database requirements. It can also be used effectively for Data Warehousing applications, and as there are many available products and technologies to accomplish this, we will not focus on this element here.\r\n\r\nThe general purpose database requirements that are a fit for sharding include:\r\n<ul>\r\n	<li>High-transaction database applications</li>\r\n	<li>Mixed workload database usage\r\n<ul>\r\n	<li>Frequent reads, including complex queries and joins</li>\r\n	<li>Write-intensive transactions (CRUD statements, including INSERT, UPDATE, DELETE)</li>\r\n	<li>Contention for common tables and/or rows</li>\r\n</ul>\r\n</li>\r\n	<li>General Business Reporting\r\n<ul>\r\n	<li>Typical \"repeating segment\" report generation</li>\r\n	<li>Some data analysis (mixed with other workloads)</li>\r\n</ul>\r\n</li>\r\n</ul>\r\nTo determine if Database Sharding is applicable to your specific application or environment, the most important thing to evaluate is how well your database schema lends itself to sharding. In essence, Database Sharding is a method of “horizontal” portioning, meaning that database rows (as opposed to columns) for a single schema table are distributed across multiple shards. To understand the characteristics of how well sharding fits a given situation, here are the important things to determine:\r\n<ul>\r\n	<li>Identify all transaction-intensive tables in your schema.</li>\r\n	<li>Determine the transaction volume your database is currently handling (or is expected to handle).</li>\r\n	<li>Identify all common SQL statements (SELECT, INSERT, UPDATE, DELETE), and the volumes associated with each.</li>\r\n	<li>Develop an understanding of your \"table hierarchy\" contained in your schema; in other words the main parent-child relationships.</li>\r\n	<li>Determine the \"key distribution\" for transactions on high-volume tables, to determine if they are evenly spread or are concentrated in narrow ranges.</li>\r\n</ul>\r\nWith this information, you can rapidly gain an assessment of the value and applicability of sharding to your application. As an example, here is a simple Bookstore schema showing how the data can be sharded:\r\n\r\n<a href=\"http://www.codefutures.com/img/dbs-bookstoreschema.gif\" target=\"blank\">View the BookStore demo here.</a>\r\n<p class=\"imgdesc\"><a href=\"http://codefutures.com/wp-content/uploads/2014/03/database-sharding-figure-3.jpg\"><img class=\"alignnone wp-image-14626 size-full\" src=\"http://codefutures.com/wp-content/uploads/2014/03/database-sharding-figure-3.jpg\" alt=\"database sharding figure 3\" width=\"554\" height=\"415\" /></a></p>\r\n<p class=\"imgdesc\"><strong>Figure 3. Example Bookstore schema showing how data is sharded.</strong></p>\r\nIn the Bookstore example, the Primary Shard Table is the \'customer\' entity. This is the table that is used to shard the data. The \'customer\' table is the parent of the shard hierarchy, with the \'customer_order\' and \'order_item\' entities as child tables. The data is sharded by the \'customer.id\' attribute, and all related rows in the child tables associated with a given \'customer.id\' are sharded as well. The Global Tables are the common lookup tables, which have relatively low activity, and these tables are replicated to all shards to avoid cross-shard joins.\r\n\r\nWhile this example is very basic, it does provide the basic considerations for determining how to shard a given database application. By using this evaluation approach, you can determine if sharding is applicable to your particular environment, and what benefits can be realized by implementing Database Sharding.\r\n<h2>Read More about Database Sharding: Request Free White Paper</h2>\r\nFind out more about Database Sharding by requested the white paper below.\r\n<p style=\"text-align: center;\">_________________________________________________________________________</p>\r\n<a href=\"http://codefutures.com/wp-content/uploads/2014/07/AgilData-Twitter.jpg\"><img class=\"alignleft wp-image-14165 size-medium\" src=\"http://codefutures.com/wp-content/uploads/2014/07/AgilData-Twitter-300x207.jpg\" alt=\"AgilData-Twitter\" width=\"300\" height=\"207\" /></a>\r\n<h3><strong>Are you ready to go Agile?</strong></h3>\r\nLearn more about our newest product, <a href=\"http://codefutures.com/agildata/\" target=\"_blank\">AgilData here</a>\r\n\r\nGet the <a href=\"http://codefutures.com/agile-data-white-paper/\" target=\"_blank\">FREE whitepaper here</a>, <em>and</em>\r\n\r\n<a href=\"http://codefutures.com/agile-data-white-paper/\" target=\"_blank\">Apply to be a beta-tester!</a>', 'Database Sharding', '', 'inherit', 'open', 'open', '', '175-revision-v1', '', '', '2015-05-22 13:55:45', '2015-05-22 19:55:45', '', '175', 'http://www.agildata.com/175-revision-v1/', '0', 'revision', '', '0');
INSERT INTO `wpag_posts` VALUES('177', '5', '2015-05-22 13:58:19', '0000-00-00 00:00:00', '<h1>Free FireStorm/DAO Download</h1>\r\n<h2>FireStorm/DAO Enterprise Edition 4.0.1 GA</h2>\r\nFireStorm/DAO Enterprise Edition is a free product - it is available for direct download below and does not require a license key. This product version does not include source code and is restricted to generating a maximum of 20 of each type of DAO (Table DAO, View DAO, Custom SQL DAO, or Stored Procedure DAO).\r\n\r\nFireStorm/DAO Architect Edition is available as a subscription ($995 per year). The Architect Edition includes <strong>full</strong> product source code has no restrictions on the number of classes that can be generated. To purchase the Architect Edition please click <a href=\"/purchase\">here</a>.\r\n\r\nPlease refer to the <a href=\"/releases/4.0/README.html\" target=\"README\">README.html</a> for the release notes.\r\n<table class=\"downloadtable\">\r\n<tbody>\r\n<tr bgcolor=\"#ddddff\">\r\n<td>Platform</td>\r\n<td>Installer</td>\r\n<td>Filename</td>\r\n</tr>\r\n<tr bgcolor=\"#eeeeff\">\r\n<td><img src=\"/img/windows.gif\" alt=\"\" /></td>\r\n<td>Windows Installer</td>\r\n<td><a href=\"/releases/4.0.1/FireStormDAO_EE_4_0_1.exe\"><span style=\"color: #ff0000; font-family: courier;\">FireStormDAO_EE_4_0_1.exe</span></a></td>\r\n</tr>\r\n<tr bgcolor=\"#eeffee\">\r\n<td><img src=\"/img/linux.gif\" alt=\"\" /></td>\r\n<td>Linux/Unix Installer</td>\r\n<td><a href=\"/releases/4.0.1/FireStormDAO_EE_4_0_1.sh\"><span style=\"color: #ff0000; font-family: courier;\">FireStormDAO_EE_4_0_1.sh</span></a></td>\r\n</tr>\r\n<tr bgcolor=\"#eeeeff\">\r\n<td><img src=\"/img/mac-osx-logo.gif\" alt=\"\" /></td>\r\n<td>Mac OS X Archive</td>\r\n<td><a href=\"/releases/4.0.1/FireStormDAO_EE_4_0_1.dmg\"><span style=\"color: #ff0000; font-family: courier;\">FireStormDAO_EE_4_0_1.dmg</span></a></td>\r\n</tr>\r\n</tbody>\r\n</table>\r\n\r\n<hr />\r\n\r\n<h2>For Current 3.x CodeFutures Customers Only</h2>\r\n<h2>FireStorm/DAO 3.2.1 GA</h2>\r\n<p class=\"small\">Released on 13 November 2007. This release is for existing CodeFutures customers with Annual Developer Support and valid 3.x license key files.</p>\r\nPlease refer to the <a href=\"/releases/3.2.1/README.html\" target=\"README\">README.html</a> for the release notes.\r\n<table class=\"downloadtable\">\r\n<tbody>\r\n<tr bgcolor=\"#ddddff\">\r\n<td>Platform</td>\r\n<td>Installer</td>\r\n<td>Filename</td>\r\n</tr>\r\n<tr bgcolor=\"#eeeeff\">\r\n<td><img src=\"/img/windows.gif\" alt=\"\" /></td>\r\n<td>Windows Installer</td>\r\n<td><a href=\"/releases/3.2.1/FireStormDAO_EE_3_2_1.exe\"><span style=\"color: #ff0000; font-family: courier;\">FireStormDAO_EE_3_2_1.exe</span></a></td>\r\n</tr>\r\n</tbody>\r\n</table>\r\n<p class=\"small\">Please contact CodeFutures support team if you need FireStorm/DAO Architect Edition 3.2.1 GA (for current CodeFutures customers only).</p>', 'Download free evaluation version of FireStorm/DAO', '', 'draft', 'open', 'open', '', '', '', '', '2015-05-22 13:58:19', '2015-05-22 19:58:19', '', '0', 'http://www.agildata.com/?page_id=177', '0', 'page', '', '0');
INSERT INTO `wpag_posts` VALUES('178', '5', '2015-05-22 13:58:11', '2015-05-22 19:58:11', '<h1>Free FireStorm/DAO Download</h1>\r\n<h2>FireStorm/DAO Enterprise Edition 4.0.1 GA</h2>\r\nFireStorm/DAO Enterprise Edition is a free product - it is available for direct download below and does not require a license key. This product version does not include source code and is restricted to generating a maximum of 20 of each type of DAO (Table DAO, View DAO, Custom SQL DAO, or Stored Procedure DAO).\r\n\r\nFireStorm/DAO Architect Edition is available as a subscription ($995 per year). The Architect Edition includes <strong>full</strong> product source code has no restrictions on the number of classes that can be generated. To purchase the Architect Edition please click <a href=\"/purchase\">here</a>.\r\n\r\nPlease refer to the <a href=\"/releases/4.0/README.html\" target=\"README\">README.html</a> for the release notes.\r\n<table class=\"downloadtable\">\r\n<tbody>\r\n<tr bgcolor=\"#ddddff\">\r\n<td>Platform</td>\r\n<td>Installer</td>\r\n<td>Filename</td>\r\n</tr>\r\n<tr bgcolor=\"#eeeeff\">\r\n<td><img src=\"/img/windows.gif\" alt=\"\" /></td>\r\n<td>Windows Installer</td>\r\n<td><a href=\"/releases/4.0.1/FireStormDAO_EE_4_0_1.exe\"><span style=\"color: #ff0000; font-family: courier;\">FireStormDAO_EE_4_0_1.exe</span></a></td>\r\n</tr>\r\n<tr bgcolor=\"#eeffee\">\r\n<td><img src=\"/img/linux.gif\" alt=\"\" /></td>\r\n<td>Linux/Unix Installer</td>\r\n<td><a href=\"/releases/4.0.1/FireStormDAO_EE_4_0_1.sh\"><span style=\"color: #ff0000; font-family: courier;\">FireStormDAO_EE_4_0_1.sh</span></a></td>\r\n</tr>\r\n<tr bgcolor=\"#eeeeff\">\r\n<td><img src=\"/img/mac-osx-logo.gif\" alt=\"\" /></td>\r\n<td>Mac OS X Archive</td>\r\n<td><a href=\"/releases/4.0.1/FireStormDAO_EE_4_0_1.dmg\"><span style=\"color: #ff0000; font-family: courier;\">FireStormDAO_EE_4_0_1.dmg</span></a></td>\r\n</tr>\r\n</tbody>\r\n</table>\r\n\r\n<hr />\r\n\r\n<h2>For Current 3.x CodeFutures Customers Only</h2>\r\n<h2>FireStorm/DAO 3.2.1 GA</h2>\r\n<p class=\"small\">Released on 13 November 2007. This release is for existing CodeFutures customers with Annual Developer Support and valid 3.x license key files.</p>\r\nPlease refer to the <a href=\"/releases/3.2.1/README.html\" target=\"README\">README.html</a> for the release notes.\r\n<table class=\"downloadtable\">\r\n<tbody>\r\n<tr bgcolor=\"#ddddff\">\r\n<td>Platform</td>\r\n<td>Installer</td>\r\n<td>Filename</td>\r\n</tr>\r\n<tr bgcolor=\"#eeeeff\">\r\n<td><img src=\"/img/windows.gif\" alt=\"\" /></td>\r\n<td>Windows Installer</td>\r\n<td><a href=\"/releases/3.2.1/FireStormDAO_EE_3_2_1.exe\"><span style=\"color: #ff0000; font-family: courier;\">FireStormDAO_EE_3_2_1.exe</span></a></td>\r\n</tr>\r\n</tbody>\r\n</table>\r\n<p class=\"small\">Please contact CodeFutures support team if you need FireStorm/DAO Architect Edition 3.2.1 GA (for current CodeFutures customers only).</p>', 'Download free evaluation version of FireStorm/DAO', '', 'inherit', 'open', 'open', '', '177-revision-v1', '', '', '2015-05-22 13:58:11', '2015-05-22 19:58:11', '', '177', 'http://www.agildata.com/177-revision-v1/', '0', 'revision', '', '0');
INSERT INTO `wpag_posts` VALUES('179', '5', '2015-05-22 14:00:46', '0000-00-00 00:00:00', '<h1>FireStorm/DAO Technical Architecture</h1>\r\n<img src=\"/img/fsarch.gif\" alt=\"\" usemap=\"#Map\" />\r\n\r\n<map id=\"mymap\" name=\"Map\"> <area alt=\"\" coords=\"80,204,246,253\" shape=\"rect\" href=\"#SchemaImportFramework\" /> <area alt=\"\" coords=\"81,35,181,203\" shape=\"rect\" href=\"#Importingfromsupporteddatabases\" /> <area alt=\"\" coords=\"81,287,248,318\" shape=\"rect\" href=\"#FireStormDAOStudio\" /> <area alt=\"\" coords=\"80,254,412,286\" shape=\"rect\" href=\"#FireStormDAOAntTasks\" /> <area alt=\"\" coords=\"248,204,411,253\" shape=\"rect\" href=\"#CodeGenerationFramework\" /> <area alt=\"\" coords=\"249,287,412,318\" shape=\"rect\" href=\"#FireStormDAOCommandLine\" /> <area alt=\"\" coords=\"183,35,323,202\" shape=\"rect\" href=\"#FireStormDAOProjectConfigurationMetaData\" /> <area alt=\"\" coords=\"326,38,410,200\" shape=\"rect\" href=\"#CustomCodeGenerationModule\" /> </map>\r\n\r\n<hr />\r\n\r\n<h1>FireStorm/DAO Schema Import Framework\r\n<a name=\"SchemaImportFramework\"></a></h1>\r\nFireStorm/DAO can import relational database schemas from Database Definition Language\r\n(DDL) scripts and can also import schemas from a JDBC connection to a live database.\r\n<h2>Importing from supported databases\r\n<a name=\"Importingfromsupporteddatabases\"></a></h2>\r\nFireStorm/DAO contains specific support for the DDL syntax and data types used by\r\nOracle, DB2, Microsoft SQL Server, Sybase, Informix, MySQL, InnoDB, PostgreSQL.\r\nFireStorm/DAO™ also has intelligent support for auto-increment columns\r\nand sequences used by MySQL, Oracle, and DB2.\r\n<h2>Importing with generic databases</h2>\r\nFireStorm/DAO can import schemas from any relational database that supports ANSI-SQL or\r\nhas a JDBC driver available.\r\n\r\n<hr />\r\n\r\n<h1>FireStorm/DAO Project &amp;Configuration Meta-Data\r\n<a name=\"FireStormDAOProjectConfigurationMetaData\"></a></h1>\r\n<h2>Project Meta-Data</h2>\r\nFireStorm/DAO projects are stored in an easy-to-understand XML format making it easy to\r\nshare projects with other developers and store them in source control systems such as CVS.\r\nFireStorm/DAO™ ships with an XML Schema Definition (XSD) file making it easy to manipulate\r\nthe project meta-data using external tools.\r\n<h2>Configuration Meta-Data</h2>\r\nFireStorm/DAO™ stores all of its configuration data in XML format.\r\n\r\n<hr />\r\n\r\n<h1>FireStorm/DAO™ Code Generation Framework\r\n<a name=\"CodeGenerationFramework\"></a></h1>\r\nFireStorm/DAO has a powerful code generation framework allowing custom code generation modules to\r\nbe developed (Architect Edition only). The API provides access to all of FireStorm/DAO\'s\r\nconfiguration and project meta-data in a simple Java object-model removing the need to parse the\r\nunderlying XML files. FireStorm/DAO\'s code generation framework also provides a highly\r\nobject-oriented approach to creating Java source files.\r\n<h2>Custom Code Generation Module\r\n<a name=\"CustomCodeGenerationModule\"></a></h2>\r\nThis Architect Edition-only module allow the DAO code generation modules to be customized to:\r\n<ul>\r\n	<li>Optimize performance based on specific project requirements</li>\r\n	<li>Integrate more closely with existing build environments, such as internal coding\r\nstandards</li>\r\n	<li>Add environment-specific extra custom features such as caching, security, auditing, and\r\nclustering</li>\r\n</ul>\r\n<h2>J2EE Code Generation Module</h2>\r\nThis code generation module creates JSP pages for each DAO allowing them to be tested very\r\neasily. Each DAO is also wrapped in a Stateless Session Bean making it easy to publish the DAO\r\nobjects as transactional components as part of a Service-Oriented architecture (SOA). J2EE\r\ndeployment descriptors are also generated for the target platform (JBoss, WebLogic,\r\nWebSphere)\r\n\r\nWhen generating code for J2EE it is possible to choose between JDBC DAO, CMP EJB DAO, or JPA DAO for the DAO\r\nimplementation code.\r\n<h2>Apache Struts/JSP Code Generation Module</h2>\r\nThis module generates a complete Web application for interacting with the generated DAO tier. The\r\ngenerated application is based on the Apache Struts framework and contains full functionality\r\nfor inserting, updating, deleting, and searching records using the DAO tier.\r\n<h2>CMP EJB Code Generation Module</h2>\r\nGenerates Entity Bean source code for each table as well as CMP deployment descriptors for the\r\ntarget platform.\r\n<h2>JDBC Code Generation Module</h2>\r\nGenerates DAO implementation using plain JDBC/SQL calls.\r\n<h2>DAO Code Generation Module</h2>\r\nThis module generates Data Access Object (DAO) interfaces, Data Transfer Object (DTO) classes,\r\nand DAO exception classes. The JDBC, EJB CMP, and JDO code generation modules generation\r\nconcrete implementations of the DAO interfaces.\r\n\r\n<hr />\r\n\r\n<h2>FireStorm/DAO Ant Tasks\r\n<a name=\"FireStormDAOAntTasks\"></a></h2>\r\nFireStorm/DAO contains Ant tasks for importing schemas and generating code, making it easy\r\nto incorporate FireStorm/DAO™ into automated build systems.\r\n<h2>FireStorm/DAO™ Command Line\r\n<a name=\"FireStormDAOCommandLine\"></a></h2>\r\nThe command line interface is ideal when running FireStorm/DAO on remote Unix servers where only\r\na console interface is available.\r\n\r\n<hr />\r\n\r\n<h2>FireStorm/DAO Studio\r\n<a name=\"FireStormDAOStudio\"></a></h2>\r\nFireStorm/DAO Studio is an easy-to-use graphical user interface for importing schemas,\r\nmanipulating meta-data, and generating code.\r\n<p class=\"additionalrl\"><a href=\"/products/firestorm/download/\">Download FireStorm/DAO</a></p>', 'FireStorm/DAO Technical Architecture Diagram with Explanations', '', 'draft', 'open', 'open', '', 'firestormdao-technical-architecture-diagram-explanations', '', '', '2015-05-22 14:00:46', '2015-05-22 20:00:46', '', '0', 'http://www.agildata.com/?page_id=179', '0', 'page', '', '0');
INSERT INTO `wpag_posts` VALUES('180', '5', '2015-05-22 14:00:35', '2015-05-22 20:00:35', '<h1>FireStorm/DAO Technical Architecture</h1>\r\n<img src=\"/img/fsarch.gif\" alt=\"\" usemap=\"#Map\" />\r\n\r\n<map id=\"mymap\" name=\"Map\"> <area alt=\"\" coords=\"80,204,246,253\" shape=\"rect\" href=\"#SchemaImportFramework\" /> <area alt=\"\" coords=\"81,35,181,203\" shape=\"rect\" href=\"#Importingfromsupporteddatabases\" /> <area alt=\"\" coords=\"81,287,248,318\" shape=\"rect\" href=\"#FireStormDAOStudio\" /> <area alt=\"\" coords=\"80,254,412,286\" shape=\"rect\" href=\"#FireStormDAOAntTasks\" /> <area alt=\"\" coords=\"248,204,411,253\" shape=\"rect\" href=\"#CodeGenerationFramework\" /> <area alt=\"\" coords=\"249,287,412,318\" shape=\"rect\" href=\"#FireStormDAOCommandLine\" /> <area alt=\"\" coords=\"183,35,323,202\" shape=\"rect\" href=\"#FireStormDAOProjectConfigurationMetaData\" /> <area alt=\"\" coords=\"326,38,410,200\" shape=\"rect\" href=\"#CustomCodeGenerationModule\" /> </map>\r\n\r\n<hr />\r\n\r\n<h1>FireStorm/DAO Schema Import Framework\r\n<a name=\"SchemaImportFramework\"></a></h1>\r\nFireStorm/DAO can import relational database schemas from Database Definition Language\r\n(DDL) scripts and can also import schemas from a JDBC connection to a live database.\r\n<h2>Importing from supported databases\r\n<a name=\"Importingfromsupporteddatabases\"></a></h2>\r\nFireStorm/DAO contains specific support for the DDL syntax and data types used by\r\nOracle, DB2, Microsoft SQL Server, Sybase, Informix, MySQL, InnoDB, PostgreSQL.\r\nFireStorm/DAO™ also has intelligent support for auto-increment columns\r\nand sequences used by MySQL, Oracle, and DB2.\r\n<h2>Importing with generic databases</h2>\r\nFireStorm/DAO can import schemas from any relational database that supports ANSI-SQL or\r\nhas a JDBC driver available.\r\n\r\n<hr />\r\n\r\n<h1>FireStorm/DAO Project &amp;Configuration Meta-Data\r\n<a name=\"FireStormDAOProjectConfigurationMetaData\"></a></h1>\r\n<h2>Project Meta-Data</h2>\r\nFireStorm/DAO projects are stored in an easy-to-understand XML format making it easy to\r\nshare projects with other developers and store them in source control systems such as CVS.\r\nFireStorm/DAO™ ships with an XML Schema Definition (XSD) file making it easy to manipulate\r\nthe project meta-data using external tools.\r\n<h2>Configuration Meta-Data</h2>\r\nFireStorm/DAO™ stores all of its configuration data in XML format.\r\n\r\n<hr />\r\n\r\n<h1>FireStorm/DAO™ Code Generation Framework\r\n<a name=\"CodeGenerationFramework\"></a></h1>\r\nFireStorm/DAO has a powerful code generation framework allowing custom code generation modules to\r\nbe developed (Architect Edition only). The API provides access to all of FireStorm/DAO\'s\r\nconfiguration and project meta-data in a simple Java object-model removing the need to parse the\r\nunderlying XML files. FireStorm/DAO\'s code generation framework also provides a highly\r\nobject-oriented approach to creating Java source files.\r\n<h2>Custom Code Generation Module\r\n<a name=\"CustomCodeGenerationModule\"></a></h2>\r\nThis Architect Edition-only module allow the DAO code generation modules to be customized to:\r\n<ul>\r\n	<li>Optimize performance based on specific project requirements</li>\r\n	<li>Integrate more closely with existing build environments, such as internal coding\r\nstandards</li>\r\n	<li>Add environment-specific extra custom features such as caching, security, auditing, and\r\nclustering</li>\r\n</ul>\r\n<h2>J2EE Code Generation Module</h2>\r\nThis code generation module creates JSP pages for each DAO allowing them to be tested very\r\neasily. Each DAO is also wrapped in a Stateless Session Bean making it easy to publish the DAO\r\nobjects as transactional components as part of a Service-Oriented architecture (SOA). J2EE\r\ndeployment descriptors are also generated for the target platform (JBoss, WebLogic,\r\nWebSphere)\r\n\r\nWhen generating code for J2EE it is possible to choose between JDBC DAO, CMP EJB DAO, or JPA DAO for the DAO\r\nimplementation code.\r\n<h2>Apache Struts/JSP Code Generation Module</h2>\r\nThis module generates a complete Web application for interacting with the generated DAO tier. The\r\ngenerated application is based on the Apache Struts framework and contains full functionality\r\nfor inserting, updating, deleting, and searching records using the DAO tier.\r\n<h2>CMP EJB Code Generation Module</h2>\r\nGenerates Entity Bean source code for each table as well as CMP deployment descriptors for the\r\ntarget platform.\r\n<h2>JDBC Code Generation Module</h2>\r\nGenerates DAO implementation using plain JDBC/SQL calls.\r\n<h2>DAO Code Generation Module</h2>\r\nThis module generates Data Access Object (DAO) interfaces, Data Transfer Object (DTO) classes,\r\nand DAO exception classes. The JDBC, EJB CMP, and JDO code generation modules generation\r\nconcrete implementations of the DAO interfaces.\r\n\r\n<hr />\r\n\r\n<h2>FireStorm/DAO Ant Tasks\r\n<a name=\"FireStormDAOAntTasks\"></a></h2>\r\nFireStorm/DAO contains Ant tasks for importing schemas and generating code, making it easy\r\nto incorporate FireStorm/DAO™ into automated build systems.\r\n<h2>FireStorm/DAO™ Command Line\r\n<a name=\"FireStormDAOCommandLine\"></a></h2>\r\nThe command line interface is ideal when running FireStorm/DAO on remote Unix servers where only\r\na console interface is available.\r\n\r\n<hr />\r\n\r\n<h2>FireStorm/DAO Studio\r\n<a name=\"FireStormDAOStudio\"></a></h2>\r\nFireStorm/DAO Studio is an easy-to-use graphical user interface for importing schemas,\r\nmanipulating meta-data, and generating code.\r\n<p class=\"additionalrl\"><a href=\"/products/firestorm/download/\">Download FireStorm/DAO</a></p>', 'FireStorm/DAO Technical Architecture Diagram with Explanations', '', 'inherit', 'open', 'open', '', '179-revision-v1', '', '', '2015-05-22 14:00:35', '2015-05-22 20:00:35', '', '179', 'http://www.agildata.com/179-revision-v1/', '0', 'revision', '', '0');
INSERT INTO `wpag_posts` VALUES('181', '5', '2015-05-22 14:02:45', '0000-00-00 00:00:00', '<h2>Free MySQL Database Performance Analysis</h2>\r\nCodeFutures provides a free program to analyze the performance of your MySQL database. With this no-charge analysis, our consultants will review and provide recommendations for each of these aspects as they apply to your specific implementation:\r\n<ul>\r\n	<li>MySQL configuration analysis</li>\r\n	<li>Strategies for database reorganization and optimization</li>\r\n	<li>How to perform database optimization without taking your application down</li>\r\n	<li>Database size optimization (reclaiming unused disk space)</li>\r\n	<li>Long-running query analysis</li>\r\n	<li>Indexing strategy</li>\r\n	<li>Reliability/availability/failover evaluation</li>\r\n</ul>\r\nAs well as helping identify any general areas of performance, find out if <a href=\"/database-sharding/\">Database Sharding</a> will work for you!\r\n\r\n&nbsp;\r\n<h2>Database Performance Analysis Steps</h2>\r\nStep 1: Fill in the form below to join the free program.\r\n\r\nStep 2: CodeFutures will review your application and performance objectives/issues.\r\n\r\nStep 3: CodeFutures will provide our no-charge dbShards/Analyze tool to run in your installation. It is possible to run this analysis in \'confidential\' mode to keep your data private.\r\n\r\nStep 4: You send the data captured by dbShards/Analyze tool, MySQL configuration files, slow query log, and database schema, to CodeFutures.\r\n\r\nStep 5: CodeFutures performs the analysis, and provides a complete report of results and recommendations. Included in the recommendations will be the use of Database Sharding as it applies to your specific scenario.\r\n\r\nYou will be able to interact with a CodeFutures database performance expert to review all results and determine a realistic plan of action.\r\n\r\n&nbsp;\r\n<h2>Free MySQL Database Performance Analysis</h2>', 'Free MySQL Database Performance Analysis', '', 'draft', 'open', 'open', '', '', '', '', '2015-05-22 14:02:45', '2015-05-22 20:02:45', '', '0', 'http://www.agildata.com/?page_id=181', '0', 'page', '', '0');
INSERT INTO `wpag_posts` VALUES('182', '5', '2015-05-22 14:02:37', '2015-05-22 20:02:37', '<h2>Free MySQL Database Performance Analysis</h2>\r\nCodeFutures provides a free program to analyze the performance of your MySQL database. With this no-charge analysis, our consultants will review and provide recommendations for each of these aspects as they apply to your specific implementation:\r\n<ul>\r\n	<li>MySQL configuration analysis</li>\r\n	<li>Strategies for database reorganization and optimization</li>\r\n	<li>How to perform database optimization without taking your application down</li>\r\n	<li>Database size optimization (reclaiming unused disk space)</li>\r\n	<li>Long-running query analysis</li>\r\n	<li>Indexing strategy</li>\r\n	<li>Reliability/availability/failover evaluation</li>\r\n</ul>\r\nAs well as helping identify any general areas of performance, find out if <a href=\"/database-sharding/\">Database Sharding</a> will work for you!\r\n\r\n&nbsp;\r\n<h2>Database Performance Analysis Steps</h2>\r\nStep 1: Fill in the form below to join the free program.\r\n\r\nStep 2: CodeFutures will review your application and performance objectives/issues.\r\n\r\nStep 3: CodeFutures will provide our no-charge dbShards/Analyze tool to run in your installation. It is possible to run this analysis in \'confidential\' mode to keep your data private.\r\n\r\nStep 4: You send the data captured by dbShards/Analyze tool, MySQL configuration files, slow query log, and database schema, to CodeFutures.\r\n\r\nStep 5: CodeFutures performs the analysis, and provides a complete report of results and recommendations. Included in the recommendations will be the use of Database Sharding as it applies to your specific scenario.\r\n\r\nYou will be able to interact with a CodeFutures database performance expert to review all results and determine a realistic plan of action.\r\n\r\n&nbsp;\r\n<h2>Free MySQL Database Performance Analysis</h2>', 'Free MySQL Database Performance Analysis', '', 'inherit', 'open', 'open', '', '181-revision-v1', '', '', '2015-05-22 14:02:37', '2015-05-22 20:02:37', '', '181', 'http://www.agildata.com/181-revision-v1/', '0', 'revision', '', '0');
INSERT INTO `wpag_posts` VALUES('183', '5', '2015-05-22 14:04:02', '0000-00-00 00:00:00', '<h1>Hibernate DAO Code Generator</h1>\r\nFireStorm/DAO makes Hibernate DAO developers more productive by automatically generating Java source code for accessing relational databases using the Hibernate framework. The benefits provided to Hibernate DAO developers by CodeFutures\' code generation approach are higher developer productivity, better software quality, and lower maintenance costs. You can start using and benefiting from Hibernate straight away with FireStorm/DAO.\r\n<div id=\"boxshots\">\r\n\r\n<img src=\"/img/CF_FS_BOX_02_AR_SM.gif\" alt=\"\" />\r\n\r\n<a href=\"/architect/\">Architect Edition</a>\r\n\r\n<img src=\"/img/CF_FS_BOX_02_OE_SM.gif\" alt=\"\" />\r\n\r\n<a href=\"/products/firestorm/editions/oem/\">OEM Edition</a>\r\n\r\n</div>\r\nFireStorm/DAO is available for free: <a href=\"/products/firestorm/download/\">Download Now!</a>\r\n<h2 style=\"clear: none;\">Hibernate DAO and ORM Code Generation</h2>\r\nFireStorm/DAO is a code generator that can import existing database schemas (from a SQL script or from a live JDBC connection) and can then generate a complete persistence tier based on any of the following Java persistence technologies:\r\n<ul>\r\n	<li>Hibernate DAO</li>\r\n	<li>Java Database Connectivity (JDBC DAO)</li>\r\n	<li>Spring DAO</li>\r\n</ul>\r\nFireStorm/DAO generates Java source code and configuration files that developers would otherwise have to write by hand. FireStorm/DAO generates code that is compliant with the <a href=\"/data-access-object/\">Data Access Object</a> (DAO) design pattern (DAO is a core J2EE design pattern). FireStorm/DAO can also generate native persistence code for Object Relational Mapping (ORM) products (such as Hibernate), without the option of using the DAO design pattern. When generating Hibernate code (without DAOs), FireStorm/DAO produces Hibernate persistent classes and a Hibernate mapping file (*.hbm.xml) for each database table.\r\n<h2 style=\"clear: none;\">Reduced Hibernate Complexity</h2>\r\nFireStorm/DAO adopts a pragmatic approach of generating Java source code for data persistence that is a direct mapping of a particular relational database schema. It is also possible to define complex multi-table queries and to leverage existing database logic contained within stored procedures.\r\n\r\nThe generated source code is well-written, consistent and contains documentation. Most importantly, the generated code is production quality and has been tested in literally hundreds of deployments world-wide.\r\n<h1>Getting Started with FireStorm/DAO</h1>\r\n<h2>First Steps</h2>\r\nCodeFutures recommends that you start by quickly looking through the pages of the <a href=\"/products/firestorm/dao/tutorial/\">online tutorial</a>. This will give you an idea of how simple FireStorm/DAO is to use.\r\n\r\nCodeFutures then recommends that you watch the <a href=\"/library/FireStormArchitectDemo.wmv\">introductory video</a>.\r\n\r\n<a href=\"/library/FireStormArchitectDemo.wmv\"><img src=\"/img/screenshots/video_screenshot_200.gif\" alt=\"\" /></a>\r\n\r\nIf you have not done so already, you are ready to <a href=\"/products/firestorm/download/\">download FireStorm/DAO</a>.\r\n<h2>Whitepapers</h2>\r\n<img src=\"/img/pdficonsm.gif\" alt=\"\" /> <a href=\"/library/FireStormDAOTechnicalOverview.PDF\">FireStorm/DAO Technical Overview (PDF)</a>\r\n<h2>Learning about FireStorm/DAO Architect Edition</h2>\r\nYou should start by reading an introduction to <a href=\"/architect/\">FireStorm/DAO Architect Edition</a>.\r\n\r\nWatch the FireStorm/DAO Architect Edition <a href=\"/library/FireStormArchitectDemo.wmv\">video introduction</a>.\r\n\r\nYou can see some sample code generation template source code on the <a href=\"/products/firestorm/editions/architect/\">Architect Edition Technical Specifications</a> page.\r\n<h2>Explaining FireStom/DAO To Your Manager</h2>\r\nYou can obtain product brochures at the <a href=\"/library/\">Document Library</a>, including a <a href=\"/library/CodeFuturesFireStormDAOoverview.pdf\">Product Overview</a> and <a href=\"/library/FireStormDAOPricingSheet.pdf\">Pricing Sheet</a>.\r\n\r\nYou can also provide your manager with a Web link to some <a href=\"/customers/codefutures-customer-testimonials/\">Customer Testimonials</a>.\r\n\r\nCodeFutures has a range of white papers and presentations available for download from a password-protected Web page. If you need additional documentation to explain the value of FireStorm/DAO to your project manager or purchasing manager, you should contact <a href=\"mailto:sales@codefutures.com\">sales@codefutures.com</a>.\r\n<h2>Additional Resources</h2>\r\nFireStorm/DAO is a <a href=\"/products/firestorm/\">database access tool</a> based on the <a href=\"/data-access-object/\">Data Access Object</a> design pattern.\r\n<p class=\"additionalrl\"><a href=\"/products/firestorm/download/\">Download FireStorm/DAO</a></p>\r\nCodeFutures provides a free program to analyze the performance of your MySQL database.\r\n<p class=\"additionalrl\"><a href=\"/database-performance-analysis/\">Free MySQL Performance Analysis</a></p>\r\nRead about how <a href=\"/database-sharding/\">Database Sharding</a> helps many major companies to linearly scale their database applications.\r\n<p class=\"additionalrl\"><a href=\"/database-sharding-white-paper/\">Request Database Sharding White Paper</a></p>\r\ndbShards economically scales large, high transaction volume databases using <a href=\"/database-sharding/\">Database Sharding</a>.\r\n<p class=\"additionalrl\"><a href=\"/dbshards-product-presentation/\">View Introduction to dbShards Video</a></p>', 'Hibernate DAO', '', 'draft', 'open', 'open', '', 'hibernate', '', '', '2015-05-22 14:04:02', '2015-05-22 20:04:02', '', '0', 'http://www.agildata.com/?page_id=183', '0', 'page', '', '0');
INSERT INTO `wpag_posts` VALUES('184', '5', '2015-05-22 14:03:53', '2015-05-22 20:03:53', '<h1>Hibernate DAO Code Generator</h1>\r\nFireStorm/DAO makes Hibernate DAO developers more productive by automatically generating Java source code for accessing relational databases using the Hibernate framework. The benefits provided to Hibernate DAO developers by CodeFutures\' code generation approach are higher developer productivity, better software quality, and lower maintenance costs. You can start using and benefiting from Hibernate straight away with FireStorm/DAO.\r\n<div id=\"boxshots\">\r\n\r\n<img src=\"/img/CF_FS_BOX_02_AR_SM.gif\" alt=\"\" />\r\n\r\n<a href=\"/architect/\">Architect Edition</a>\r\n\r\n<img src=\"/img/CF_FS_BOX_02_OE_SM.gif\" alt=\"\" />\r\n\r\n<a href=\"/products/firestorm/editions/oem/\">OEM Edition</a>\r\n\r\n</div>\r\nFireStorm/DAO is available for free: <a href=\"/products/firestorm/download/\">Download Now!</a>\r\n<h2 style=\"clear: none;\">Hibernate DAO and ORM Code Generation</h2>\r\nFireStorm/DAO is a code generator that can import existing database schemas (from a SQL script or from a live JDBC connection) and can then generate a complete persistence tier based on any of the following Java persistence technologies:\r\n<ul>\r\n	<li>Hibernate DAO</li>\r\n	<li>Java Database Connectivity (JDBC DAO)</li>\r\n	<li>Spring DAO</li>\r\n</ul>\r\nFireStorm/DAO generates Java source code and configuration files that developers would otherwise have to write by hand. FireStorm/DAO generates code that is compliant with the <a href=\"/data-access-object/\">Data Access Object</a> (DAO) design pattern (DAO is a core J2EE design pattern). FireStorm/DAO can also generate native persistence code for Object Relational Mapping (ORM) products (such as Hibernate), without the option of using the DAO design pattern. When generating Hibernate code (without DAOs), FireStorm/DAO produces Hibernate persistent classes and a Hibernate mapping file (*.hbm.xml) for each database table.\r\n<h2 style=\"clear: none;\">Reduced Hibernate Complexity</h2>\r\nFireStorm/DAO adopts a pragmatic approach of generating Java source code for data persistence that is a direct mapping of a particular relational database schema. It is also possible to define complex multi-table queries and to leverage existing database logic contained within stored procedures.\r\n\r\nThe generated source code is well-written, consistent and contains documentation. Most importantly, the generated code is production quality and has been tested in literally hundreds of deployments world-wide.\r\n<h1>Getting Started with FireStorm/DAO</h1>\r\n<h2>First Steps</h2>\r\nCodeFutures recommends that you start by quickly looking through the pages of the <a href=\"/products/firestorm/dao/tutorial/\">online tutorial</a>. This will give you an idea of how simple FireStorm/DAO is to use.\r\n\r\nCodeFutures then recommends that you watch the <a href=\"/library/FireStormArchitectDemo.wmv\">introductory video</a>.\r\n\r\n<a href=\"/library/FireStormArchitectDemo.wmv\"><img src=\"/img/screenshots/video_screenshot_200.gif\" alt=\"\" /></a>\r\n\r\nIf you have not done so already, you are ready to <a href=\"/products/firestorm/download/\">download FireStorm/DAO</a>.\r\n<h2>Whitepapers</h2>\r\n<img src=\"/img/pdficonsm.gif\" alt=\"\" /> <a href=\"/library/FireStormDAOTechnicalOverview.PDF\">FireStorm/DAO Technical Overview (PDF)</a>\r\n<h2>Learning about FireStorm/DAO Architect Edition</h2>\r\nYou should start by reading an introduction to <a href=\"/architect/\">FireStorm/DAO Architect Edition</a>.\r\n\r\nWatch the FireStorm/DAO Architect Edition <a href=\"/library/FireStormArchitectDemo.wmv\">video introduction</a>.\r\n\r\nYou can see some sample code generation template source code on the <a href=\"/products/firestorm/editions/architect/\">Architect Edition Technical Specifications</a> page.\r\n<h2>Explaining FireStom/DAO To Your Manager</h2>\r\nYou can obtain product brochures at the <a href=\"/library/\">Document Library</a>, including a <a href=\"/library/CodeFuturesFireStormDAOoverview.pdf\">Product Overview</a> and <a href=\"/library/FireStormDAOPricingSheet.pdf\">Pricing Sheet</a>.\r\n\r\nYou can also provide your manager with a Web link to some <a href=\"/customers/codefutures-customer-testimonials/\">Customer Testimonials</a>.\r\n\r\nCodeFutures has a range of white papers and presentations available for download from a password-protected Web page. If you need additional documentation to explain the value of FireStorm/DAO to your project manager or purchasing manager, you should contact <a href=\"mailto:sales@codefutures.com\">sales@codefutures.com</a>.\r\n<h2>Additional Resources</h2>\r\nFireStorm/DAO is a <a href=\"/products/firestorm/\">database access tool</a> based on the <a href=\"/data-access-object/\">Data Access Object</a> design pattern.\r\n<p class=\"additionalrl\"><a href=\"/products/firestorm/download/\">Download FireStorm/DAO</a></p>\r\nCodeFutures provides a free program to analyze the performance of your MySQL database.\r\n<p class=\"additionalrl\"><a href=\"/database-performance-analysis/\">Free MySQL Performance Analysis</a></p>\r\nRead about how <a href=\"/database-sharding/\">Database Sharding</a> helps many major companies to linearly scale their database applications.\r\n<p class=\"additionalrl\"><a href=\"/database-sharding-white-paper/\">Request Database Sharding White Paper</a></p>\r\ndbShards economically scales large, high transaction volume databases using <a href=\"/database-sharding/\">Database Sharding</a>.\r\n<p class=\"additionalrl\"><a href=\"/dbshards-product-presentation/\">View Introduction to dbShards Video</a></p>', 'Hibernate DAO', '', 'inherit', 'open', 'open', '', '183-revision-v1', '', '', '2015-05-22 14:03:53', '2015-05-22 20:03:53', '', '183', 'http://www.agildata.com/183-revision-v1/', '0', 'revision', '', '0');
INSERT INTO `wpag_posts` VALUES('185', '5', '2015-05-22 14:05:34', '0000-00-00 00:00:00', '<h1>Session Bean Tutorial</h1>\r\n<h2>Introduction</h2>\r\nThis page provides Java source code and sample XML deployment descriptors for a J2EE 1.4 Session Bean.\r\n<h2>Writing the Session Bean</h2>\r\nWe will need to produce the following artifacts and package them into a jar file:\r\n<ul>\r\n	<li>Remote Interface</li>\r\n	<li>Home Interface</li>\r\n	<li>Bean Implementation Class</li>\r\n	<li>EJB Deployment Descriptor (ejb-jar.xml)</li>\r\n</ul>\r\n<h3>Remote Interface</h3>\r\n<table class=\"code\" width=\"100%\">\r\n<tbody>\r\n<tr>\r\n<td>\r\n<pre><span class=\"javaKeyword\">package</span> <span class=\"javaIdentifier\">com</span>.<span class=\"javaIdentifier\">codesuccess</span>.<span class=\"javaIdentifier\">tutorial</span>.<span class=\"javaIdentifier\">ejb</span>;\r\n\r\n<span class=\"javaKeyword\">import</span> <span class=\"javaIdentifier\">javax</span>.<span class=\"javaIdentifier\">ejb</span>.<span class=\"javaIdentifier\">EJBObject</span>;\r\n<span class=\"javaKeyword\">import</span> <span class=\"javaIdentifier\">java</span>.<span class=\"javaIdentifier\">rmi</span>.<span class=\"javaIdentifier\">RemoteException</span>;\r\n\r\n<span class=\"javaKeyword\">public</span> <span class=\"javaKeyword\">interface</span> <span class=\"javaIdentifier\">Calculator</span> <span class=\"javaKeyword\">extends</span> <span class=\"javaIdentifier\">EJBObject</span> {\r\n    <span class=\"javaKeyword\">int</span> <span class=\"javaIdentifier\">add</span>(<span class=\"javaKeyword\">int</span> <span class=\"javaIdentifier\">a</span>, <span class=\"javaKeyword\">int</span> <span class=\"javaIdentifier\">b</span>) <span class=\"javaKeyword\">throws</span> <span class=\"javaIdentifier\">RemoteException</span>;\r\n}</pre>\r\n</td>\r\n</tr>\r\n</tbody>\r\n</table>\r\n<h3>Home Interface</h3>\r\n<table class=\"code\" width=\"100%\">\r\n<tbody>\r\n<tr>\r\n<td>\r\n<pre><span class=\"javaKeyword\">package</span> <span class=\"javaIdentifier\">com</span>.<span class=\"javaIdentifier\">codesuccess</span>.<span class=\"javaIdentifier\">tutorial</span>.<span class=\"javaIdentifier\">ejb</span>;\r\n\r\n<span class=\"javaKeyword\">import</span> <span class=\"javaIdentifier\">javax</span>.<span class=\"javaIdentifier\">ejb</span>.<span class=\"javaIdentifier\">EJBHome</span>;\r\n<span class=\"javaKeyword\">import</span> <span class=\"javaIdentifier\">javax</span>.<span class=\"javaIdentifier\">ejb</span>.<span class=\"javaIdentifier\">CreateException</span>;\r\n<span class=\"javaKeyword\">import</span> <span class=\"javaIdentifier\">java</span>.<span class=\"javaIdentifier\">rmi</span>.<span class=\"javaIdentifier\">RemoteException</span>;\r\n\r\n<span class=\"javaKeyword\">public</span> <span class=\"javaKeyword\">interface</span> <span class=\"javaIdentifier\">CalculatorHome</span> <span class=\"javaKeyword\">extends</span> <span class=\"javaIdentifier\">EJBHome</span> {\r\n    <span class=\"javaIdentifier\">Calculator</span> <span class=\"javaIdentifier\">create</span>() <span class=\"javaKeyword\">throws</span> <span class=\"javaIdentifier\">CreateException</span>, <span class=\"javaIdentifier\">RemoteException</span>;\r\n}</pre>\r\n</td>\r\n</tr>\r\n</tbody>\r\n</table>\r\n<h3>Bean Implementation</h3>\r\n<table class=\"code\" width=\"100%\">\r\n<tbody>\r\n<tr>\r\n<td>\r\n<pre><span class=\"javaKeyword\">package</span> <span class=\"javaIdentifier\">com</span>.<span class=\"javaIdentifier\">codesuccess</span>.<span class=\"javaIdentifier\">tutorial</span>.<span class=\"javaIdentifier\">ejb</span>;\r\n\r\n<span class=\"javaKeyword\">import</span> <span class=\"javaIdentifier\">javax</span>.<span class=\"javaIdentifier\">ejb</span>.<span class=\"javaIdentifier\">SessionBean</span>;\r\n<span class=\"javaKeyword\">import</span> <span class=\"javaIdentifier\">javax</span>.<span class=\"javaIdentifier\">ejb</span>.<span class=\"javaIdentifier\">SessionContext</span>;\r\n<span class=\"javaKeyword\">import</span> <span class=\"javaIdentifier\">javax</span>.<span class=\"javaIdentifier\">ejb</span>.<span class=\"javaIdentifier\">EJBException</span>;\r\n<span class=\"javaKeyword\">import</span> <span class=\"javaIdentifier\">java</span>.<span class=\"javaIdentifier\">rmi</span>.<span class=\"javaIdentifier\">RemoteException</span>;\r\n\r\n<span class=\"javaKeyword\">public</span> <span class=\"javaKeyword\">class</span> <span class=\"javaIdentifier\">CalculatorBean</span> <span class=\"javaKeyword\">implements</span> <span class=\"javaIdentifier\">SessionBean</span> {\r\n\r\n    <span class=\"javaKeyword\">public</span> <span class=\"javaKeyword\">int</span> <span class=\"javaIdentifier\">add</span>(<span class=\"javaKeyword\">int</span> <span class=\"javaIdentifier\">a</span>, <span class=\"javaKeyword\">int</span> <span class=\"javaIdentifier\">b</span>) <span class=\"javaKeyword\">throws</span> <span class=\"javaIdentifier\">RemoteException</span> {\r\n        <span class=\"javaKeyword\">return</span> <span class=\"javaIdentifier\">a</span>+<span class=\"javaIdentifier\">b</span>;\r\n    }\r\n\r\n    <span class=\"javaKeyword\">public</span> <span class=\"javaKeyword\">void</span> <span class=\"javaIdentifier\">setSessionContext</span>(<span class=\"javaIdentifier\">SessionContext</span> <span class=\"javaIdentifier\">sessionContext</span>)\r\n        <span class=\"javaKeyword\">throws</span> <span class=\"javaIdentifier\">EJBException</span>, <span class=\"javaIdentifier\">RemoteException</span> {\r\n    }\r\n\r\n    <span class=\"javaKeyword\">public</span> <span class=\"javaKeyword\">void</span> <span class=\"javaIdentifier\">ejbCreate</span>() <span class=\"javaKeyword\">throws</span> <span class=\"javaIdentifier\">EJBException</span>, <span class=\"javaIdentifier\">RemoteException</span> {\r\n    }\r\n\r\n    <span class=\"javaKeyword\">public</span> <span class=\"javaKeyword\">void</span> <span class=\"javaIdentifier\">ejbRemove</span>() <span class=\"javaKeyword\">throws</span> <span class=\"javaIdentifier\">EJBException</span>, <span class=\"javaIdentifier\">RemoteException</span> {\r\n    }\r\n\r\n    <span class=\"javaKeyword\">public</span> <span class=\"javaKeyword\">void</span> <span class=\"javaIdentifier\">ejbActivate</span>() <span class=\"javaKeyword\">throws</span> <span class=\"javaIdentifier\">EJBException</span>, <span class=\"javaIdentifier\">RemoteException</span> {\r\n    }\r\n\r\n    <span class=\"javaKeyword\">public</span> <span class=\"javaKeyword\">void</span> <span class=\"javaIdentifier\">ejbPassivate</span>() <span class=\"javaKeyword\">throws</span> <span class=\"javaIdentifier\">EJBException</span>, <span class=\"javaIdentifier\">RemoteException</span> {\r\n    }\r\n}</pre>\r\n</td>\r\n</tr>\r\n</tbody>\r\n</table>\r\n<h3>ejb-jar.xml</h3>\r\n<table class=\"code\" width=\"100%\">\r\n<tbody>\r\n<tr>\r\n<td>&lt;?xml version=\"1.0\"?&gt;&lt;ejb-jar xmlns=\"http://java.sun.com/xml/ns/j2ee\"\r\nxmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"\r\nxsi:schemaLocation=\"http://java.sun.com/xml/ns/j2ee\r\nhttp://java.sun.com/xml/ns/j2ee/ejb-jar_2_1.xsd\"\r\nversion=\"2.1\"&gt;&lt;enterprise-beans&gt;\r\n\r\n&lt;session&gt;\r\n&lt;display-name&gt;Calculator (Stateless Session Bean)&lt;/display-name&gt;\r\n&lt;ejb-name&gt;Calculator&lt;/ejb-name&gt;\r\n&lt;home&gt;com.codesuccess.tutorial.ejb.CalculatorHome&lt;/home&gt;\r\n&lt;remote&gt;com.codesuccess.tutorial.ejb.Calculator&lt;/remote&gt;\r\n&lt;ejb-class&gt;com.codesuccess.tutorial.ejb.CalculatorBean&lt;/ejb-class&gt;\r\n&lt;session-type&gt;Stateless&lt;/session-type&gt;\r\n&lt;transaction-type&gt;Container&lt;/transaction-type&gt;\r\n&lt;/session&gt;\r\n\r\n&lt;/enterprise-beans&gt;\r\n&lt;assembly-descriptor&gt;&lt;/assembly-descriptor&gt;\r\n&lt;/ejb-jar&gt;</td>\r\n</tr>\r\n</tbody>\r\n</table>', 'J2EE 1.4 Session Bean Tutorial', '', 'draft', 'open', 'open', '', 'j2ee-14-session-bean-tutorial', '', '', '2015-05-22 14:05:34', '2015-05-22 20:05:34', '', '0', 'http://www.agildata.com/?page_id=185', '0', 'page', '', '0');
INSERT INTO `wpag_posts` VALUES('186', '5', '2015-05-22 14:05:27', '2015-05-22 20:05:27', '<h1>Session Bean Tutorial</h1>\r\n<h2>Introduction</h2>\r\nThis page provides Java source code and sample XML deployment descriptors for a J2EE 1.4 Session Bean.\r\n<h2>Writing the Session Bean</h2>\r\nWe will need to produce the following artifacts and package them into a jar file:\r\n<ul>\r\n	<li>Remote Interface</li>\r\n	<li>Home Interface</li>\r\n	<li>Bean Implementation Class</li>\r\n	<li>EJB Deployment Descriptor (ejb-jar.xml)</li>\r\n</ul>\r\n<h3>Remote Interface</h3>\r\n<table class=\"code\" width=\"100%\">\r\n<tbody>\r\n<tr>\r\n<td>\r\n<pre><span class=\"javaKeyword\">package</span> <span class=\"javaIdentifier\">com</span>.<span class=\"javaIdentifier\">codesuccess</span>.<span class=\"javaIdentifier\">tutorial</span>.<span class=\"javaIdentifier\">ejb</span>;\r\n\r\n<span class=\"javaKeyword\">import</span> <span class=\"javaIdentifier\">javax</span>.<span class=\"javaIdentifier\">ejb</span>.<span class=\"javaIdentifier\">EJBObject</span>;\r\n<span class=\"javaKeyword\">import</span> <span class=\"javaIdentifier\">java</span>.<span class=\"javaIdentifier\">rmi</span>.<span class=\"javaIdentifier\">RemoteException</span>;\r\n\r\n<span class=\"javaKeyword\">public</span> <span class=\"javaKeyword\">interface</span> <span class=\"javaIdentifier\">Calculator</span> <span class=\"javaKeyword\">extends</span> <span class=\"javaIdentifier\">EJBObject</span> {\r\n    <span class=\"javaKeyword\">int</span> <span class=\"javaIdentifier\">add</span>(<span class=\"javaKeyword\">int</span> <span class=\"javaIdentifier\">a</span>, <span class=\"javaKeyword\">int</span> <span class=\"javaIdentifier\">b</span>) <span class=\"javaKeyword\">throws</span> <span class=\"javaIdentifier\">RemoteException</span>;\r\n}</pre>\r\n</td>\r\n</tr>\r\n</tbody>\r\n</table>\r\n<h3>Home Interface</h3>\r\n<table class=\"code\" width=\"100%\">\r\n<tbody>\r\n<tr>\r\n<td>\r\n<pre><span class=\"javaKeyword\">package</span> <span class=\"javaIdentifier\">com</span>.<span class=\"javaIdentifier\">codesuccess</span>.<span class=\"javaIdentifier\">tutorial</span>.<span class=\"javaIdentifier\">ejb</span>;\r\n\r\n<span class=\"javaKeyword\">import</span> <span class=\"javaIdentifier\">javax</span>.<span class=\"javaIdentifier\">ejb</span>.<span class=\"javaIdentifier\">EJBHome</span>;\r\n<span class=\"javaKeyword\">import</span> <span class=\"javaIdentifier\">javax</span>.<span class=\"javaIdentifier\">ejb</span>.<span class=\"javaIdentifier\">CreateException</span>;\r\n<span class=\"javaKeyword\">import</span> <span class=\"javaIdentifier\">java</span>.<span class=\"javaIdentifier\">rmi</span>.<span class=\"javaIdentifier\">RemoteException</span>;\r\n\r\n<span class=\"javaKeyword\">public</span> <span class=\"javaKeyword\">interface</span> <span class=\"javaIdentifier\">CalculatorHome</span> <span class=\"javaKeyword\">extends</span> <span class=\"javaIdentifier\">EJBHome</span> {\r\n    <span class=\"javaIdentifier\">Calculator</span> <span class=\"javaIdentifier\">create</span>() <span class=\"javaKeyword\">throws</span> <span class=\"javaIdentifier\">CreateException</span>, <span class=\"javaIdentifier\">RemoteException</span>;\r\n}</pre>\r\n</td>\r\n</tr>\r\n</tbody>\r\n</table>\r\n<h3>Bean Implementation</h3>\r\n<table class=\"code\" width=\"100%\">\r\n<tbody>\r\n<tr>\r\n<td>\r\n<pre><span class=\"javaKeyword\">package</span> <span class=\"javaIdentifier\">com</span>.<span class=\"javaIdentifier\">codesuccess</span>.<span class=\"javaIdentifier\">tutorial</span>.<span class=\"javaIdentifier\">ejb</span>;\r\n\r\n<span class=\"javaKeyword\">import</span> <span class=\"javaIdentifier\">javax</span>.<span class=\"javaIdentifier\">ejb</span>.<span class=\"javaIdentifier\">SessionBean</span>;\r\n<span class=\"javaKeyword\">import</span> <span class=\"javaIdentifier\">javax</span>.<span class=\"javaIdentifier\">ejb</span>.<span class=\"javaIdentifier\">SessionContext</span>;\r\n<span class=\"javaKeyword\">import</span> <span class=\"javaIdentifier\">javax</span>.<span class=\"javaIdentifier\">ejb</span>.<span class=\"javaIdentifier\">EJBException</span>;\r\n<span class=\"javaKeyword\">import</span> <span class=\"javaIdentifier\">java</span>.<span class=\"javaIdentifier\">rmi</span>.<span class=\"javaIdentifier\">RemoteException</span>;\r\n\r\n<span class=\"javaKeyword\">public</span> <span class=\"javaKeyword\">class</span> <span class=\"javaIdentifier\">CalculatorBean</span> <span class=\"javaKeyword\">implements</span> <span class=\"javaIdentifier\">SessionBean</span> {\r\n\r\n    <span class=\"javaKeyword\">public</span> <span class=\"javaKeyword\">int</span> <span class=\"javaIdentifier\">add</span>(<span class=\"javaKeyword\">int</span> <span class=\"javaIdentifier\">a</span>, <span class=\"javaKeyword\">int</span> <span class=\"javaIdentifier\">b</span>) <span class=\"javaKeyword\">throws</span> <span class=\"javaIdentifier\">RemoteException</span> {\r\n        <span class=\"javaKeyword\">return</span> <span class=\"javaIdentifier\">a</span>+<span class=\"javaIdentifier\">b</span>;\r\n    }\r\n\r\n    <span class=\"javaKeyword\">public</span> <span class=\"javaKeyword\">void</span> <span class=\"javaIdentifier\">setSessionContext</span>(<span class=\"javaIdentifier\">SessionContext</span> <span class=\"javaIdentifier\">sessionContext</span>)\r\n        <span class=\"javaKeyword\">throws</span> <span class=\"javaIdentifier\">EJBException</span>, <span class=\"javaIdentifier\">RemoteException</span> {\r\n    }\r\n\r\n    <span class=\"javaKeyword\">public</span> <span class=\"javaKeyword\">void</span> <span class=\"javaIdentifier\">ejbCreate</span>() <span class=\"javaKeyword\">throws</span> <span class=\"javaIdentifier\">EJBException</span>, <span class=\"javaIdentifier\">RemoteException</span> {\r\n    }\r\n\r\n    <span class=\"javaKeyword\">public</span> <span class=\"javaKeyword\">void</span> <span class=\"javaIdentifier\">ejbRemove</span>() <span class=\"javaKeyword\">throws</span> <span class=\"javaIdentifier\">EJBException</span>, <span class=\"javaIdentifier\">RemoteException</span> {\r\n    }\r\n\r\n    <span class=\"javaKeyword\">public</span> <span class=\"javaKeyword\">void</span> <span class=\"javaIdentifier\">ejbActivate</span>() <span class=\"javaKeyword\">throws</span> <span class=\"javaIdentifier\">EJBException</span>, <span class=\"javaIdentifier\">RemoteException</span> {\r\n    }\r\n\r\n    <span class=\"javaKeyword\">public</span> <span class=\"javaKeyword\">void</span> <span class=\"javaIdentifier\">ejbPassivate</span>() <span class=\"javaKeyword\">throws</span> <span class=\"javaIdentifier\">EJBException</span>, <span class=\"javaIdentifier\">RemoteException</span> {\r\n    }\r\n}</pre>\r\n</td>\r\n</tr>\r\n</tbody>\r\n</table>\r\n<h3>ejb-jar.xml</h3>\r\n<table class=\"code\" width=\"100%\">\r\n<tbody>\r\n<tr>\r\n<td>&lt;?xml version=\"1.0\"?&gt;&lt;ejb-jar xmlns=\"http://java.sun.com/xml/ns/j2ee\"\r\nxmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"\r\nxsi:schemaLocation=\"http://java.sun.com/xml/ns/j2ee\r\nhttp://java.sun.com/xml/ns/j2ee/ejb-jar_2_1.xsd\"\r\nversion=\"2.1\"&gt;\r\n\r\n&lt;enterprise-beans&gt;\r\n\r\n&lt;session&gt;\r\n&lt;display-name&gt;Calculator (Stateless Session Bean)&lt;/display-name&gt;\r\n&lt;ejb-name&gt;Calculator&lt;/ejb-name&gt;\r\n&lt;home&gt;com.codesuccess.tutorial.ejb.CalculatorHome&lt;/home&gt;\r\n&lt;remote&gt;com.codesuccess.tutorial.ejb.Calculator&lt;/remote&gt;\r\n&lt;ejb-class&gt;com.codesuccess.tutorial.ejb.CalculatorBean&lt;/ejb-class&gt;\r\n&lt;session-type&gt;Stateless&lt;/session-type&gt;\r\n&lt;transaction-type&gt;Container&lt;/transaction-type&gt;\r\n&lt;/session&gt;\r\n\r\n&lt;/enterprise-beans&gt;\r\n&lt;assembly-descriptor&gt;&lt;/assembly-descriptor&gt;\r\n&lt;/ejb-jar&gt;</td>\r\n</tr>\r\n</tbody>\r\n</table>', 'J2EE 1.4 Session Bean Tutorial', '', 'inherit', 'open', 'open', '', '185-revision-v1', '', '', '2015-05-22 14:05:27', '2015-05-22 20:05:27', '', '185', 'http://www.agildata.com/185-revision-v1/', '0', 'revision', '', '0');
INSERT INTO `wpag_posts` VALUES('187', '5', '2015-05-22 14:05:34', '2015-05-22 20:05:34', '<h1>Session Bean Tutorial</h1>\r\n<h2>Introduction</h2>\r\nThis page provides Java source code and sample XML deployment descriptors for a J2EE 1.4 Session Bean.\r\n<h2>Writing the Session Bean</h2>\r\nWe will need to produce the following artifacts and package them into a jar file:\r\n<ul>\r\n	<li>Remote Interface</li>\r\n	<li>Home Interface</li>\r\n	<li>Bean Implementation Class</li>\r\n	<li>EJB Deployment Descriptor (ejb-jar.xml)</li>\r\n</ul>\r\n<h3>Remote Interface</h3>\r\n<table class=\"code\" width=\"100%\">\r\n<tbody>\r\n<tr>\r\n<td>\r\n<pre><span class=\"javaKeyword\">package</span> <span class=\"javaIdentifier\">com</span>.<span class=\"javaIdentifier\">codesuccess</span>.<span class=\"javaIdentifier\">tutorial</span>.<span class=\"javaIdentifier\">ejb</span>;\r\n\r\n<span class=\"javaKeyword\">import</span> <span class=\"javaIdentifier\">javax</span>.<span class=\"javaIdentifier\">ejb</span>.<span class=\"javaIdentifier\">EJBObject</span>;\r\n<span class=\"javaKeyword\">import</span> <span class=\"javaIdentifier\">java</span>.<span class=\"javaIdentifier\">rmi</span>.<span class=\"javaIdentifier\">RemoteException</span>;\r\n\r\n<span class=\"javaKeyword\">public</span> <span class=\"javaKeyword\">interface</span> <span class=\"javaIdentifier\">Calculator</span> <span class=\"javaKeyword\">extends</span> <span class=\"javaIdentifier\">EJBObject</span> {\r\n    <span class=\"javaKeyword\">int</span> <span class=\"javaIdentifier\">add</span>(<span class=\"javaKeyword\">int</span> <span class=\"javaIdentifier\">a</span>, <span class=\"javaKeyword\">int</span> <span class=\"javaIdentifier\">b</span>) <span class=\"javaKeyword\">throws</span> <span class=\"javaIdentifier\">RemoteException</span>;\r\n}</pre>\r\n</td>\r\n</tr>\r\n</tbody>\r\n</table>\r\n<h3>Home Interface</h3>\r\n<table class=\"code\" width=\"100%\">\r\n<tbody>\r\n<tr>\r\n<td>\r\n<pre><span class=\"javaKeyword\">package</span> <span class=\"javaIdentifier\">com</span>.<span class=\"javaIdentifier\">codesuccess</span>.<span class=\"javaIdentifier\">tutorial</span>.<span class=\"javaIdentifier\">ejb</span>;\r\n\r\n<span class=\"javaKeyword\">import</span> <span class=\"javaIdentifier\">javax</span>.<span class=\"javaIdentifier\">ejb</span>.<span class=\"javaIdentifier\">EJBHome</span>;\r\n<span class=\"javaKeyword\">import</span> <span class=\"javaIdentifier\">javax</span>.<span class=\"javaIdentifier\">ejb</span>.<span class=\"javaIdentifier\">CreateException</span>;\r\n<span class=\"javaKeyword\">import</span> <span class=\"javaIdentifier\">java</span>.<span class=\"javaIdentifier\">rmi</span>.<span class=\"javaIdentifier\">RemoteException</span>;\r\n\r\n<span class=\"javaKeyword\">public</span> <span class=\"javaKeyword\">interface</span> <span class=\"javaIdentifier\">CalculatorHome</span> <span class=\"javaKeyword\">extends</span> <span class=\"javaIdentifier\">EJBHome</span> {\r\n    <span class=\"javaIdentifier\">Calculator</span> <span class=\"javaIdentifier\">create</span>() <span class=\"javaKeyword\">throws</span> <span class=\"javaIdentifier\">CreateException</span>, <span class=\"javaIdentifier\">RemoteException</span>;\r\n}</pre>\r\n</td>\r\n</tr>\r\n</tbody>\r\n</table>\r\n<h3>Bean Implementation</h3>\r\n<table class=\"code\" width=\"100%\">\r\n<tbody>\r\n<tr>\r\n<td>\r\n<pre><span class=\"javaKeyword\">package</span> <span class=\"javaIdentifier\">com</span>.<span class=\"javaIdentifier\">codesuccess</span>.<span class=\"javaIdentifier\">tutorial</span>.<span class=\"javaIdentifier\">ejb</span>;\r\n\r\n<span class=\"javaKeyword\">import</span> <span class=\"javaIdentifier\">javax</span>.<span class=\"javaIdentifier\">ejb</span>.<span class=\"javaIdentifier\">SessionBean</span>;\r\n<span class=\"javaKeyword\">import</span> <span class=\"javaIdentifier\">javax</span>.<span class=\"javaIdentifier\">ejb</span>.<span class=\"javaIdentifier\">SessionContext</span>;\r\n<span class=\"javaKeyword\">import</span> <span class=\"javaIdentifier\">javax</span>.<span class=\"javaIdentifier\">ejb</span>.<span class=\"javaIdentifier\">EJBException</span>;\r\n<span class=\"javaKeyword\">import</span> <span class=\"javaIdentifier\">java</span>.<span class=\"javaIdentifier\">rmi</span>.<span class=\"javaIdentifier\">RemoteException</span>;\r\n\r\n<span class=\"javaKeyword\">public</span> <span class=\"javaKeyword\">class</span> <span class=\"javaIdentifier\">CalculatorBean</span> <span class=\"javaKeyword\">implements</span> <span class=\"javaIdentifier\">SessionBean</span> {\r\n\r\n    <span class=\"javaKeyword\">public</span> <span class=\"javaKeyword\">int</span> <span class=\"javaIdentifier\">add</span>(<span class=\"javaKeyword\">int</span> <span class=\"javaIdentifier\">a</span>, <span class=\"javaKeyword\">int</span> <span class=\"javaIdentifier\">b</span>) <span class=\"javaKeyword\">throws</span> <span class=\"javaIdentifier\">RemoteException</span> {\r\n        <span class=\"javaKeyword\">return</span> <span class=\"javaIdentifier\">a</span>+<span class=\"javaIdentifier\">b</span>;\r\n    }\r\n\r\n    <span class=\"javaKeyword\">public</span> <span class=\"javaKeyword\">void</span> <span class=\"javaIdentifier\">setSessionContext</span>(<span class=\"javaIdentifier\">SessionContext</span> <span class=\"javaIdentifier\">sessionContext</span>)\r\n        <span class=\"javaKeyword\">throws</span> <span class=\"javaIdentifier\">EJBException</span>, <span class=\"javaIdentifier\">RemoteException</span> {\r\n    }\r\n\r\n    <span class=\"javaKeyword\">public</span> <span class=\"javaKeyword\">void</span> <span class=\"javaIdentifier\">ejbCreate</span>() <span class=\"javaKeyword\">throws</span> <span class=\"javaIdentifier\">EJBException</span>, <span class=\"javaIdentifier\">RemoteException</span> {\r\n    }\r\n\r\n    <span class=\"javaKeyword\">public</span> <span class=\"javaKeyword\">void</span> <span class=\"javaIdentifier\">ejbRemove</span>() <span class=\"javaKeyword\">throws</span> <span class=\"javaIdentifier\">EJBException</span>, <span class=\"javaIdentifier\">RemoteException</span> {\r\n    }\r\n\r\n    <span class=\"javaKeyword\">public</span> <span class=\"javaKeyword\">void</span> <span class=\"javaIdentifier\">ejbActivate</span>() <span class=\"javaKeyword\">throws</span> <span class=\"javaIdentifier\">EJBException</span>, <span class=\"javaIdentifier\">RemoteException</span> {\r\n    }\r\n\r\n    <span class=\"javaKeyword\">public</span> <span class=\"javaKeyword\">void</span> <span class=\"javaIdentifier\">ejbPassivate</span>() <span class=\"javaKeyword\">throws</span> <span class=\"javaIdentifier\">EJBException</span>, <span class=\"javaIdentifier\">RemoteException</span> {\r\n    }\r\n}</pre>\r\n</td>\r\n</tr>\r\n</tbody>\r\n</table>\r\n<h3>ejb-jar.xml</h3>\r\n<table class=\"code\" width=\"100%\">\r\n<tbody>\r\n<tr>\r\n<td>&lt;?xml version=\"1.0\"?&gt;&lt;ejb-jar xmlns=\"http://java.sun.com/xml/ns/j2ee\"\r\nxmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"\r\nxsi:schemaLocation=\"http://java.sun.com/xml/ns/j2ee\r\nhttp://java.sun.com/xml/ns/j2ee/ejb-jar_2_1.xsd\"\r\nversion=\"2.1\"&gt;&lt;enterprise-beans&gt;\r\n\r\n&lt;session&gt;\r\n&lt;display-name&gt;Calculator (Stateless Session Bean)&lt;/display-name&gt;\r\n&lt;ejb-name&gt;Calculator&lt;/ejb-name&gt;\r\n&lt;home&gt;com.codesuccess.tutorial.ejb.CalculatorHome&lt;/home&gt;\r\n&lt;remote&gt;com.codesuccess.tutorial.ejb.Calculator&lt;/remote&gt;\r\n&lt;ejb-class&gt;com.codesuccess.tutorial.ejb.CalculatorBean&lt;/ejb-class&gt;\r\n&lt;session-type&gt;Stateless&lt;/session-type&gt;\r\n&lt;transaction-type&gt;Container&lt;/transaction-type&gt;\r\n&lt;/session&gt;\r\n\r\n&lt;/enterprise-beans&gt;\r\n&lt;assembly-descriptor&gt;&lt;/assembly-descriptor&gt;\r\n&lt;/ejb-jar&gt;</td>\r\n</tr>\r\n</tbody>\r\n</table>', 'J2EE 1.4 Session Bean Tutorial', '', 'inherit', 'open', 'open', '', '185-revision-v1', '', '', '2015-05-22 14:05:34', '2015-05-22 20:05:34', '', '185', 'http://www.agildata.com/185-revision-v1/', '0', 'revision', '', '0');
INSERT INTO `wpag_posts` VALUES('188', '5', '2015-05-22 14:07:32', '0000-00-00 00:00:00', '<h1>Java Code Generation using FireStorm/DAO</h1>\r\n<h2>Java Code Generation: Generate Java source code for accessing relational databases</h2>\r\nFireStorm/DAO make Java software developers more productive through java code generation of the Java source code for accessing relational databases.\r\n<h2>Java Code Generation Provides Reduced complexity</h2>\r\nFireStorm/DAO java code generation provide a one-to-one mapping between Java objects and database tables, which is simpler than using a complex mapping tier.\r\n<h2>Java Code Generation Provides Portable code</h2>\r\nThe java code generation by FireStorm/DAO is fully portable between stand-alone Java and Enterprise Java. The java code generation is also portable between Application Servers(ensuring no lock-in). The java code generation conforms to the widely accepted <a href=\"/data-access-object/\">Data Access Object</a> design pattern.\r\n<h2>Java Code Generation in Service-Oriented Architectures</h2>\r\nThe java code generation by FireStorm/SDO is designed for use in service-oriented architectures, based on the Service Data Object industry specification.\r\n<h2>Java Code Generation and Performance</h2>\r\nFireStorm/DAO are not limited to simple single-table operations but can also leverage the power of the relational database by generating Custom DAO classes that make use of complex SQL statements including table joins. FireStorm/DAO also provide java code generation support for exposing stored procedures as Data Access Objects or Service Data Objects.\r\n<h2>Java Code Generation Provides Productivity Gains</h2>\r\nJava code generation by definition is always going to be much faster than hand coding. For reference purposes, when using FireStorm/DAO with a reasonable large (over 20 tables) database, there is approximately a twenty-fold productivity increase. CodeFutures\' java code generation approach provides faster and cheaper application development, higher quality applications, more predictable and consistent results, faster software product development cycle times, faster time to market for commercial application development, reduced project costs, and reduced project risks. CodeFutures java code generation approach ensures that the focus of software developers is solving business problems.\r\n<h2>Java Code Generation and Quality</h2>\r\nJava code generation will always have fewer errors than hand written code, due to the elimination of typos, human error, and so on. FireStorm/DAO provide a consistent approach across multiple projects, multiple development teams, and against multiple types of database product. Automatic java code generation ensures that software developers are more likely to be focussed on the business requirements than the more mundane task of coding.\r\n<h2>Additional Reading on Java Code Generation</h2>\r\nCode Generation Network\r\n\r\n<a href=\"http://www.codegeneration.net/\"> http://www.codegeneration.net/</a>\r\n\r\nJavaWorld: Reflection versus Code Generation\r\n\r\n<a href=\"http://www.javaworld.com/javaworld/jw-11-2001/jw-1102-codegen.html\">http://www.javaworld.com/javaworld/jw-11-2001/jw-1102-codegen.html</a>\r\n\r\nApplying Code Generation Techniques to the J2EE Development\r\n\r\n<a href=\"http://www.informit.com/articles/article.asp?p=389718&amp;rl=1\">http://www.informit.com/articles/article.asp?p=389718</a>\r\n\r\nWikipedia on Code Generation\r\n\r\n<a href=\"http://en.wikipedia.org/wiki/Code_generation\">http://en.wikipedia.org/wiki/Code_generation</a>\r\n\r\nCode Generation: The fastest way to write software?\r\n\r\n<a href=\"http://www.softwarereality.com/programming/code_generation.jsp\">http://www.softwarereality.com/programming/code_generation.jsp</a>\r\n\r\nWriting Code is Stupid\r\n\r\n<a href=\"http://ianwij.com/weblog/articles/Writing_Code_Is_Stupid.aspx\">http://ianwij.com/weblog/articles/Writing_Code_Is_Stupid.aspx</a>\r\n\r\nCode generators help you deliver high-quality code quickly\r\n\r\n<a href=\"http://techrepublic.com.com/5102-6329-5035011.html\"> http://techrepublic.com.com/5102-6329-5035011.html</a>\r\n\r\nAre you missing out on code generation?\r\n\r\n<a href=\"http://www.devx.com/Java/Article/15511\">http://www.devx.com/Java/Article/15511</a>\r\n\r\nCode Generation Techniques for Java\r\n\r\n<a href=\"http://www.onjava.com/pub/a/onjava/2003/09/03/generation.html\">http://www.onjava.com/pub/a/onjava/2003/09/03/generation.html</a>\r\n\r\nBug Prevention with Java\r\n\r\n<a href=\"http://www.onjava.com/pub/a/onjava/2004/03/31/codeGen.html\">http://www.onjava.com/pub/a/onjava/2004/03/31/codeGen.html</a>\r\n<h2>Additional Resources</h2>\r\nFireStorm/DAO is a <a href=\"/products/firestorm/\">database access tool</a> based on the <a href=\"/data-access-object/\">Data Access Object</a> design pattern.\r\n<p class=\"additionalrl\"><a href=\"/products/firestorm/download/\">Download FireStorm/DAO</a></p>\r\nCodeFutures provides a free program to analyze the performance of your MySQL database.\r\n<p class=\"additionalrl\"><a href=\"/database-performance-analysis/\">Free MySQL Performance Analysis</a></p>\r\nRead about how <a href=\"/database-sharding/\">Database Sharding</a> helps many major companies to linearly scale their database applications.\r\n<p class=\"additionalrl\"><a href=\"/database-sharding-white-paper/\">Request Database Sharding White Paper</a></p>\r\ndbShards economically scales large, high transaction volume databases using <a href=\"/database-sharding/\">Database Sharding</a>.\r\n<p class=\"additionalrl\"><a href=\"/dbshards-product-presentation/\">View Introduction to dbShards Video</a></p>', 'Java Code Generation using FireStorm/DAO to generate DAOs and DTOs', '', 'draft', 'open', 'open', '', 'java-code-generation-firestormdao-generate-daos-dtos', '', '', '2015-05-22 14:07:32', '2015-05-22 20:07:32', '', '0', 'http://www.agildata.com/?page_id=188', '0', 'page', '', '0');
INSERT INTO `wpag_posts` VALUES('189', '5', '2015-05-22 14:07:24', '2015-05-22 20:07:24', '<h1>Java Code Generation using FireStorm/DAO</h1>\r\n<h2>Java Code Generation: Generate Java source code for accessing relational databases</h2>\r\nFireStorm/DAO make Java software developers more productive through java code generation of the Java source code for accessing relational databases.\r\n<h2>Java Code Generation Provides Reduced complexity</h2>\r\nFireStorm/DAO java code generation provide a one-to-one mapping between Java objects and database tables, which is simpler than using a complex mapping tier.\r\n<h2>Java Code Generation Provides Portable code</h2>\r\nThe java code generation by FireStorm/DAO is fully portable between stand-alone Java and Enterprise Java. The java code generation is also portable between Application Servers(ensuring no lock-in). The java code generation conforms to the widely accepted <a href=\"/data-access-object/\">Data Access Object</a> design pattern.\r\n<h2>Java Code Generation in Service-Oriented Architectures</h2>\r\nThe java code generation by FireStorm/SDO is designed for use in service-oriented architectures, based on the Service Data Object industry specification.\r\n<h2>Java Code Generation and Performance</h2>\r\nFireStorm/DAO are not limited to simple single-table operations but can also leverage the power of the relational database by generating Custom DAO classes that make use of complex SQL statements including table joins. FireStorm/DAO also provide java code generation support for exposing stored procedures as Data Access Objects or Service Data Objects.\r\n<h2>Java Code Generation Provides Productivity Gains</h2>\r\nJava code generation by definition is always going to be much faster than hand coding. For reference purposes, when using FireStorm/DAO with a reasonable large (over 20 tables) database, there is approximately a twenty-fold productivity increase. CodeFutures\' java code generation approach provides faster and cheaper application development, higher quality applications, more predictable and consistent results, faster software product development cycle times, faster time to market for commercial application development, reduced project costs, and reduced project risks. CodeFutures java code generation approach ensures that the focus of software developers is solving business problems.\r\n<h2>Java Code Generation and Quality</h2>\r\nJava code generation will always have fewer errors than hand written code, due to the elimination of typos, human error, and so on. FireStorm/DAO provide a consistent approach across multiple projects, multiple development teams, and against multiple types of database product. Automatic java code generation ensures that software developers are more likely to be focussed on the business requirements than the more mundane task of coding.\r\n<h2>Additional Reading on Java Code Generation</h2>\r\nCode Generation Network\r\n\r\n<a href=\"http://www.codegeneration.net/\"> http://www.codegeneration.net/</a>\r\n\r\nJavaWorld: Reflection versus Code Generation\r\n\r\n<a href=\"http://www.javaworld.com/javaworld/jw-11-2001/jw-1102-codegen.html\">http://www.javaworld.com/javaworld/jw-11-2001/jw-1102-codegen.html</a>\r\n\r\nApplying Code Generation Techniques to the J2EE Development\r\n\r\n<a href=\"http://www.informit.com/articles/article.asp?p=389718&amp;rl=1\">http://www.informit.com/articles/article.asp?p=389718</a>\r\n\r\nWikipedia on Code Generation\r\n\r\n<a href=\"http://en.wikipedia.org/wiki/Code_generation\">http://en.wikipedia.org/wiki/Code_generation</a>\r\n\r\nCode Generation: The fastest way to write software?\r\n\r\n<a href=\"http://www.softwarereality.com/programming/code_generation.jsp\">http://www.softwarereality.com/programming/code_generation.jsp</a>\r\n\r\nWriting Code is Stupid\r\n\r\n<a href=\"http://ianwij.com/weblog/articles/Writing_Code_Is_Stupid.aspx\">http://ianwij.com/weblog/articles/Writing_Code_Is_Stupid.aspx</a>\r\n\r\nCode generators help you deliver high-quality code quickly\r\n\r\n<a href=\"http://techrepublic.com.com/5102-6329-5035011.html\"> http://techrepublic.com.com/5102-6329-5035011.html</a>\r\n\r\nAre you missing out on code generation?\r\n\r\n<a href=\"http://www.devx.com/Java/Article/15511\">http://www.devx.com/Java/Article/15511</a>\r\n\r\nCode Generation Techniques for Java\r\n\r\n<a href=\"http://www.onjava.com/pub/a/onjava/2003/09/03/generation.html\">http://www.onjava.com/pub/a/onjava/2003/09/03/generation.html</a>\r\n\r\nBug Prevention with Java\r\n\r\n<a href=\"http://www.onjava.com/pub/a/onjava/2004/03/31/codeGen.html\">http://www.onjava.com/pub/a/onjava/2004/03/31/codeGen.html</a>\r\n<h2>Additional Resources</h2>\r\nFireStorm/DAO is a <a href=\"/products/firestorm/\">database access tool</a> based on the <a href=\"/data-access-object/\">Data Access Object</a> design pattern.\r\n<p class=\"additionalrl\"><a href=\"/products/firestorm/download/\">Download FireStorm/DAO</a></p>\r\nCodeFutures provides a free program to analyze the performance of your MySQL database.\r\n<p class=\"additionalrl\"><a href=\"/database-performance-analysis/\">Free MySQL Performance Analysis</a></p>\r\nRead about how <a href=\"/database-sharding/\">Database Sharding</a> helps many major companies to linearly scale their database applications.\r\n<p class=\"additionalrl\"><a href=\"/database-sharding-white-paper/\">Request Database Sharding White Paper</a></p>\r\ndbShards economically scales large, high transaction volume databases using <a href=\"/database-sharding/\">Database Sharding</a>.\r\n<p class=\"additionalrl\"><a href=\"/dbshards-product-presentation/\">View Introduction to dbShards Video</a></p>', 'Java Code Generation using FireStorm/DAO to generate DAOs and DTOs', '', 'inherit', 'open', 'open', '', '188-revision-v1', '', '', '2015-05-22 14:07:24', '2015-05-22 20:07:24', '', '188', 'http://www.agildata.com/188-revision-v1/', '0', 'revision', '', '0');
INSERT INTO `wpag_posts` VALUES('190', '5', '2015-05-22 14:08:48', '0000-00-00 00:00:00', '<h1>Java DAO</h1>\r\n<h2>The Java DAO Design Pattern</h2>\r\nThe Java <a href=\"/data-access-object/\">Data Access Object</a> (Java DAO) is an important component in business applications. Business applications almost always need access to data from relational or\r\nobject databases and the Java platform offers many techniques for accessingthis data. The oldest and most mature technique is to use the Java Database Connectivity (JDBC)API, which provides the capability to execute SQL queries against a databaseand then fetch the results, one column at a time. Although this API provideseverything a developer needs to access data and to persist application state,it is a cumbersome API to develop against - which makes a Java DAO code generator particularly useful.\r\n<p class=\"additionalrl\"><a href=\"/products/firestorm/download/\">Generate Java DAOs: Download FireStorm/DAO</a></p>\r\nJava 2 Enterprise Edition (J2EE) offers a newer persistence framework in theform of Entity Beans, a subset of the Enterprise JavaBean (EJB) framework. Although there have been many\r\nimprovements in the more recent EJB 2.0 specification, many developers are nowlooking to alternative persistence frameworks for their Data Access Objects, such as Java Persistence API (JPA) and Hibernate.\r\n<h2>The Benefits of Java DAO</h2>\r\nThe Data Access Object design pattern provides a technique for separating object persistence and data access logic from any particular persistencemechanism or API. There are clear benefits to this approach from anarchitectural perspective. The Java DAO approach provides flexibility to change anapplication\'s persistence mechanism over time without the need to re-engineerapplication logic that interacts with the Data Access Object tier. For example, there may beperformance benefits in changing an application\'s performance mechanism fromusing Entity Beans to using direct JDBC calls from a session bean, or even amove to an alternative persistence framework, such as Hibernate. Without a Java DAO tierin place, this sort of transition would require extensive re-engineering ofexisting code.\r\n\r\nThe Data Access Object design pattern also provides a simple, consistent API for data accessthat does not require knowledge of JDBC, EJB, Hibernate, or Spring interfaces. A typical Java DAOinterface is shown below.\r\n<pre class=\"prettyprint\">public interface CustomerDAO\r\n{\r\n\r\npublic void insert(Customer customer)\r\n\r\nthrows CustomerDAOException;\r\n  public void update(CustomerPK pk, Customer customer)\r\nthrows CustomerDAOException;\r\n\r\npublic void delete(CustomerPK pk)\r\n\r\nthrows CustomerDAOException;\r\n\r\npublic Customer[] findAll()\r\n\r\nthrows CustomerDAOException;\r\n\r\npublic Customer findByPrimaryKey(String email)\r\nthrows CustomerDAOException;\r\n\r\npublic Customer[] findByCompany(int companyId)\r\n\r\nthrows CustomerDAOException;\r\n}</pre>\r\nIt is important to note that Java DAO does not just apply to simple mappings of one object to one relational table,\r\nbut also allows complex queries to be performed and allows for stored procedures and database views to be mappedinto Java data structures.\r\n<h2>Minimizing the Impact of Moving to Data Access Objects</h2>\r\nCodeFutures\' objective is to minimize the importance of the main argumentagainst using Data Access Objects: the fact that it requires a significant amount ofrepetitive source code to be produced for no immediate advantage over usingJDBC or EJB directly. For many developers, this disadvantage is goodenough reason to ignore the long-term benefits of using a framework-neutralAPI, especially where there are strict project deadlines. Without the codegeneration advantages of FireStorm/DAO, it is not easy to justify to a projectmanager or project sponsor the time and cost of manually writing DAO code,regardless of any future benefits they may see.\r\n<h2>Data Access Object Code Generation</h2>\r\nCodeFutures\' solution to the manual coding problem is to automate theproduction of a Data Access Object tier, as well as automating the actual implementation logicfor whichever persistence framework is deemed appropriate for an application.This approach is easy to adopt because almost all databases use a standardlanguage for defining their structure (SQL).\r\n\r\n&nbsp;\r\n<h2>Additional Resources</h2>\r\nFireStorm/DAO is a <a href=\"/products/firestorm/\">database access tool</a> based on the <a href=\"/data-access-object/\">Data Access Object</a> design pattern.\r\n<p class=\"additionalrl\"><a href=\"/products/firestorm/download/\">Download FireStorm/DAO</a></p>\r\nCodeFutures provides a free program to analyze the performance of your MySQL database.\r\n<p class=\"additionalrl\"><a href=\"/database-performance-analysis/\">Free MySQL Performance Analysis</a></p>\r\nRead about how <a href=\"/database-sharding/\">Database Sharding</a> helps many major companies to linearly scale their database applications.\r\n<p class=\"additionalrl\"><a href=\"/database-sharding-white-paper/\">Request Database Sharding White Paper</a></p>\r\ndbShards economically scales large, high transaction volume databases using <a href=\"/database-sharding/\">Database Sharding</a>.\r\n<p class=\"additionalrl\"><a href=\"/dbshards-product-presentation/\">View Introduction to dbShards Video</a></p>', 'Java DAO', '', 'draft', 'open', 'open', '', '', '', '', '2015-05-22 14:08:48', '2015-05-22 20:08:48', '', '0', 'http://www.agildata.com/?page_id=190', '0', 'page', '', '0');
INSERT INTO `wpag_posts` VALUES('191', '5', '2015-05-22 14:08:41', '2015-05-22 20:08:41', '<h1>Java DAO</h1>\r\n<h2>The Java DAO Design Pattern</h2>\r\nThe Java <a href=\"/data-access-object/\">Data Access Object</a> (Java DAO) is an important component in business applications. Business applications almost always need access to data from relational or\r\nobject databases and the Java platform offers many techniques for accessingthis data. The oldest and most mature technique is to use the Java Database Connectivity (JDBC)API, which provides the capability to execute SQL queries against a databaseand then fetch the results, one column at a time. Although this API provideseverything a developer needs to access data and to persist application state,it is a cumbersome API to develop against - which makes a Java DAO code generator particularly useful.\r\n<p class=\"additionalrl\"><a href=\"/products/firestorm/download/\">Generate Java DAOs: Download FireStorm/DAO</a></p>\r\nJava 2 Enterprise Edition (J2EE) offers a newer persistence framework in theform of Entity Beans, a subset of the Enterprise JavaBean (EJB) framework. Although there have been many\r\nimprovements in the more recent EJB 2.0 specification, many developers are nowlooking to alternative persistence frameworks for their Data Access Objects, such as Java Persistence API (JPA) and Hibernate.\r\n<h2>The Benefits of Java DAO</h2>\r\nThe Data Access Object design pattern provides a technique for separating object persistence and data access logic from any particular persistencemechanism or API. There are clear benefits to this approach from anarchitectural perspective. The Java DAO approach provides flexibility to change anapplication\'s persistence mechanism over time without the need to re-engineerapplication logic that interacts with the Data Access Object tier. For example, there may beperformance benefits in changing an application\'s performance mechanism fromusing Entity Beans to using direct JDBC calls from a session bean, or even amove to an alternative persistence framework, such as Hibernate. Without a Java DAO tierin place, this sort of transition would require extensive re-engineering ofexisting code.\r\n\r\nThe Data Access Object design pattern also provides a simple, consistent API for data accessthat does not require knowledge of JDBC, EJB, Hibernate, or Spring interfaces. A typical Java DAOinterface is shown below.\r\n<pre class=\"prettyprint\">public interface CustomerDAO\r\n{\r\n\r\npublic void insert(Customer customer)\r\n\r\nthrows CustomerDAOException;\r\n  public void update(CustomerPK pk, Customer customer)\r\nthrows CustomerDAOException;\r\n\r\npublic void delete(CustomerPK pk)\r\n\r\nthrows CustomerDAOException;\r\n\r\npublic Customer[] findAll()\r\n\r\nthrows CustomerDAOException;\r\n\r\npublic Customer findByPrimaryKey(String email)\r\nthrows CustomerDAOException;\r\n\r\npublic Customer[] findByCompany(int companyId)\r\n\r\nthrows CustomerDAOException;\r\n}</pre>\r\nIt is important to note that Java DAO does not just apply to simple mappings of one object to one relational table,\r\nbut also allows complex queries to be performed and allows for stored procedures and database views to be mappedinto Java data structures.\r\n<h2>Minimizing the Impact of Moving to Data Access Objects</h2>\r\nCodeFutures\' objective is to minimize the importance of the main argumentagainst using Data Access Objects: the fact that it requires a significant amount ofrepetitive source code to be produced for no immediate advantage over usingJDBC or EJB directly. For many developers, this disadvantage is goodenough reason to ignore the long-term benefits of using a framework-neutralAPI, especially where there are strict project deadlines. Without the codegeneration advantages of FireStorm/DAO, it is not easy to justify to a projectmanager or project sponsor the time and cost of manually writing DAO code,regardless of any future benefits they may see.\r\n<h2>Data Access Object Code Generation</h2>\r\nCodeFutures\' solution to the manual coding problem is to automate theproduction of a Data Access Object tier, as well as automating the actual implementation logicfor whichever persistence framework is deemed appropriate for an application.This approach is easy to adopt because almost all databases use a standardlanguage for defining their structure (SQL).\r\n\r\n&nbsp;\r\n<h2>Additional Resources</h2>\r\nFireStorm/DAO is a <a href=\"/products/firestorm/\">database access tool</a> based on the <a href=\"/data-access-object/\">Data Access Object</a> design pattern.\r\n<p class=\"additionalrl\"><a href=\"/products/firestorm/download/\">Download FireStorm/DAO</a></p>\r\nCodeFutures provides a free program to analyze the performance of your MySQL database.\r\n<p class=\"additionalrl\"><a href=\"/database-performance-analysis/\">Free MySQL Performance Analysis</a></p>\r\nRead about how <a href=\"/database-sharding/\">Database Sharding</a> helps many major companies to linearly scale their database applications.\r\n<p class=\"additionalrl\"><a href=\"/database-sharding-white-paper/\">Request Database Sharding White Paper</a></p>\r\ndbShards economically scales large, high transaction volume databases using <a href=\"/database-sharding/\">Database Sharding</a>.\r\n<p class=\"additionalrl\"><a href=\"/dbshards-product-presentation/\">View Introduction to dbShards Video</a></p>', 'Java DAO', '', 'inherit', 'open', 'open', '', '190-revision-v1', '', '', '2015-05-22 14:08:41', '2015-05-22 20:08:41', '', '190', 'http://www.agildata.com/190-revision-v1/', '0', 'revision', '', '0');
INSERT INTO `wpag_posts` VALUES('192', '5', '2015-05-22 14:10:14', '0000-00-00 00:00:00', '<h1>JAXP Code Samples</h1>\r\n<h2>Parse an XML document into a DOM model</h2>\r\nThe quickest way to get started with JAXP is to load XML documents in to a DOM model. This is fine for\r\nconfiguration files and small documents but should be avoided for large documents as it doesn\'t scale\r\nwell due to the memory overhead associated with DOM models.\r\n<table class=\"code\" width=\"100%\">\r\n<tbody>\r\n<tr>\r\n<td>\r\n<pre><span class=\"javaIdentifier\">DocumentBuilderFactory</span> <span class=\"javaIdentifier\">factory</span> = <span class=\"javaIdentifier\">DocumentBuilderFactory</span>.<span class=\"javaIdentifier\">newInstance</span>();\r\n<span class=\"javaIdentifier\">factory</span>.<span class=\"javaIdentifier\">setValidating</span>(<span class=\"javaLiteral\">true</span>);\r\n<span class=\"javaIdentifier\">factory</span>.<span class=\"javaIdentifier\">setNamespaceAware</span>(<span class=\"javaLiteral\">true</span>);\r\n<span class=\"javaIdentifier\">DocumentBuilder</span> <span class=\"javaIdentifier\">builder</span> = <span class=\"javaIdentifier\">factory</span>.<span class=\"javaIdentifier\">newDocumentBuilder</span>();\r\n<span class=\"javaIdentifier\">Document</span> <span class=\"javaIdentifier\">document</span> = <span class=\"javaIdentifier\">builder</span>.<span class=\"javaIdentifier\">parse</span>( <span class=\"javaIdentifier\">inputStream</span> );</pre>\r\n</td>\r\n</tr>\r\n</tbody>\r\n</table>\r\n<h2>Implementing a SAX parser</h2>\r\nA much smarter way to process XML documents is to use a SAX parser. This is a streaming approach\r\nwhere data can be processed one element at a time without the need to load the entire XML document\r\ninto memory first.\r\n\r\nThis code snippet demonstrates how to use a SAX parser with JAXP.\r\n<table class=\"code\" width=\"100%\">\r\n<tbody>\r\n<tr>\r\n<td>\r\n<pre><span class=\"javaKeyword\">public</span> <span class=\"javaKeyword\">class</span> <span class=\"javaIdentifier\">MyParser</span> {\r\n    <span class=\"javaKeyword\">public</span> <span class=\"javaKeyword\">void</span> <span class=\"javaIdentifier\">parse</span>(<span class=\"javaIdentifier\">InputStream</span> <span class=\"javaIdentifier\">is</span>) <span class=\"javaKeyword\">throws</span> <span class=\"javaIdentifier\">ParserConfigurationException</span>, <span class=\"javaIdentifier\">SAXException</span>, <span class=\"javaIdentifier\">IOException</span>\r\n    {\r\n        <span class=\"javaIdentifier\">XMLHandler</span> <span class=\"javaIdentifier\">handler</span> = <span class=\"javaKeyword\">new</span> <span class=\"javaIdentifier\">XMLHandler</span>();\r\n        <span class=\"javaIdentifier\">SAXParserFactory</span> <span class=\"javaIdentifier\">factory</span> = <span class=\"javaIdentifier\">SAXParserFactory</span>.<span class=\"javaIdentifier\">newInstance</span>();\r\n        <span class=\"javaIdentifier\">factory</span>.<span class=\"javaIdentifier\">setNamespaceAware</span>( <span class=\"javaLiteral\">true</span> );\r\n        <span class=\"javaIdentifier\">SAXParser</span> <span class=\"javaIdentifier\">p</span> = <span class=\"javaIdentifier\">factory</span>.<span class=\"javaIdentifier\">newSAXParser</span>();\r\n        <span class=\"javaIdentifier\">p</span>.<span class=\"javaIdentifier\">parse</span>( <span class=\"javaIdentifier\">is</span>, <span class=\"javaIdentifier\">handler</span> );\r\n    }\r\n\r\n    <span class=\"javaKeyword\">class</span> <span class=\"javaIdentifier\">XMLHandler</span> <span class=\"javaKeyword\">extends</span> <span class=\"javaIdentifier\">DefaultHandler</span> {\r\n        <span class=\"javaComment\">// ... implement this ...\r\n</span>    }\r\n}</pre>\r\n</td>\r\n</tr>\r\n</tbody>\r\n</table>', 'JAXP Code Samples', '', 'draft', 'open', 'open', '', '', '', '', '2015-05-22 14:10:14', '2015-05-22 20:10:14', '', '0', 'http://www.agildata.com/?page_id=192', '0', 'page', '', '0');
INSERT INTO `wpag_posts` VALUES('193', '5', '2015-05-22 14:10:06', '2015-05-22 20:10:06', '<h1>JAXP Code Samples</h1>\r\n<h2>Parse an XML document into a DOM model</h2>\r\nThe quickest way to get started with JAXP is to load XML documents in to a DOM model. This is fine for\r\nconfiguration files and small documents but should be avoided for large documents as it doesn\'t scale\r\nwell due to the memory overhead associated with DOM models.\r\n<table class=\"code\" width=\"100%\">\r\n<tbody>\r\n<tr>\r\n<td>\r\n<pre><span class=\"javaIdentifier\">DocumentBuilderFactory</span> <span class=\"javaIdentifier\">factory</span> = <span class=\"javaIdentifier\">DocumentBuilderFactory</span>.<span class=\"javaIdentifier\">newInstance</span>();\r\n<span class=\"javaIdentifier\">factory</span>.<span class=\"javaIdentifier\">setValidating</span>(<span class=\"javaLiteral\">true</span>);\r\n<span class=\"javaIdentifier\">factory</span>.<span class=\"javaIdentifier\">setNamespaceAware</span>(<span class=\"javaLiteral\">true</span>);\r\n<span class=\"javaIdentifier\">DocumentBuilder</span> <span class=\"javaIdentifier\">builder</span> = <span class=\"javaIdentifier\">factory</span>.<span class=\"javaIdentifier\">newDocumentBuilder</span>();\r\n<span class=\"javaIdentifier\">Document</span> <span class=\"javaIdentifier\">document</span> = <span class=\"javaIdentifier\">builder</span>.<span class=\"javaIdentifier\">parse</span>( <span class=\"javaIdentifier\">inputStream</span> );</pre>\r\n</td>\r\n</tr>\r\n</tbody>\r\n</table>\r\n<h2>Implementing a SAX parser</h2>\r\nA much smarter way to process XML documents is to use a SAX parser. This is a streaming approach\r\nwhere data can be processed one element at a time without the need to load the entire XML document\r\ninto memory first.\r\n\r\nThis code snippet demonstrates how to use a SAX parser with JAXP.\r\n<table class=\"code\" width=\"100%\">\r\n<tbody>\r\n<tr>\r\n<td>\r\n<pre><span class=\"javaKeyword\">public</span> <span class=\"javaKeyword\">class</span> <span class=\"javaIdentifier\">MyParser</span> {\r\n    <span class=\"javaKeyword\">public</span> <span class=\"javaKeyword\">void</span> <span class=\"javaIdentifier\">parse</span>(<span class=\"javaIdentifier\">InputStream</span> <span class=\"javaIdentifier\">is</span>) <span class=\"javaKeyword\">throws</span> <span class=\"javaIdentifier\">ParserConfigurationException</span>, <span class=\"javaIdentifier\">SAXException</span>, <span class=\"javaIdentifier\">IOException</span>\r\n    {\r\n        <span class=\"javaIdentifier\">XMLHandler</span> <span class=\"javaIdentifier\">handler</span> = <span class=\"javaKeyword\">new</span> <span class=\"javaIdentifier\">XMLHandler</span>();\r\n        <span class=\"javaIdentifier\">SAXParserFactory</span> <span class=\"javaIdentifier\">factory</span> = <span class=\"javaIdentifier\">SAXParserFactory</span>.<span class=\"javaIdentifier\">newInstance</span>();\r\n        <span class=\"javaIdentifier\">factory</span>.<span class=\"javaIdentifier\">setNamespaceAware</span>( <span class=\"javaLiteral\">true</span> );\r\n        <span class=\"javaIdentifier\">SAXParser</span> <span class=\"javaIdentifier\">p</span> = <span class=\"javaIdentifier\">factory</span>.<span class=\"javaIdentifier\">newSAXParser</span>();\r\n        <span class=\"javaIdentifier\">p</span>.<span class=\"javaIdentifier\">parse</span>( <span class=\"javaIdentifier\">is</span>, <span class=\"javaIdentifier\">handler</span> );\r\n    }\r\n\r\n    <span class=\"javaKeyword\">class</span> <span class=\"javaIdentifier\">XMLHandler</span> <span class=\"javaKeyword\">extends</span> <span class=\"javaIdentifier\">DefaultHandler</span> {\r\n        <span class=\"javaComment\">// ... implement this ...\r\n</span>    }\r\n}</pre>\r\n</td>\r\n</tr>\r\n</tbody>\r\n</table>', 'JAXP Code Samples', '', 'inherit', 'open', 'open', '', '192-revision-v1', '', '', '2015-05-22 14:10:06', '2015-05-22 20:10:06', '', '192', 'http://www.agildata.com/192-revision-v1/', '0', 'revision', '', '0');
INSERT INTO `wpag_posts` VALUES('194', '5', '2015-05-22 14:11:31', '0000-00-00 00:00:00', '<h1>JDBC DAO with FireStorm/DAO</h1>\r\n<img src=\"/img/CF_FS_BOX_02_AR_SM.gif\" alt=\"\" />\r\n\r\nFireStorm/DAO imports existing database schemas (from a SQL script or from a live JDBC connection) and generates a complete JDBC DAO persistence tier.\r\n\r\nFireStorm/DAO Evaluation is free.\r\n<h2>FireStorm/DAO Features</h2>\r\n<ul>\r\n	<li>Import database schemas from a JDBC connection</li>\r\n	<li>Import database schemas from SQL/DDL scripts</li>\r\n	<li>Round-trip engineering (import modifications made to a schema)</li>\r\n	<li>Create new schemas using a simple user interface</li>\r\n	<li>Imported schemas can be modified using a simple user interface</li>\r\n	<li>Generates Data Access Object (DAO) interfaces</li>\r\n	<li>Generates Data Access Object (DAO) exception classes</li>\r\n	<li>Generates Data Transfer Object (DTO) classes</li>\r\n	<li>Generates Data Access Object (DAO) classes for JDBC</li>\r\n	<li>Generates Session Bean facade for each DAO interface</li>\r\n	<li>Dynamic Update Method</li>\r\n	<li>Interactive SQL Tool</li>\r\n	<li>Database Schema Migration</li>\r\n	<li>Optimized JDBC Code</li>\r\n	<li>Import Generation for Partial Schema</li>\r\n	<li>Generates ANT build scripts</li>\r\n</ul>\r\n<h2>Supported Databases</h2>\r\nAll editions of FireStorm/DAO support the following database platforms:\r\n<ul>\r\n	<li>Oracle 8i/9i</li>\r\n	<li>Sybase</li>\r\n	<li>IBM DB2</li>\r\n	<li>MySQL</li>\r\n	<li>IBM Cloudscape</li>\r\n	<li>Microsoft SQL Server</li>\r\n	<li>Informix</li>\r\n	<li>Apache Derby</li>\r\n	<li>Microsoft Access</li>\r\n	<li>InnoDB</li>\r\n	<li>PostgreSQL</li>\r\n	<li>Any JDBC-compliant database</li>\r\n</ul>\r\n<h2>Supported Operating Systems</h2>\r\nAll editions of FireStorm/DAO run on the following operating systems:\r\n<ul>\r\n	<li>Microsoft Windows 2000, Windows NT4, Windows XP, Windows Vista</li>\r\n	<li>UNIX</li>\r\n	<li>Linux</li>\r\n	<li>Mac OS X</li>\r\n</ul>\r\n<p class=\"additionalrl\"><a href=\"/products/firestorm/download/\">Generate JDBC DAOs: Download FireStorm/DAO</a></p>', 'JDBC DAO', '', 'draft', 'open', 'open', '', '', '', '', '2015-05-22 14:11:31', '2015-05-22 20:11:31', '', '0', 'http://www.agildata.com/?page_id=194', '0', 'page', '', '0');
INSERT INTO `wpag_posts` VALUES('195', '5', '2015-05-22 14:11:21', '2015-05-22 20:11:21', '<h1>JDBC DAO with FireStorm/DAO</h1>\r\n<img src=\"/img/CF_FS_BOX_02_AR_SM.gif\" alt=\"\" />\r\n\r\nFireStorm/DAO imports existing database schemas (from a SQL script or from a live JDBC connection) and generates a complete JDBC DAO persistence tier.\r\n\r\nFireStorm/DAO Evaluation is free.\r\n<h2>FireStorm/DAO Features</h2>\r\n<ul>\r\n	<li>Import database schemas from a JDBC connection</li>\r\n	<li>Import database schemas from SQL/DDL scripts</li>\r\n	<li>Round-trip engineering (import modifications made to a schema)</li>\r\n	<li>Create new schemas using a simple user interface</li>\r\n	<li>Imported schemas can be modified using a simple user interface</li>\r\n	<li>Generates Data Access Object (DAO) interfaces</li>\r\n	<li>Generates Data Access Object (DAO) exception classes</li>\r\n	<li>Generates Data Transfer Object (DTO) classes</li>\r\n	<li>Generates Data Access Object (DAO) classes for JDBC</li>\r\n	<li>Generates Session Bean facade for each DAO interface</li>\r\n	<li>Dynamic Update Method</li>\r\n	<li>Interactive SQL Tool</li>\r\n	<li>Database Schema Migration</li>\r\n	<li>Optimized JDBC Code</li>\r\n	<li>Import Generation for Partial Schema</li>\r\n	<li>Generates ANT build scripts</li>\r\n</ul>\r\n<h2>Supported Databases</h2>\r\nAll editions of FireStorm/DAO support the following database platforms:\r\n<ul>\r\n	<li>Oracle 8i/9i</li>\r\n	<li>Sybase</li>\r\n	<li>IBM DB2</li>\r\n	<li>MySQL</li>\r\n	<li>IBM Cloudscape</li>\r\n	<li>Microsoft SQL Server</li>\r\n	<li>Informix</li>\r\n	<li>Apache Derby</li>\r\n	<li>Microsoft Access</li>\r\n	<li>InnoDB</li>\r\n	<li>PostgreSQL</li>\r\n	<li>Any JDBC-compliant database</li>\r\n</ul>\r\n<h2>Supported Operating Systems</h2>\r\nAll editions of FireStorm/DAO run on the following operating systems:\r\n<ul>\r\n	<li>Microsoft Windows 2000, Windows NT4, Windows XP, Windows Vista</li>\r\n	<li>UNIX</li>\r\n	<li>Linux</li>\r\n	<li>Mac OS X</li>\r\n</ul>\r\n<p class=\"additionalrl\"><a href=\"/products/firestorm/download/\">Generate JDBC DAOs: Download FireStorm/DAO</a></p>', 'JDBC DAO', '', 'inherit', 'open', 'open', '', '194-revision-v1', '', '', '2015-05-22 14:11:21', '2015-05-22 20:11:21', '', '194', 'http://www.agildata.com/194-revision-v1/', '0', 'revision', '', '0');
INSERT INTO `wpag_posts` VALUES('196', '5', '2015-05-22 14:12:31', '0000-00-00 00:00:00', '<h1>JSP Code Generator</h1>\r\n<h2>Generate Java source code for accessing relational databases through JSPs</h2>\r\nFireStorm/DAO Data Access and JSP Code Generator makes Java software developers more productive though DAO and JSP code generation for accessing relational databases.\r\n<h2>Reduced complexity using a JSP Code Generator</h2>\r\nFireStorm/DAO\'s generated Java provides a one-to-one mapping between Java objects and database tables, which is simpler than using a complex mapping tier.\r\n<h2>JSP Code Generator for Portable code</h2>\r\nThe FireStorm/DAO generated Java is fully portable between stand-alone Java and Enterprise Java. The code is also portable between Application Servers(ensuring no lock-in). The generated Java conforms to the widely accepted Data Access Object design pattern. FireStorm/DAO does not require proprietary runtime libraries.\r\n<h2>Service-Oriented</h2>\r\nThe Java generated by FireStorm/DAO is designed for use in service-oriented architectures. The Data Access Object (DAO) classes are stateless services that can easily be exposed as transactional Session Beans and are also suitable for use as part of a Web Services architecture.\r\n<h2>DAO and JSP Code Generator : Performance</h2>\r\nFireStorm/DAO Data Access and JSP Code Generator is not limited to simple single-table operations but can also leverage the power of the relational database by generating Custom DAO classes that make use of complex SQL statements including table joins. FireStorm/DAO also provides support for exposing stored procedures as Data Access Objects.\r\n<h2>DAO and JSP Code Generator: Productivity Gains</h2>\r\nGenerating Java by definition is always going to be much faster than hand coding. For reference purposes, when using FireStorm/DAO Data Access and JSP Code Generator with a reasonable large (over 20 tables) database, there is approximately a twenty-fold productivity increase.\r\n<h2>Quality</h2>\r\nGenerated Java will always have fewer errors than hand written code, due to the elimination of typos, human error, and so on. FireStorm/DAO Data Access and JSP Code Generator provides a consistent approach across multiple projects, multiple development teams, and against multiple types of database product. Generating Java ensures that software developers are more likely to be focussed on the business requirements than the more mundane task of coding.\r\n<h2>Additional Resources</h2>\r\nFireStorm/DAO is a <a href=\"/products/firestorm/\">database access tool</a> based on the <a href=\"/data-access-object/\">Data Access Object</a> design pattern.\r\n<p class=\"additionalrl\"><a href=\"/products/firestorm/download/\">Download FireStorm/DAO</a></p>\r\nCodeFutures provides a free program to analyze the performance of your MySQL database.\r\n<p class=\"additionalrl\"><a href=\"/database-performance-analysis/\">Free MySQL Performance Analysis</a></p>\r\nRead about how <a href=\"/database-sharding/\">Database Sharding</a> helps many major companies to linearly scale their database applications.\r\n<p class=\"additionalrl\"><a href=\"/database-sharding-white-paper/\">Request Database Sharding White Paper</a></p>\r\ndbShards economically scales large, high transaction volume databases using <a href=\"/database-sharding/\">Database Sharding</a>.\r\n<p class=\"additionalrl\"><a href=\"/dbshards-product-presentation/\">View Introduction to dbShards Video</a></p>', 'JSP Code Generator', '', 'draft', 'open', 'open', '', '', '', '', '2015-05-22 14:12:31', '2015-05-22 20:12:31', '', '0', 'http://www.agildata.com/?page_id=196', '0', 'page', '', '0');
INSERT INTO `wpag_posts` VALUES('197', '5', '2015-05-22 14:12:24', '2015-05-22 20:12:24', '<h1>JSP Code Generator</h1>\r\n<h2>Generate Java source code for accessing relational databases through JSPs</h2>\r\nFireStorm/DAO Data Access and JSP Code Generator makes Java software developers more productive though DAO and JSP code generation for accessing relational databases.\r\n<h2>Reduced complexity using a JSP Code Generator</h2>\r\nFireStorm/DAO\'s generated Java provides a one-to-one mapping between Java objects and database tables, which is simpler than using a complex mapping tier.\r\n<h2>JSP Code Generator for Portable code</h2>\r\nThe FireStorm/DAO generated Java is fully portable between stand-alone Java and Enterprise Java. The code is also portable between Application Servers(ensuring no lock-in). The generated Java conforms to the widely accepted Data Access Object design pattern. FireStorm/DAO does not require proprietary runtime libraries.\r\n<h2>Service-Oriented</h2>\r\nThe Java generated by FireStorm/DAO is designed for use in service-oriented architectures. The Data Access Object (DAO) classes are stateless services that can easily be exposed as transactional Session Beans and are also suitable for use as part of a Web Services architecture.\r\n<h2>DAO and JSP Code Generator : Performance</h2>\r\nFireStorm/DAO Data Access and JSP Code Generator is not limited to simple single-table operations but can also leverage the power of the relational database by generating Custom DAO classes that make use of complex SQL statements including table joins. FireStorm/DAO also provides support for exposing stored procedures as Data Access Objects.\r\n<h2>DAO and JSP Code Generator: Productivity Gains</h2>\r\nGenerating Java by definition is always going to be much faster than hand coding. For reference purposes, when using FireStorm/DAO Data Access and JSP Code Generator with a reasonable large (over 20 tables) database, there is approximately a twenty-fold productivity increase.\r\n<h2>Quality</h2>\r\nGenerated Java will always have fewer errors than hand written code, due to the elimination of typos, human error, and so on. FireStorm/DAO Data Access and JSP Code Generator provides a consistent approach across multiple projects, multiple development teams, and against multiple types of database product. Generating Java ensures that software developers are more likely to be focussed on the business requirements than the more mundane task of coding.\r\n<h2>Additional Resources</h2>\r\nFireStorm/DAO is a <a href=\"/products/firestorm/\">database access tool</a> based on the <a href=\"/data-access-object/\">Data Access Object</a> design pattern.\r\n<p class=\"additionalrl\"><a href=\"/products/firestorm/download/\">Download FireStorm/DAO</a></p>\r\nCodeFutures provides a free program to analyze the performance of your MySQL database.\r\n<p class=\"additionalrl\"><a href=\"/database-performance-analysis/\">Free MySQL Performance Analysis</a></p>\r\nRead about how <a href=\"/database-sharding/\">Database Sharding</a> helps many major companies to linearly scale their database applications.\r\n<p class=\"additionalrl\"><a href=\"/database-sharding-white-paper/\">Request Database Sharding White Paper</a></p>\r\ndbShards economically scales large, high transaction volume databases using <a href=\"/database-sharding/\">Database Sharding</a>.\r\n<p class=\"additionalrl\"><a href=\"/dbshards-product-presentation/\">View Introduction to dbShards Video</a></p>', 'JSP Code Generator', '', 'inherit', 'open', 'open', '', '196-revision-v1', '', '', '2015-05-22 14:12:24', '2015-05-22 20:12:24', '', '196', 'http://www.agildata.com/196-revision-v1/', '0', 'revision', '', '0');
INSERT INTO `wpag_posts` VALUES('198', '5', '2015-05-22 14:14:23', '0000-00-00 00:00:00', '<h2>Dan Lynn</h2>\r\n<strong>Chief Executive Officer\r\n</strong>\r\n\r\n<a href=\"http://codefutures.com/wp-content/uploads/2015/01/Dan-Lynn-CodeFutures1-Low-Res.jpg\"><img class=\"alignleft wp-image-14696 size-medium\" src=\"http://codefutures.com/wp-content/uploads/2015/01/Dan-Lynn-CodeFutures1-Low-Res-300x199.jpg\" alt=\"Dan Lynn CodeFutures1 Low Res\" width=\"300\" height=\"199\" /></a>Dan Lynn, CEO of CodeFutures Corporation, is an entrepreneur, technologist, teacher and technical leader with 14 years of experience in the software industry. He joins CodeFutures to advance the agile Big Data strategies in development around AgilData, CodeFutures’ new agile Big Data platform designed to remove the complexity and limitations of current data management approaches.\r\n\r\nDan previously was the founding CTO at FullContact Inc., a contact management startup focusing on fuzzy match and record linkage problems. Dan is an accomplished speaker and is actively involved in the Colorado software community, serving as an organizer for the Denver Storm users group and the Boulder/Denver Big Data meet-up group. In addition, he is also a Techstars alumnus - Boulder 2011, with FullContact.\r\n<h2>Cory Isaacson</h2>\r\n<strong>Founder / Chairman</strong>\r\n\r\n<a href=\"http://codefutures.com/wp-content/uploads/2015/01/Cory_Isaacson-w-bg.jpg\"><img class=\"alignleft wp-image-14710 size-medium\" src=\"http://codefutures.com/wp-content/uploads/2015/01/Cory_Isaacson-w-bg-300x199.jpg\" alt=\"Cory_Isaacson w bg\" width=\"300\" height=\"199\" /></a>Cory Isaacson is the Founder and Chairman of CodeFutures Corporation and served at CEO / CTO from 2007 until 2015 where he developed both AgilData and dbShards.  Cory is now serving as CTO of Risk Management Solutions. As CTO, he drives the delivery of the advanced, cloud-based RMS(one)® platform, leading the industry with innovative approaches to software management and advanced technology for the complex and unique challenges of risk modeling. Cory has founded or held executive positions in several software-related businesses, and authored the books <a href=\"http://www.amazon.com/Software-Pipelines-SOA-Multi-Core-Processing/dp/0137137974/ref=sr_1_1?ie=UTF8&amp;qid=1421705861&amp;sr=8-1&amp;keywords=Software+Pipelines+and+SOA+cory+isaacson\" target=\"_blank\"><em>Software Pipelines and SOA</em></a> and <a href=\"http://codefutures.com/big-data-scalability-series/\" target=\"_blank\"><em>Understanding Big Data Scalability.</em></a>\r\n\r\nHe has more than 20 years of experience with advanced software architectures, and has worked with many of the world’s brightest innovators in the field of high-performance computing. Cory has authored numerous articles and spoken at hundreds of public events, helping organizations address the real-world challenges of Big Data performance and scalability, and effectively applying emerging technologies to fields including social networking, mobile applications, gaming, and complex computing systems. He holds a BA from the University of California, Santa Barbara.\r\n<h2>Andy Grove</h2>\r\n<strong>Co-Founder / Chief Architect</strong>\r\n\r\n<a href=\"http://codefutures.com/wp-content/uploads/2015/01/Andy-Grove-CodeFutures2-Low-Res.jpg\"><img class=\"alignleft wp-image-14702 size-medium\" src=\"http://codefutures.com/wp-content/uploads/2015/01/Andy-Grove-CodeFutures2-Low-Res-300x199.jpg\" alt=\"Andy Grove CodeFutures2 Low Res\" width=\"300\" height=\"199\" /></a>Andy is co-founder and Chief Architect of CodeFutures. He has an extensive background in software, gained over 25 years working in banking, media, and technology. Andy was previously co-founder and CTO of Orbware Technologies, which was acquired by Cape Clear Software (now WorkDay).\r\n\r\n&nbsp;\r\n<h2></h2>\r\n<h2>Gwen Buehler</h2>\r\n<strong>Marketing Director\r\n</strong>\r\n\r\n<a href=\"http://codefutures.com/wp-content/uploads/2015/01/Gwen-Buehler-CodeFutures1-Low-Res.jpg\"><img class=\"alignleft wp-image-14703 size-medium\" src=\"http://codefutures.com/wp-content/uploads/2015/01/Gwen-Buehler-CodeFutures1-Low-Res-300x199.jpg\" alt=\"Gwen Buehler CodeFutures1 Low Res\" width=\"300\" height=\"199\" /></a>Gwen Buehler has worked in both marketing and graphic design for over 15 years and has been a marketing director for both national and regional companies. Her marketing experience includes creating, implementing and managing effective marketing plans using traditional, social and customized technological solutions. Gwen not only has experience marketing for the technology industry, but has provided marketing development for: wi-fi and event planning firms, financial institutions, real estate, mortgage, fitness and dance studios, trade industries, personal development, restaurants and social media companies.', 'Management Team, CodeFutures Management Executive Profiles', '', 'draft', 'open', 'open', '', 'codefutures-management-team', '', '', '2015-05-22 14:14:23', '2015-05-22 20:14:23', '', '0', 'http://www.agildata.com/?page_id=198', '0', 'page', '', '0');
INSERT INTO `wpag_posts` VALUES('199', '5', '2015-05-22 14:14:16', '2015-05-22 20:14:16', '<h2>Dan Lynn</h2>\r\n<strong>Chief Executive Officer\r\n</strong>\r\n\r\n<a href=\"http://codefutures.com/wp-content/uploads/2015/01/Dan-Lynn-CodeFutures1-Low-Res.jpg\"><img class=\"alignleft wp-image-14696 size-medium\" src=\"http://codefutures.com/wp-content/uploads/2015/01/Dan-Lynn-CodeFutures1-Low-Res-300x199.jpg\" alt=\"Dan Lynn CodeFutures1 Low Res\" width=\"300\" height=\"199\" /></a>Dan Lynn, CEO of CodeFutures Corporation, is an entrepreneur, technologist, teacher and technical leader with 14 years of experience in the software industry. He joins CodeFutures to advance the agile Big Data strategies in development around AgilData, CodeFutures’ new agile Big Data platform designed to remove the complexity and limitations of current data management approaches.\r\n\r\nDan previously was the founding CTO at FullContact Inc., a contact management startup focusing on fuzzy match and record linkage problems. Dan is an accomplished speaker and is actively involved in the Colorado software community, serving as an organizer for the Denver Storm users group and the Boulder/Denver Big Data meet-up group. In addition, he is also a Techstars alumnus - Boulder 2011, with FullContact.\r\n<h2>Cory Isaacson</h2>\r\n<strong>Founder / Chairman</strong>\r\n\r\n<a href=\"http://codefutures.com/wp-content/uploads/2015/01/Cory_Isaacson-w-bg.jpg\"><img class=\"alignleft wp-image-14710 size-medium\" src=\"http://codefutures.com/wp-content/uploads/2015/01/Cory_Isaacson-w-bg-300x199.jpg\" alt=\"Cory_Isaacson w bg\" width=\"300\" height=\"199\" /></a>Cory Isaacson is the Founder and Chairman of CodeFutures Corporation and served at CEO / CTO from 2007 until 2015 where he developed both AgilData and dbShards.  Cory is now serving as CTO of Risk Management Solutions. As CTO, he drives the delivery of the advanced, cloud-based RMS(one)® platform, leading the industry with innovative approaches to software management and advanced technology for the complex and unique challenges of risk modeling. Cory has founded or held executive positions in several software-related businesses, and authored the books <a href=\"http://www.amazon.com/Software-Pipelines-SOA-Multi-Core-Processing/dp/0137137974/ref=sr_1_1?ie=UTF8&amp;qid=1421705861&amp;sr=8-1&amp;keywords=Software+Pipelines+and+SOA+cory+isaacson\" target=\"_blank\"><em>Software Pipelines and SOA</em></a> and <a href=\"http://codefutures.com/big-data-scalability-series/\" target=\"_blank\"><em>Understanding Big Data Scalability.</em></a>\r\n\r\nHe has more than 20 years of experience with advanced software architectures, and has worked with many of the world’s brightest innovators in the field of high-performance computing. Cory has authored numerous articles and spoken at hundreds of public events, helping organizations address the real-world challenges of Big Data performance and scalability, and effectively applying emerging technologies to fields including social networking, mobile applications, gaming, and complex computing systems. He holds a BA from the University of California, Santa Barbara.\r\n<h2>Andy Grove</h2>\r\n<strong>Co-Founder / Chief Architect</strong>\r\n\r\n<a href=\"http://codefutures.com/wp-content/uploads/2015/01/Andy-Grove-CodeFutures2-Low-Res.jpg\"><img class=\"alignleft wp-image-14702 size-medium\" src=\"http://codefutures.com/wp-content/uploads/2015/01/Andy-Grove-CodeFutures2-Low-Res-300x199.jpg\" alt=\"Andy Grove CodeFutures2 Low Res\" width=\"300\" height=\"199\" /></a>Andy is co-founder and Chief Architect of CodeFutures. He has an extensive background in software, gained over 25 years working in banking, media, and technology. Andy was previously co-founder and CTO of Orbware Technologies, which was acquired by Cape Clear Software (now WorkDay).\r\n\r\n&nbsp;\r\n<h2></h2>\r\n<h2>Gwen Buehler</h2>\r\n<strong>Marketing Director\r\n</strong>\r\n\r\n<a href=\"http://codefutures.com/wp-content/uploads/2015/01/Gwen-Buehler-CodeFutures1-Low-Res.jpg\"><img class=\"alignleft wp-image-14703 size-medium\" src=\"http://codefutures.com/wp-content/uploads/2015/01/Gwen-Buehler-CodeFutures1-Low-Res-300x199.jpg\" alt=\"Gwen Buehler CodeFutures1 Low Res\" width=\"300\" height=\"199\" /></a>Gwen Buehler has worked in both marketing and graphic design for over 15 years and has been a marketing director for both national and regional companies. Her marketing experience includes creating, implementing and managing effective marketing plans using traditional, social and customized technological solutions. Gwen not only has experience marketing for the technology industry, but has provided marketing development for: wi-fi and event planning firms, financial institutions, real estate, mortgage, fitness and dance studios, trade industries, personal development, restaurants and social media companies.', 'Management Team, CodeFutures Management Executive Profiles', '', 'inherit', 'open', 'open', '', '198-revision-v1', '', '', '2015-05-22 14:14:16', '2015-05-22 20:14:16', '', '198', 'http://www.agildata.com/198-revision-v1/', '0', 'revision', '', '0');
INSERT INTO `wpag_posts` VALUES('200', '5', '2015-05-22 14:16:07', '0000-00-00 00:00:00', '<a href=\"/wp-content/uploads/2014/06/MapDB-landing-graphic.jpg\"><img class=\"alignnone size-full wp-image-12180\" src=\"/wp-content/uploads/2014/06/MapDB-landing-graphic.jpg\" alt=\"MapDB landing graphic\" width=\"590\" height=\"252\" /></a>\r\n<h2><strong>A brief history of MapDB</strong></h2>\r\nPrior to MapDB, Jan Kotek (the primary MapDB developer) supported various versions of the JDBM (Java Database Manager) projects. JDBM itself was a Java port of UNIX DBM and GDBM, C-language databases that support hash-based key-value stores on disk. Through this experience, Jan saw how he could greatly improve and expand the architecture, and created MapDB as a totally new implementation. Jan’s experience paid off, with MapDB offering ease-of-use, an agile approach to database structure, transaction support, concurrency, and very impressive performance.\r\n<h2>MapDB Features</h2>\r\n<p style=\"padding-left: 30px;\"><strong>• Concurrent:</strong> MapDB has record level locking and state-of-art concurrent engine. Its performance scales nearly linearly with number of cores. Data can be written by multiple parallel threads.</p>\r\n<p style=\"padding-left: 30px;\"><strong>• Fast:</strong> MapDB has outstanding performance rivaled only by native DBs. It is result of more than a decade of optimizations and rewrites.</p>\r\n<p style=\"padding-left: 30px;\"><strong>• ACID:</strong>  MapDB optionally supports ACID transactions with full MVCC isolation. MapDB uses write-ahead-log or append-only store for great write durability.</p>\r\n<p style=\"padding-left: 30px;\"><strong>• Flexible:</strong> MapDB can be used everywhere from in-memory cache to multi-terabyte database. It also has number of options to trade durability for write performance. This makes it very easy to configure MapDB to exactly fit your needs.</p>\r\n<p style=\"padding-left: 30px;\"><strong>• Hackable:</strong> MapDB is component based, most features (instance cache, async writes, compression) are just class wrappers. It is very easy to introduce new functionality or component into MapDB.</p>\r\n<p style=\"padding-left: 30px;\"><strong>• SQL Like:</strong> MapDB was developed as faster alternative to SQL engine. It has number of features which makes transition from relational database easier: secondary indexes/collections, autoincremental sequential ID, joints, triggers, composite keys…</p>\r\n<p style=\"padding-left: 30px;\"><strong>• Low disk-space usage:</strong> MapDB has number of features (serialization, delta key packing…) to minimize disk used by its store. It also has very fast compression and custom serializers. We take disk-usage seriously and do not waste single byte.</p>\r\n\r\n<h2>A natural API for Java developers</h2>\r\nThere are many strong features of MapDB, but the one that jumps out most is it’s intuitive and flexible API. For example, if you want to create a Map structure (even up to 100s of GBs), here is all that is needed:<a href=\"/wp-content/uploads/2014/06/Code-Graphic-1.jpg\"><img class=\"alignnone size-full wp-image-12189\" src=\"/wp-content/uploads/2014/06/Code-Graphic-1.jpg\" alt=\"Code Graphic 1\" width=\"602\" height=\"297\" /></a>\r\n\r\nIt is as simple as that. Now you have a file-backed Map of virtually any size.Another very powerful feature is that MapDB utilizes some of the advanced Java Collections variants, such as ConcurrentNavigableMap. With this type of Map you can go beyond simple key-value semantics, as it is also a sorted Map allowing you to access data in order, and find values near a key. This extension to the Collections API is not widely knows about, but it is extremely powerful and allows you to do a lot with your MapDB database.\r\n<h2>What makes MapDB an agile data engine?</h2>\r\nDeveloper Jan Kotek said something that made a very important impression. \"If you know what data structure you want, MapDB allows you to tailor the structure to your exact application needs.\" In other words, the schema and ways you can structure your data is very flexible.Why was this so important? If you can make a data structure that matches what you are trying to do, it can offer far better performance compared to a “generic” structure (sometimes orders of magnitude better). While it is beyond the scope of the information on this page, this is a ground-breaking concept because MapDB not only offers you the ability to create Maps, Sets, etc. to meet your needs, it also supports tremendous flexibility in its internal implementation of those structures. That aspect is where you can really blow away traditional thinking, and achieve the performance you need – often with far less work than attempting various “work-arounds” with other engines that support only a single internal structure.They key to this capability is inherent in MapDB’s architecture, and how it translates to the MapDB API itself. Here is a simple diagram of the MapDB architecture:\r\n\r\n<a href=\"/wp-content/uploads/2014/06/MapDB-Figure.jpg\"><img class=\"alignnone size-full wp-image-12188\" src=\"/wp-content/uploads/2014/06/MapDB-Figure.jpg\" alt=\"MapDB Figure\" width=\"472\" height=\"361\" />\r\n</a><strong>There are 3 tiers in MapDB:</strong>\r\n<p style=\"padding-left: 30px;\"><strong>1. Collections API:</strong> This is the familiar Java Collections API that every Java developer uses for maintaining application state. It has a simple builder-style extension to allow you to control the exact characteristics of a given database (including its internal format or record structure).</p>\r\n<p style=\"padding-left: 30px;\"><strong>2. Engine:</strong> The Engine is the real key to MapDB, this is where the records for a database – including their internal structure, concurrency control, transactional semantics – are controlled. MapDB ships with several engines already, and it is straightforward to add your own Engine if needed for specialized data handling.</p>\r\n<p style=\"padding-left: 30px;\"><strong>3. Volume:</strong> This is the physical storage layer (e.g., on-disk or in-memory). MapDB has a few standard Volume implementations, and they should suffice for most projects.</p>\r\nThe main point is that the development API is completely distinct from the Engine implementation (the heart of MapDB), and both are separate from the actual physical storage layer. This offers a very agile approach, allowing developers to control exactly what type of internal structure is needed for a given database, and what the actual data structure looks like from the top-level Collections API.There are lots of capabilities supported by this architecture.However, without knowing any of the internals, you can accomplish great agility simply using existing features. In the first simple code example, it showed the builder-style API used to create a database. That is where the power is, as the static builder methods are extensible to support any Engine features that are available.\r\n<h2>Interested in learning more?</h2>\r\nHere is the best part of all, <strong>MapDB is freely available</strong> for any use under the Apache 2.0 license. <strong><a href=\"http://www.mapdb.org/\">Click here to get it now!</a> </strong>CodeFutures now offers support for MapDB. To learn more, please fill out this form below, and we will contact you to answer all of your questions.', 'MapDB', '', 'draft', 'open', 'open', '', '', '', '', '2015-05-22 14:16:07', '2015-05-22 20:16:07', '', '0', 'http://www.agildata.com/?page_id=200', '0', 'page', '', '0');
INSERT INTO `wpag_posts` VALUES('201', '5', '2015-05-22 14:15:53', '2015-05-22 20:15:53', '<a href=\"/wp-content/uploads/2014/06/MapDB-landing-graphic.jpg\"><img class=\"alignnone size-full wp-image-12180\" src=\"/wp-content/uploads/2014/06/MapDB-landing-graphic.jpg\" alt=\"MapDB landing graphic\" width=\"590\" height=\"252\" /></a>\r\n<h2><strong>A brief history of MapDB</strong></h2>\r\nPrior to MapDB, Jan Kotek (the primary MapDB developer) supported various versions of the JDBM (Java Database Manager) projects. JDBM itself was a Java port of UNIX DBM and GDBM, C-language databases that support hash-based key-value stores on disk. Through this experience, Jan saw how he could greatly improve and expand the architecture, and created MapDB as a totally new implementation. Jan’s experience paid off, with MapDB offering ease-of-use, an agile approach to database structure, transaction support, concurrency, and very impressive performance.\r\n<h2>MapDB Features</h2>\r\n<p style=\"padding-left: 30px;\"><strong>• Concurrent:</strong> MapDB has record level locking and state-of-art concurrent engine. Its performance scales nearly linearly with number of cores. Data can be written by multiple parallel threads.</p>\r\n<p style=\"padding-left: 30px;\"><strong>• Fast:</strong> MapDB has outstanding performance rivaled only by native DBs. It is result of more than a decade of optimizations and rewrites.</p>\r\n<p style=\"padding-left: 30px;\"><strong>• ACID:</strong>  MapDB optionally supports ACID transactions with full MVCC isolation. MapDB uses write-ahead-log or append-only store for great write durability.</p>\r\n<p style=\"padding-left: 30px;\"><strong>• Flexible:</strong> MapDB can be used everywhere from in-memory cache to multi-terabyte database. It also has number of options to trade durability for write performance. This makes it very easy to configure MapDB to exactly fit your needs.</p>\r\n<p style=\"padding-left: 30px;\"><strong>• Hackable:</strong> MapDB is component based, most features (instance cache, async writes, compression) are just class wrappers. It is very easy to introduce new functionality or component into MapDB.</p>\r\n<p style=\"padding-left: 30px;\"><strong>• SQL Like:</strong> MapDB was developed as faster alternative to SQL engine. It has number of features which makes transition from relational database easier: secondary indexes/collections, autoincremental sequential ID, joints, triggers, composite keys…</p>\r\n<p style=\"padding-left: 30px;\"><strong>• Low disk-space usage:</strong> MapDB has number of features (serialization, delta key packing…) to minimize disk used by its store. It also has very fast compression and custom serializers. We take disk-usage seriously and do not waste single byte.</p>\r\n\r\n<h2>A natural API for Java developers</h2>\r\nThere are many strong features of MapDB, but the one that jumps out most is it’s intuitive and flexible API. For example, if you want to create a Map structure (even up to 100s of GBs), here is all that is needed:<a href=\"/wp-content/uploads/2014/06/Code-Graphic-1.jpg\"><img class=\"alignnone size-full wp-image-12189\" src=\"/wp-content/uploads/2014/06/Code-Graphic-1.jpg\" alt=\"Code Graphic 1\" width=\"602\" height=\"297\" /></a>\r\n\r\nIt is as simple as that. Now you have a file-backed Map of virtually any size.Another very powerful feature is that MapDB utilizes some of the advanced Java Collections variants, such as ConcurrentNavigableMap. With this type of Map you can go beyond simple key-value semantics, as it is also a sorted Map allowing you to access data in order, and find values near a key. This extension to the Collections API is not widely knows about, but it is extremely powerful and allows you to do a lot with your MapDB database.\r\n<h2>What makes MapDB an agile data engine?</h2>\r\nDeveloper Jan Kotek said something that made a very important impression. \"If you know what data structure you want, MapDB allows you to tailor the structure to your exact application needs.\" In other words, the schema and ways you can structure your data is very flexible.Why was this so important? If you can make a data structure that matches what you are trying to do, it can offer far better performance compared to a “generic” structure (sometimes orders of magnitude better). While it is beyond the scope of the information on this page, this is a ground-breaking concept because MapDB not only offers you the ability to create Maps, Sets, etc. to meet your needs, it also supports tremendous flexibility in its internal implementation of those structures. That aspect is where you can really blow away traditional thinking, and achieve the performance you need – often with far less work than attempting various “work-arounds” with other engines that support only a single internal structure.They key to this capability is inherent in MapDB’s architecture, and how it translates to the MapDB API itself. Here is a simple diagram of the MapDB architecture:\r\n\r\n<a href=\"/wp-content/uploads/2014/06/MapDB-Figure.jpg\"><img class=\"alignnone size-full wp-image-12188\" src=\"/wp-content/uploads/2014/06/MapDB-Figure.jpg\" alt=\"MapDB Figure\" width=\"472\" height=\"361\" />\r\n</a><strong>There are 3 tiers in MapDB:</strong>\r\n<p style=\"padding-left: 30px;\"><strong>1. Collections API:</strong> This is the familiar Java Collections API that every Java developer uses for maintaining application state. It has a simple builder-style extension to allow you to control the exact characteristics of a given database (including its internal format or record structure).</p>\r\n<p style=\"padding-left: 30px;\"><strong>2. Engine:</strong> The Engine is the real key to MapDB, this is where the records for a database – including their internal structure, concurrency control, transactional semantics – are controlled. MapDB ships with several engines already, and it is straightforward to add your own Engine if needed for specialized data handling.</p>\r\n<p style=\"padding-left: 30px;\"><strong>3. Volume:</strong> This is the physical storage layer (e.g., on-disk or in-memory). MapDB has a few standard Volume implementations, and they should suffice for most projects.</p>\r\nThe main point is that the development API is completely distinct from the Engine implementation (the heart of MapDB), and both are separate from the actual physical storage layer. This offers a very agile approach, allowing developers to control exactly what type of internal structure is needed for a given database, and what the actual data structure looks like from the top-level Collections API.There are lots of capabilities supported by this architecture.However, without knowing any of the internals, you can accomplish great agility simply using existing features. In the first simple code example, it showed the builder-style API used to create a database. That is where the power is, as the static builder methods are extensible to support any Engine features that are available.\r\n<h2>Interested in learning more?</h2>\r\nHere is the best part of all, <strong>MapDB is freely available</strong> for any use under the Apache 2.0 license. <strong><a href=\"http://www.mapdb.org/\">Click here to get it now!</a> </strong>CodeFutures now offers support for MapDB. To learn more, please fill out this form below, and we will contact you to answer all of your questions.', 'MapDB', '', 'inherit', 'open', 'open', '', '200-revision-v1', '', '', '2015-05-22 14:15:53', '2015-05-22 20:15:53', '', '200', 'http://www.agildata.com/200-revision-v1/', '0', 'revision', '', '0');
INSERT INTO `wpag_posts` VALUES('202', '5', '2015-05-22 14:17:33', '0000-00-00 00:00:00', '<h1>Mesos + Docker Tutorial: How to Build Your Own Framework</h1>\r\n<p style=\"text-align: justify;\"><a href=\"http://codefutures.com/wp-content/uploads/2014/10/Mesos+Docker-Build-Framework.jpg\"><img class=\"alignnone size-full wp-image-14547\" src=\"http://codefutures.com/wp-content/uploads/2014/10/Mesos+Docker-Build-Framework.jpg\" alt=\"Mesos+Docker Build Framework\" width=\"595\" height=\"343\" /></a></p>\r\n\r\n<h2>Introduction to Mesos + Docker</h2>\r\nApache Mesos is a cluster manager that simplifies the complexity of running tasks on a shared pool of servers. Docker is a lightweight container for deploying packaged services, similar in concept to a virtual machine, but without the overhead.\r\n\r\nMesos added support for Docker in the 0.20.0 release and subsequently fixed some fairly large limitations in the following 0.20.1 patch release. The combination of <strong>Mesos + Docker</strong> provides a very powerful platform for deploying applications and services in a clustered environment.\r\n\r\nThis tutorial will explain how to use Mesos 0.20.1 and Docker 1.2.0 to write a simple Mesos framework in Java that will start some containers.\r\n<h2>Mesos Overview</h2>\r\nA typical Mesos deployment consists of one or more servers running the mesos-master (one live instance and one or more standby instances) and a cluster of servers running the mesos-slave component. The slaves register with the master and offer “resources” i.e. capacity to be able to run tasks. The master then interacts with the deployed frameworks to pass those resource offers on and to receive instructions to run tasks and then delegates those instructions back to the slaves.\r\n\r\nMultiple frameworks can be deployed concurrently and share the resources available in the cluster. For example, Apache Spark and Cassandra both have Mesos frameworks available, allowing them both to be deployed on the same cluster.\r\n\r\nA framework consists of a scheduler and optionally one or more executors. The scheduler connects to the mesos-master and accepts or rejects resource offers from slaves and then provides instructions on what tasks to execute on those slaves.\r\n\r\nMesos has default executors for running shell scripts and, since the 0.20.0 release, for launching docker containers. It is also possible to write executors in Java and other languages. In this case, the executor binary (jar files in the case of Java) must be available from a central resource such as HDFS so that the slaves can download them. Of course, with the introduction of Docker, there is now the possibility of packaging up the executors directly inside a Docker image, making the deployment process much simpler.\r\n<h2>Writing a Mesos Framework</h2>\r\nThis tutorial will demonstrate how to develop a framework with a scheduler that will start Docker containers on one or more slaves. There is no need to develop an executor in this case since the default Mesos executor will be used.\r\n\r\n<strong>The full source code is available in github: <a href=\"https://github.com/codefutures/mesos-docker-tutorial\" target=\"_blank\">https://github.com/codefutures/mesos-docker-tutorial</a></strong>\r\n\r\nThe main class to implement is ExampleScheduler which will implement the Scheduler interface.\r\n<h2>For this tutorial, only the following methods will be implemented:</h2>\r\n<pre>  void resourceOffers(org.apache.mesos.SchedulerDriver schedulerDriver, java.util.List list);\r\n\r\n  void statusUpdate(org.apache.mesos.SchedulerDriver schedulerDriver, org.apache.mesos.Protos.TaskStatus taskStatus);</pre>\r\n<strong>The resourceOffers() method</strong> will be called whenever there are slaves running with available resource (capacity to run jobs). The scheduler can then decide whether to accept any of these offers and schedule any tasks to be run.\r\n\r\n<strong>The statusUpdate() method</strong> will be called to notify the scheduler of the status of the tasks that were scheduled. The example code will look at the task status (TASK_RUNNING, TASK_FAILED, TASK_FINISHED) to keep track of how many containers are running.\r\n\r\nIn this tutorial the scheduler will attempt to maintain a certain number of running tasks. The following instance variables are used to keep track of pending task IDs and running task IDs.\r\n<pre>   /** List of pending tasks. */\r\n  private final List pendingInstances = new ArrayList&lt;&gt;();\r\n\r\n  /** List of running tasks. */\r\n  private final List runningInstances = new ArrayList&lt;&gt;();</pre>\r\nAn AtomicLong is used generate sequential task IDs:\r\n<pre>  /** Task ID generator. */\r\n  private final AtomicInteger taskIDGenerator = new AtomicInteger();</pre>\r\nThe main flow in the resourceOffers() method is to iterate over the list of offers received and decide whether to launch any tasks, so the main flow looks like this:\r\n<pre>@Override\r\n  public void resourceOffers(SchedulerDriver schedulerDriver, List offers) {\r\n\r\n    logger.info(\"resourceOffers() with {} offers\", offers.size());\r\n\r\n    for (Protos.Offer offer : offers) {\r\n\r\n      List tasks = new ArrayList&lt;&gt;();\r\n      if (runningInstances.size() + pendingInstances.size() &lt; desiredInstances) {\r\n\r\n        // generate a unique task ID\r\n        Protos.TaskID taskId = Protos.TaskID.newBuilder()\r\n            .setValue(Integer.toString(taskIDGenerator.incrementAndGet())).build();\r\n\r\n        logger.info(\"Launching task {}\", taskId.getValue());\r\n        pendingInstances.add(taskId.getValue());\r\n\r\n        // docker image info\r\n        Protos.ContainerInfo.DockerInfo.Builder dockerInfoBuilder = Protos.ContainerInfo.DockerInfo.newBuilder();\r\n        dockerInfoBuilder.setImage(imageName);\r\n        dockerInfoBuilder.setNetwork(Protos.ContainerInfo.DockerInfo.Network.BRIDGE);\r\n\r\n        // container info\r\n        Protos.ContainerInfo.Builder containerInfoBuilder = Protos.ContainerInfo.newBuilder();\r\n        containerInfoBuilder.setType(Protos.ContainerInfo.Type.DOCKER);\r\n        containerInfoBuilder.setDocker(dockerInfoBuilder.build());\r\n\r\n        // create task to run\r\n        Protos.TaskInfo task = Protos.TaskInfo.newBuilder()\r\n            .setName(\"task \" + taskId.getValue())\r\n            .setTaskId(taskId)\r\n            .setSlaveId(offer.getSlaveId())\r\n            .addResources(Protos.Resource.newBuilder()\r\n                .setName(\"cpus\")\r\n                .setType(Protos.Value.Type.SCALAR)\r\n                .setScalar(Protos.Value.Scalar.newBuilder().setValue(1)))\r\n            .addResources(Protos.Resource.newBuilder()\r\n                .setName(\"mem\")\r\n                .setType(Protos.Value.Type.SCALAR)\r\n                .setScalar(Protos.Value.Scalar.newBuilder().setValue(128)))\r\n            .setContainer(containerInfoBuilder)\r\n            .setCommand(Protos.CommandInfo.newBuilder().setShell(false))\r\n            .build();\r\n\r\n        tasks.add(task);\r\n      }\r\n      Protos.Filters filters = Protos.Filters.newBuilder().setRefuseSeconds(1).build();\r\n      schedulerDriver.launchTasks(offer.getId(), tasks, filters);\r\n    }\r\n  }</pre>\r\nAs you can see, this method builds up a task definition. Let’s walk through this in more detail.\r\n\r\nSince the scheduler is running Docker tasks, the first step is to define the Docker image to be used. The docker image name must be specified, and optional configuration items include network configuration and port mappings. In this example, bridge networking is used, so that each container gets its own IP address, which is the default behavior when using docker.\r\n<pre>        Protos.ContainerInfo.DockerInfo.Builder dockerInfoBuilder = Protos.ContainerInfo.DockerInfo.newBuilder();\r\n        dockerInfoBuilder.setImage(imageName);\r\n        dockerInfoBuilder.setNetwork(Protos.ContainerInfo.DockerInfo.Network.BRIDGE);</pre>\r\nNext, the container information must be specified, mainly providing a reference to the Docker image definition.\r\n<pre>         Protos.ContainerInfo.Builder containerInfoBuilder = Protos.ContainerInfo.newBuilder();\r\n        containerInfoBuilder.setType(Protos.ContainerInfo.Type.DOCKER);\r\n        containerInfoBuilder.setDocker(dockerInfoBuilder.build());</pre>\r\nFinally, the task must be defined.\r\n<pre>        // create task to run\r\n        Protos.TaskInfo task = Protos.TaskInfo.newBuilder()\r\n            .setName(\"task \" + taskId.getValue())\r\n            .setTaskId(taskId)\r\n            .setSlaveId(offer.getSlaveId())\r\n            .addResources(Protos.Resource.newBuilder()\r\n                .setName(\"cpus\")\r\n                .setType(Protos.Value.Type.SCALAR)\r\n                .setScalar(Protos.Value.Scalar.newBuilder().setValue(1)))\r\n            .addResources(Protos.Resource.newBuilder()\r\n                .setName(\"mem\")\r\n                .setType(Protos.Value.Type.SCALAR)\r\n                .setScalar(Protos.Value.Scalar.newBuilder().setValue(128)))\r\n            .setContainer(containerInfoBuilder)\r\n            .setCommand(Protos.CommandInfo.newBuilder().setShell(false))\r\n            .build();</pre>\r\nThe task definition specifies the amount of resource needed (1 CPU and 128 MB RAM) and also specifies a reference to the Docker container information and the command to run (in this case the command is effectively set to NULL, so that the default Docker image entry point will be used).\r\n<pre>            .setContainer(containerInfoBuilder)\r\n            .setCommand(Protos.CommandInfo.newBuilder().setShell(false))</pre>\r\nThe statusUpdate() method will simply update the pendingInstances and runningInstances lists based on the task status.\r\n<pre>@Override\r\n  public void statusUpdate(SchedulerDriver driver, Protos.TaskStatus taskStatus) {\r\n\r\n    final String taskId = taskStatus.getTaskId().getValue();\r\n\r\n    logger.info(\"statusUpdate() task {} is in state {}\",\r\n        taskId, taskStatus.getState());\r\n\r\n    switch (taskStatus.getState()) {\r\n      case TASK_RUNNING:\r\n        pendingInstances.remove(taskId);\r\n        runningInstances.add(taskId);\r\n        break;\r\n      case TASK_FAILED:\r\n      case TASK_FINISHED:\r\n        pendingInstances.remove(taskId);\r\n        runningInstances.remove(taskId);\r\n        break;\r\n    }\r\n\r\n    logger.info(\"Number of instances: pending={}, running={}\",\r\n        pendingInstances.size(), runningInstances.size());\r\n  }</pre>\r\nThe scheduler will be created by the framework, which is basically just the main() method that is invoked from the command line. The framework creates the scheduler and registers it with Mesos:\r\n<pre>    FrameworkInfo.Builder frameworkBuilder = FrameworkInfo.newBuilder()\r\n        .setName(\"CodeFuturesExampleFramework\")\r\n        .setUser(\"\") // Have Mesos fill in the current user.\r\n        .setFailoverTimeout(frameworkFailoverTimeout); // timeout in seconds\r\n\r\n    final Scheduler scheduler = new ExampleScheduler(\r\n        imageName,\r\n        totalTasks\r\n    );\r\n\r\n    MesosSchedulerDriver driver = new MesosSchedulerDriver(scheduler,     frameworkBuilder.build(), masterIpAndPort);\r\n    driver.run();</pre>\r\n<h2>Running the Tutorial Code</h2>\r\nThese instructions are for running everything on a single node, but can easily be adapted to run on multiple nodes.\r\n\r\n<strong>Running Mesos master and slave:</strong>\r\n<pre>nohup mesos-master --ip=127.0.0.1 --work_dir=/tmp &gt;mesos-master.log 2&gt;&amp;1 &amp;\r\n\r\nnohup mesos-slave --master=127.0.0.1:5050 --containerizers=docker,mesos &gt;mesos-slave.log 2&gt;&amp;1 &amp;</pre>\r\n<strong>Checkout the code from the github repo:</strong>\r\n<pre>git clone https://github.com/codefutures/mesos-docker-tutorial.git\r\ncd mesos-docker-tutorial\r\nmvn package</pre>\r\n<strong>Run the code:</strong>\r\n\r\nLaunch the framework to run 2 instances of the fedora/apache image.\r\n<pre>java -classpath target/cf-tutorial-mesos-docker-1.0-SNAPSHOT-jar-with-dependencies.jar com.codefutures.tutorial.mesos.docker.ExampleFramework 127.0.0.1:5050 fedora/apache 2</pre>\r\n<strong>The framework should output logging like this:</strong>\r\n<pre>2014-10-01 14:37:09,896 INFO c.c.t.m.d.ExampleScheduler [Thread-1] registered() master=16777343:5050, framework=value: \"20141001-122042-16777343-5050-17935-0015\"\r\n\r\n 2014-10-01 14:37:09,903 INFO c.c.t.m.d.ExampleScheduler [Thread-2] resourceOffers() with 1 offers\r\n 2014-10-01 14:37:09,905 INFO c.c.t.m.d.ExampleScheduler [Thread-2] Launching task 1\r\n 2014-10-01 14:37:11,567 INFO c.c.t.m.d.ExampleScheduler [Thread-3] statusUpdate() task 1 is in state TASK_RUNNING\r\n 2014-10-01 14:37:11,567 INFO c.c.t.m.d.ExampleScheduler [Thread-3] Number of instances: pending=0, running=1\r\n 2014-10-01 14:37:11,771 INFO c.c.t.m.d.ExampleScheduler [Thread-4] resourceOffers() with 1 offers\r\n 2014-10-01 14:37:11,771 INFO c.c.t.m.d.ExampleScheduler [Thread-4] Launching task 2\r\n 2014-10-01 14:37:13,572 INFO c.c.t.m.d.ExampleScheduler [Thread-5] statusUpdate() task 2 is in state TASK_RUNNING\r\n 2014-10-01 14:37:13,572 INFO c.c.t.m.d.ExampleScheduler [Thread-5] Number of instances: pending=0, running=2\r\n 2014-10-01 14:37:13,774 INFO c.c.t.m.d.ExampleScheduler [Thread-6] resourceOffers() with 1 offers</pre>\r\n<strong>Running ‘docker ps’ should confirm that the containers have been launched:</strong>\r\n<pre>$ docker ps\r\nCONTAINER ID        IMAGE                  COMMAND             CREATED             STATUS              PORTS               NAMES\r\nf7e39be4d6d7        fedora/apache:latest   \"/run-apache.sh\"    9 seconds ago       Up 8 seconds        80/tcp              mesos-0295fc27-3c0e-4f26-8022-8301e64fc1ea   \r\n1aba90b99e04        fedora/apache:latest   \"/run-apache.sh\"    11 seconds ago      Up 10 seconds       80/tcp              mesos-70ab810e-a50a-4e5f-8145-90201fa89de1</pre>\r\n<h2>This Mesos +Docker tutorial should provide you the tools to do two things:</h2>\r\n<p style=\"text-align: left; padding-left: 30px;\"><strong>1. Write a Mesos Framework</strong>\r\n<strong> 2. Use the new Docker support in Mesos</strong></p>\r\n<strong>Get the full source code, available in github: <a href=\"https://github.com/codefutures/mesos-docker-tutorial\" target=\"_blank\">https://github.com/codefutures/mesos-docker-tutorial</a></strong>\r\n\r\n_____________________________________________\r\n<h2><strong>Ready to go Agile?</strong></h2>\r\n<a href=\"http://codefutures.com/agildata/\" target=\"_blank\"><img class=\"alignleft wp-image-14165 size-medium\" src=\"http://codefutures.com/wp-content/uploads/2014/07/AgilData-Twitter-300x207.jpg\" alt=\"AgilData-Twitter\" width=\"300\" height=\"207\" /></a>\r\nCheck out CodeFutures\' ground breaking new product <a href=\"http://codefutures.com/agildata/\" target=\"_blank\">AgilData</a>\r\n\r\nGet the <a href=\"http://codefutures.com/agile-data-white-paper/\" target=\"_blank\">FREE AgilData WhitePaper</a>, and <a href=\"http://codefutures.com/agile-data-white-paper/\" target=\"_blank\">sign up to be a beta tester here</a>\r\n\r\nContact us at <a href=\"mailto:support@codefutures.com\">support@codefutures.com</a> with your questions\r\n\r\n&nbsp;', 'Mesos + Docker Tutorial: How to Build Your Own Framework', '', 'draft', 'open', 'open', '', '', '', '', '2015-05-22 14:17:33', '2015-05-22 20:17:33', '', '0', 'http://www.agildata.com/?page_id=202', '0', 'page', '', '0');
INSERT INTO `wpag_posts` VALUES('203', '5', '2015-05-22 14:17:26', '2015-05-22 20:17:26', '<h1>Mesos + Docker Tutorial: How to Build Your Own Framework</h1>\r\n<p style=\"text-align: justify;\"><a href=\"http://codefutures.com/wp-content/uploads/2014/10/Mesos+Docker-Build-Framework.jpg\"><img class=\"alignnone size-full wp-image-14547\" src=\"http://codefutures.com/wp-content/uploads/2014/10/Mesos+Docker-Build-Framework.jpg\" alt=\"Mesos+Docker Build Framework\" width=\"595\" height=\"343\" /></a></p>\r\n\r\n<h2>Introduction to Mesos + Docker</h2>\r\nApache Mesos is a cluster manager that simplifies the complexity of running tasks on a shared pool of servers. Docker is a lightweight container for deploying packaged services, similar in concept to a virtual machine, but without the overhead.\r\n\r\nMesos added support for Docker in the 0.20.0 release and subsequently fixed some fairly large limitations in the following 0.20.1 patch release. The combination of <strong>Mesos + Docker</strong> provides a very powerful platform for deploying applications and services in a clustered environment.\r\n\r\nThis tutorial will explain how to use Mesos 0.20.1 and Docker 1.2.0 to write a simple Mesos framework in Java that will start some containers.\r\n<h2>Mesos Overview</h2>\r\nA typical Mesos deployment consists of one or more servers running the mesos-master (one live instance and one or more standby instances) and a cluster of servers running the mesos-slave component. The slaves register with the master and offer “resources” i.e. capacity to be able to run tasks. The master then interacts with the deployed frameworks to pass those resource offers on and to receive instructions to run tasks and then delegates those instructions back to the slaves.\r\n\r\nMultiple frameworks can be deployed concurrently and share the resources available in the cluster. For example, Apache Spark and Cassandra both have Mesos frameworks available, allowing them both to be deployed on the same cluster.\r\n\r\nA framework consists of a scheduler and optionally one or more executors. The scheduler connects to the mesos-master and accepts or rejects resource offers from slaves and then provides instructions on what tasks to execute on those slaves.\r\n\r\nMesos has default executors for running shell scripts and, since the 0.20.0 release, for launching docker containers. It is also possible to write executors in Java and other languages. In this case, the executor binary (jar files in the case of Java) must be available from a central resource such as HDFS so that the slaves can download them. Of course, with the introduction of Docker, there is now the possibility of packaging up the executors directly inside a Docker image, making the deployment process much simpler.\r\n<h2>Writing a Mesos Framework</h2>\r\nThis tutorial will demonstrate how to develop a framework with a scheduler that will start Docker containers on one or more slaves. There is no need to develop an executor in this case since the default Mesos executor will be used.\r\n\r\n<strong>The full source code is available in github: <a href=\"https://github.com/codefutures/mesos-docker-tutorial\" target=\"_blank\">https://github.com/codefutures/mesos-docker-tutorial</a></strong>\r\n\r\nThe main class to implement is ExampleScheduler which will implement the Scheduler interface.\r\n<h2>For this tutorial, only the following methods will be implemented:</h2>\r\n<pre>  void resourceOffers(org.apache.mesos.SchedulerDriver schedulerDriver, java.util.List list);\r\n\r\n  void statusUpdate(org.apache.mesos.SchedulerDriver schedulerDriver, org.apache.mesos.Protos.TaskStatus taskStatus);</pre>\r\n<strong>The resourceOffers() method</strong> will be called whenever there are slaves running with available resource (capacity to run jobs). The scheduler can then decide whether to accept any of these offers and schedule any tasks to be run.\r\n\r\n<strong>The statusUpdate() method</strong> will be called to notify the scheduler of the status of the tasks that were scheduled. The example code will look at the task status (TASK_RUNNING, TASK_FAILED, TASK_FINISHED) to keep track of how many containers are running.\r\n\r\nIn this tutorial the scheduler will attempt to maintain a certain number of running tasks. The following instance variables are used to keep track of pending task IDs and running task IDs.\r\n<pre>   /** List of pending tasks. */\r\n  private final List pendingInstances = new ArrayList&lt;&gt;();\r\n\r\n  /** List of running tasks. */\r\n  private final List runningInstances = new ArrayList&lt;&gt;();</pre>\r\nAn AtomicLong is used generate sequential task IDs:\r\n<pre>  /** Task ID generator. */\r\n  private final AtomicInteger taskIDGenerator = new AtomicInteger();</pre>\r\nThe main flow in the resourceOffers() method is to iterate over the list of offers received and decide whether to launch any tasks, so the main flow looks like this:\r\n<pre>@Override\r\n  public void resourceOffers(SchedulerDriver schedulerDriver, List offers) {\r\n\r\n    logger.info(\"resourceOffers() with {} offers\", offers.size());\r\n\r\n    for (Protos.Offer offer : offers) {\r\n\r\n      List tasks = new ArrayList&lt;&gt;();\r\n      if (runningInstances.size() + pendingInstances.size() &lt; desiredInstances) {\r\n\r\n        // generate a unique task ID\r\n        Protos.TaskID taskId = Protos.TaskID.newBuilder()\r\n            .setValue(Integer.toString(taskIDGenerator.incrementAndGet())).build();\r\n\r\n        logger.info(\"Launching task {}\", taskId.getValue());\r\n        pendingInstances.add(taskId.getValue());\r\n\r\n        // docker image info\r\n        Protos.ContainerInfo.DockerInfo.Builder dockerInfoBuilder = Protos.ContainerInfo.DockerInfo.newBuilder();\r\n        dockerInfoBuilder.setImage(imageName);\r\n        dockerInfoBuilder.setNetwork(Protos.ContainerInfo.DockerInfo.Network.BRIDGE);\r\n\r\n        // container info\r\n        Protos.ContainerInfo.Builder containerInfoBuilder = Protos.ContainerInfo.newBuilder();\r\n        containerInfoBuilder.setType(Protos.ContainerInfo.Type.DOCKER);\r\n        containerInfoBuilder.setDocker(dockerInfoBuilder.build());\r\n\r\n        // create task to run\r\n        Protos.TaskInfo task = Protos.TaskInfo.newBuilder()\r\n            .setName(\"task \" + taskId.getValue())\r\n            .setTaskId(taskId)\r\n            .setSlaveId(offer.getSlaveId())\r\n            .addResources(Protos.Resource.newBuilder()\r\n                .setName(\"cpus\")\r\n                .setType(Protos.Value.Type.SCALAR)\r\n                .setScalar(Protos.Value.Scalar.newBuilder().setValue(1)))\r\n            .addResources(Protos.Resource.newBuilder()\r\n                .setName(\"mem\")\r\n                .setType(Protos.Value.Type.SCALAR)\r\n                .setScalar(Protos.Value.Scalar.newBuilder().setValue(128)))\r\n            .setContainer(containerInfoBuilder)\r\n            .setCommand(Protos.CommandInfo.newBuilder().setShell(false))\r\n            .build();\r\n\r\n        tasks.add(task);\r\n      }\r\n      Protos.Filters filters = Protos.Filters.newBuilder().setRefuseSeconds(1).build();\r\n      schedulerDriver.launchTasks(offer.getId(), tasks, filters);\r\n    }\r\n  }</pre>\r\nAs you can see, this method builds up a task definition. Let’s walk through this in more detail.\r\n\r\nSince the scheduler is running Docker tasks, the first step is to define the Docker image to be used. The docker image name must be specified, and optional configuration items include network configuration and port mappings. In this example, bridge networking is used, so that each container gets its own IP address, which is the default behavior when using docker.\r\n<pre>        Protos.ContainerInfo.DockerInfo.Builder dockerInfoBuilder = Protos.ContainerInfo.DockerInfo.newBuilder();\r\n        dockerInfoBuilder.setImage(imageName);\r\n        dockerInfoBuilder.setNetwork(Protos.ContainerInfo.DockerInfo.Network.BRIDGE);</pre>\r\nNext, the container information must be specified, mainly providing a reference to the Docker image definition.\r\n<pre>         Protos.ContainerInfo.Builder containerInfoBuilder = Protos.ContainerInfo.newBuilder();\r\n        containerInfoBuilder.setType(Protos.ContainerInfo.Type.DOCKER);\r\n        containerInfoBuilder.setDocker(dockerInfoBuilder.build());</pre>\r\nFinally, the task must be defined.\r\n<pre>        // create task to run\r\n        Protos.TaskInfo task = Protos.TaskInfo.newBuilder()\r\n            .setName(\"task \" + taskId.getValue())\r\n            .setTaskId(taskId)\r\n            .setSlaveId(offer.getSlaveId())\r\n            .addResources(Protos.Resource.newBuilder()\r\n                .setName(\"cpus\")\r\n                .setType(Protos.Value.Type.SCALAR)\r\n                .setScalar(Protos.Value.Scalar.newBuilder().setValue(1)))\r\n            .addResources(Protos.Resource.newBuilder()\r\n                .setName(\"mem\")\r\n                .setType(Protos.Value.Type.SCALAR)\r\n                .setScalar(Protos.Value.Scalar.newBuilder().setValue(128)))\r\n            .setContainer(containerInfoBuilder)\r\n            .setCommand(Protos.CommandInfo.newBuilder().setShell(false))\r\n            .build();</pre>\r\nThe task definition specifies the amount of resource needed (1 CPU and 128 MB RAM) and also specifies a reference to the Docker container information and the command to run (in this case the command is effectively set to NULL, so that the default Docker image entry point will be used).\r\n<pre>            .setContainer(containerInfoBuilder)\r\n            .setCommand(Protos.CommandInfo.newBuilder().setShell(false))</pre>\r\nThe statusUpdate() method will simply update the pendingInstances and runningInstances lists based on the task status.\r\n<pre>@Override\r\n  public void statusUpdate(SchedulerDriver driver, Protos.TaskStatus taskStatus) {\r\n\r\n    final String taskId = taskStatus.getTaskId().getValue();\r\n\r\n    logger.info(\"statusUpdate() task {} is in state {}\",\r\n        taskId, taskStatus.getState());\r\n\r\n    switch (taskStatus.getState()) {\r\n      case TASK_RUNNING:\r\n        pendingInstances.remove(taskId);\r\n        runningInstances.add(taskId);\r\n        break;\r\n      case TASK_FAILED:\r\n      case TASK_FINISHED:\r\n        pendingInstances.remove(taskId);\r\n        runningInstances.remove(taskId);\r\n        break;\r\n    }\r\n\r\n    logger.info(\"Number of instances: pending={}, running={}\",\r\n        pendingInstances.size(), runningInstances.size());\r\n  }</pre>\r\nThe scheduler will be created by the framework, which is basically just the main() method that is invoked from the command line. The framework creates the scheduler and registers it with Mesos:\r\n<pre>    FrameworkInfo.Builder frameworkBuilder = FrameworkInfo.newBuilder()\r\n        .setName(\"CodeFuturesExampleFramework\")\r\n        .setUser(\"\") // Have Mesos fill in the current user.\r\n        .setFailoverTimeout(frameworkFailoverTimeout); // timeout in seconds\r\n\r\n    final Scheduler scheduler = new ExampleScheduler(\r\n        imageName,\r\n        totalTasks\r\n    );\r\n\r\n    MesosSchedulerDriver driver = new MesosSchedulerDriver(scheduler,     frameworkBuilder.build(), masterIpAndPort);\r\n    driver.run();</pre>\r\n<h2>Running the Tutorial Code</h2>\r\nThese instructions are for running everything on a single node, but can easily be adapted to run on multiple nodes.\r\n\r\n<strong>Running Mesos master and slave:</strong>\r\n<pre>nohup mesos-master --ip=127.0.0.1 --work_dir=/tmp &gt;mesos-master.log 2&gt;&amp;1 &amp;\r\n\r\nnohup mesos-slave --master=127.0.0.1:5050 --containerizers=docker,mesos &gt;mesos-slave.log 2&gt;&amp;1 &amp;</pre>\r\n<strong>Checkout the code from the github repo:</strong>\r\n<pre>git clone https://github.com/codefutures/mesos-docker-tutorial.git\r\ncd mesos-docker-tutorial\r\nmvn package</pre>\r\n<strong>Run the code:</strong>\r\n\r\nLaunch the framework to run 2 instances of the fedora/apache image.\r\n<pre>java -classpath target/cf-tutorial-mesos-docker-1.0-SNAPSHOT-jar-with-dependencies.jar com.codefutures.tutorial.mesos.docker.ExampleFramework 127.0.0.1:5050 fedora/apache 2</pre>\r\n<strong>The framework should output logging like this:</strong>\r\n<pre>2014-10-01 14:37:09,896 INFO c.c.t.m.d.ExampleScheduler [Thread-1] registered() master=16777343:5050, framework=value: \"20141001-122042-16777343-5050-17935-0015\"\r\n\r\n 2014-10-01 14:37:09,903 INFO c.c.t.m.d.ExampleScheduler [Thread-2] resourceOffers() with 1 offers\r\n 2014-10-01 14:37:09,905 INFO c.c.t.m.d.ExampleScheduler [Thread-2] Launching task 1\r\n 2014-10-01 14:37:11,567 INFO c.c.t.m.d.ExampleScheduler [Thread-3] statusUpdate() task 1 is in state TASK_RUNNING\r\n 2014-10-01 14:37:11,567 INFO c.c.t.m.d.ExampleScheduler [Thread-3] Number of instances: pending=0, running=1\r\n 2014-10-01 14:37:11,771 INFO c.c.t.m.d.ExampleScheduler [Thread-4] resourceOffers() with 1 offers\r\n 2014-10-01 14:37:11,771 INFO c.c.t.m.d.ExampleScheduler [Thread-4] Launching task 2\r\n 2014-10-01 14:37:13,572 INFO c.c.t.m.d.ExampleScheduler [Thread-5] statusUpdate() task 2 is in state TASK_RUNNING\r\n 2014-10-01 14:37:13,572 INFO c.c.t.m.d.ExampleScheduler [Thread-5] Number of instances: pending=0, running=2\r\n 2014-10-01 14:37:13,774 INFO c.c.t.m.d.ExampleScheduler [Thread-6] resourceOffers() with 1 offers</pre>\r\n<strong>Running ‘docker ps’ should confirm that the containers have been launched:</strong>\r\n<pre>$ docker ps\r\nCONTAINER ID        IMAGE                  COMMAND             CREATED             STATUS              PORTS               NAMES\r\nf7e39be4d6d7        fedora/apache:latest   \"/run-apache.sh\"    9 seconds ago       Up 8 seconds        80/tcp              mesos-0295fc27-3c0e-4f26-8022-8301e64fc1ea   \r\n1aba90b99e04        fedora/apache:latest   \"/run-apache.sh\"    11 seconds ago      Up 10 seconds       80/tcp              mesos-70ab810e-a50a-4e5f-8145-90201fa89de1</pre>\r\n<h2>This Mesos +Docker tutorial should provide you the tools to do two things:</h2>\r\n<p style=\"text-align: left; padding-left: 30px;\"><strong>1. Write a Mesos Framework</strong>\r\n<strong> 2. Use the new Docker support in Mesos</strong></p>\r\n<strong>Get the full source code, available in github: <a href=\"https://github.com/codefutures/mesos-docker-tutorial\" target=\"_blank\">https://github.com/codefutures/mesos-docker-tutorial</a></strong>\r\n\r\n_____________________________________________\r\n<h2><strong>Ready to go Agile?</strong></h2>\r\n<a href=\"http://codefutures.com/agildata/\" target=\"_blank\"><img class=\"alignleft wp-image-14165 size-medium\" src=\"http://codefutures.com/wp-content/uploads/2014/07/AgilData-Twitter-300x207.jpg\" alt=\"AgilData-Twitter\" width=\"300\" height=\"207\" /></a>\r\nCheck out CodeFutures\' ground breaking new product <a href=\"http://codefutures.com/agildata/\" target=\"_blank\">AgilData</a>\r\n\r\nGet the <a href=\"http://codefutures.com/agile-data-white-paper/\" target=\"_blank\">FREE AgilData WhitePaper</a>, and <a href=\"http://codefutures.com/agile-data-white-paper/\" target=\"_blank\">sign up to be a beta tester here</a>\r\n\r\nContact us at <a href=\"mailto:support@codefutures.com\">support@codefutures.com</a> with your questions\r\n\r\n&nbsp;', 'Mesos + Docker Tutorial: How to Build Your Own Framework', '', 'inherit', 'open', 'open', '', '202-revision-v1', '', '', '2015-05-22 14:17:26', '2015-05-22 20:17:26', '', '202', 'http://www.agildata.com/202-revision-v1/', '0', 'revision', '', '0');
INSERT INTO `wpag_posts` VALUES('204', '5', '2015-05-22 14:19:08', '0000-00-00 00:00:00', '<h1>MySQL Replication HowTo Tutorial Video</h1>\r\n<h2>Introduction</h2>\r\nThis tutorial explains how to set up MySQL Replication between a master database and a single slave. There is a video demonstration of the whole proces and this page contains detailed step by step instructions.\r\n\r\n<object width=\"560\" height=\"340\" classid=\"clsid:d27cdb6e-ae6d-11cf-96b8-444553540000\" codebase=\"http://download.macromedia.com/pub/shockwave/cabs/flash/swflash.cab#version=6,0,40,0\"><param name=\"allowFullScreen\" value=\"true\" /><param name=\"allowscriptaccess\" value=\"always\" /><param name=\"src\" value=\"http://www.youtube.com/v/O2OHiS1LwSA&amp;hl=en&amp;fs=1&amp;\" /><param name=\"allowfullscreen\" value=\"true\" /><embed width=\"560\" height=\"340\" type=\"application/x-shockwave-flash\" src=\"http://www.youtube.com/v/O2OHiS1LwSA&amp;hl=en&amp;fs=1&amp;\" allowfullscreen=\"allowfullscreen\" allowscriptaccess=\"always\" allowfullscreen=\"allowfullscreen\" /></object>\r\n<h1>Detailed Instructions</h1>\r\nThe video and the following instructions describe how to set up MySQL replication. Our test setup consists of three servers named server1, server2 and server3. We use server1 to run our sample client application (the bookstore example that ships with <a href=\"/dbshards\">dbShards</a> and server2 and server3 are our master/slave servers, respectively.\r\n<h2>Step 1. MySQL Server Configuration</h2>\r\nThe first thing we need to do to set up replication is edit the MySQL configuration (usually located in /etc/my.cnf) to give each server a unique server-id. I am using an ID of 1 for the master and 2 for the slave, but you can use any unique IDs here.\r\n\r\nFor maximum reliability we also need to enable binary logging and ensure that each transaction is flushed to the log immediately on commit. These settings help minimize the number of transactions that are lost in the case of the master database failing.\r\n\r\nMySQL replication is asynchronous in nature, meaning that transactions are replicated to the slave db after they have been written to the master database and if the master database fails then any transactions not yet transmitted to the slave will be lost. If this is not acceptable for your application then you should consider alternatives such as dbShards Reliable Replication.\r\n<h3>Master</h3>\r\n<pre class=\"code\">[mysqld]\r\nserver-id=1\r\nlog-bin=mysql-bin\r\ninnodb_flush_log_at_trx_commit=1 \r\nsync_binlog=1</pre>\r\n<h3>Slave</h3>\r\n<pre class=\"code\">[mysqld]\r\nserver-id=2\r\nlog-bin=mysql-bin\r\ninnodb_flush_log_at_trx_commit=1 \r\nsync_binlog=1</pre>\r\nOnce the configuration file has been modified it is necessary to restart MySQL.\r\n<h2>Step 2. Create Replication User</h2>\r\nNext, we need to create a replication user. The slave will connect to the master server using these credentials.\r\n<pre class=\"code\">GRANT REPLICATION SLAVE ON *.* TO \'repl\'@\'%\' IDENTIFIED BY \'password\';</pre>\r\n<h2>Step 3. Start Slave</h2>\r\nNext, we need to run the SHOW MASTER STATUS command to see the current status of the master server.\r\n<pre class=\"code\">mysql&gt; show master status;\r\n+---------------+-----------+--------------+------------------+\r\n| File          | Position  | Binlog_Do_DB | Binlog_Ignore_DB |\r\n+---------------+-----------+--------------+------------------+\r\n| binlog.000005 | 849349769 |              |                  | \r\n+---------------+-----------+--------------+------------------+\r\n1 row in set (0.00 sec)</pre>\r\nThis output shows us the current position in the transaction log file. We need to take a note of these settings and run the CHANGE MASTER command on the slave to tell it where to start replicating from.\r\n<pre class=\"code\">CHANGE MASTER TO \r\nMASTER_HOST=\'server2\', \r\nMASTER_USER=\'repl\', \r\nMASTER_PASSWORD=\'password\', \r\nMASTER_LOG_FILE=\'binlog.000005\', \r\nMASTER_LOG_POS=849349769;</pre>\r\nOnce we have run the CHANGE MASTER command we can now start replication by executing the START SLAVE command on the slave databases.\r\n<pre class=\"code\">START SLAVE;</pre>\r\n<h2>Step 4. Run The Application</h2>\r\nI will now start the bookstore application running on server 1. This demo starts a number of threads simulating customers placing orders for books.\r\n<pre class=\"code\">replication-demo:\r\n     [java] Connecting to database...\r\n     [java] Creating Publishers...\r\n     [java] [TIME] Created 1000 Publishers.\r\n     [java] [TIME] Created 2000 Publishers.\r\n     [java] Creating Books...\r\n     [java] [TIME] Created 1000 Books.\r\n     [java] [TIME] Created 2000 Books.\r\n     [java] [TIME] Created 3000 Books.\r\n     [java] [TIME] Created 4000 Books.\r\n     [java] [TIME] Created 5000 Books.\r\n     [java] [TIME] Created 6000 Books.\r\n     [java] [TIME] Created 7000 Books.\r\n     [java] [TIME] Created 8000 Books.\r\n     [java] [TIME] Created 9000 Books.\r\n     [java] [TIME] Created 10000 Books.\r\n     [java] Starting Demo...\r\n     [java] Iteration #1: Throughput (TPS): read=0.0; write=299.4; error=0.0\r\n     [java] Iteration #2: Throughput (TPS): read=0.0; write=303.0; error=0.0</pre>\r\nWe should now see the row count increasing on both the master and slave databases, showing that replication is now working.\r\n<h2>Transaction Loss due to Replication Lag</h2>\r\nTo see what happens in the event of the master database or server failing, I am now going to remove the network cable from the master database server to simulate a failure.\r\n<pre class=\"code\">     [java] Iteration #14: Throughput (TPS): read=0.0; write=290.6; error=0.0\r\n     [java] Iteration #15: Throughput (TPS): read=0.0; write=293.4; error=0.0\r\n     [java] Iteration #16: Throughput (TPS): read=0.0; write=253.6; error=0.0\r\n     [java] Iteration #17: Throughput (TPS): read=0.0; write=0.0; error=0.0\r\n     [java] Iteration #18: Throughput (TPS): read=0.0; write=0.0; error=0.0</pre>\r\nWe can see that the client is now failing to write transactions so I am going to stop the client.\r\n\r\nI am now going to check the row count on the slave database.\r\n<pre class=\"code\">mysql&gt; SELECT COUNT(*) FROM dbs_bookstore.customer_order;\r\n+----------+\r\n| COUNT(*) |\r\n+----------+\r\n|    25278 | \r\n+----------+\r\n1 row in set (0.00 sec)</pre>\r\nI\'m re-connecting the network cable now so we can see how many orders were written to the master database.\r\n<pre class=\"code\">mysql&gt; SELECT COUNT(*) FROM dbs_bookstore.customer_order;\r\n+----------+\r\n| COUNT(*) |\r\n+----------+\r\n|    25323 | \r\n+----------+\r\n1 row in set (0.00 sec)</pre>\r\nAs you can see, 45 transactions have been lost. Depending on the nature of the application, this could be undesirable to say the least.\r\n\r\nThese numbers are from running with low throughput on low-cost servers but on a typical production setup with a higher load, a higher number of transactions could be lost.\r\n<h2>Summary</h2>\r\nMySQL Replication is easy to set up and use, and for many purposes it is a\r\nvery good tool. However, it is not intended for use in reliability or\r\nhigh-availability support, so keep that in mind when you decide to implement\r\nit for your application.\r\n\r\nIf you need the performance of MySQL Replication but without the risk of transaction loss, check out our <a href=\"/dbshards-replicate\">dbShards Reliable Replication</a> product. dbShards does support full transaction reliability, failover and high\r\navailability.', 'MySQL Replication HOWTO', '', 'draft', 'open', 'open', '', '', '', '', '2015-05-22 14:19:08', '2015-05-22 20:19:08', '', '0', 'http://www.agildata.com/?page_id=204', '0', 'page', '', '0');
INSERT INTO `wpag_posts` VALUES('205', '5', '2015-05-22 14:18:59', '2015-05-22 20:18:59', '<h1>MySQL Replication HowTo Tutorial Video</h1>\r\n<h2>Introduction</h2>\r\nThis tutorial explains how to set up MySQL Replication between a master database and a single slave. There is a video demonstration of the whole proces and this page contains detailed step by step instructions.\r\n\r\n<object width=\"560\" height=\"340\" classid=\"clsid:d27cdb6e-ae6d-11cf-96b8-444553540000\" codebase=\"http://download.macromedia.com/pub/shockwave/cabs/flash/swflash.cab#version=6,0,40,0\"><param name=\"allowFullScreen\" value=\"true\" /><param name=\"allowscriptaccess\" value=\"always\" /><param name=\"src\" value=\"http://www.youtube.com/v/O2OHiS1LwSA&amp;hl=en&amp;fs=1&amp;\" /><param name=\"allowfullscreen\" value=\"true\" /><embed width=\"560\" height=\"340\" type=\"application/x-shockwave-flash\" src=\"http://www.youtube.com/v/O2OHiS1LwSA&amp;hl=en&amp;fs=1&amp;\" allowfullscreen=\"allowfullscreen\" allowscriptaccess=\"always\" allowfullscreen=\"allowfullscreen\" /></object>\r\n<h1>Detailed Instructions</h1>\r\nThe video and the following instructions describe how to set up MySQL replication. Our test setup consists of three servers named server1, server2 and server3. We use server1 to run our sample client application (the bookstore example that ships with <a href=\"/dbshards\">dbShards</a> and server2 and server3 are our master/slave servers, respectively.\r\n<h2>Step 1. MySQL Server Configuration</h2>\r\nThe first thing we need to do to set up replication is edit the MySQL configuration (usually located in /etc/my.cnf) to give each server a unique server-id. I am using an ID of 1 for the master and 2 for the slave, but you can use any unique IDs here.\r\n\r\nFor maximum reliability we also need to enable binary logging and ensure that each transaction is flushed to the log immediately on commit. These settings help minimize the number of transactions that are lost in the case of the master database failing.\r\n\r\nMySQL replication is asynchronous in nature, meaning that transactions are replicated to the slave db after they have been written to the master database and if the master database fails then any transactions not yet transmitted to the slave will be lost. If this is not acceptable for your application then you should consider alternatives such as dbShards Reliable Replication.\r\n<h3>Master</h3>\r\n<pre class=\"code\">[mysqld]\r\nserver-id=1\r\nlog-bin=mysql-bin\r\ninnodb_flush_log_at_trx_commit=1 \r\nsync_binlog=1</pre>\r\n<h3>Slave</h3>\r\n<pre class=\"code\">[mysqld]\r\nserver-id=2\r\nlog-bin=mysql-bin\r\ninnodb_flush_log_at_trx_commit=1 \r\nsync_binlog=1</pre>\r\nOnce the configuration file has been modified it is necessary to restart MySQL.\r\n<h2>Step 2. Create Replication User</h2>\r\nNext, we need to create a replication user. The slave will connect to the master server using these credentials.\r\n<pre class=\"code\">GRANT REPLICATION SLAVE ON *.* TO \'repl\'@\'%\' IDENTIFIED BY \'password\';</pre>\r\n<h2>Step 3. Start Slave</h2>\r\nNext, we need to run the SHOW MASTER STATUS command to see the current status of the master server.\r\n<pre class=\"code\">mysql&gt; show master status;\r\n+---------------+-----------+--------------+------------------+\r\n| File          | Position  | Binlog_Do_DB | Binlog_Ignore_DB |\r\n+---------------+-----------+--------------+------------------+\r\n| binlog.000005 | 849349769 |              |                  | \r\n+---------------+-----------+--------------+------------------+\r\n1 row in set (0.00 sec)</pre>\r\nThis output shows us the current position in the transaction log file. We need to take a note of these settings and run the CHANGE MASTER command on the slave to tell it where to start replicating from.\r\n<pre class=\"code\">CHANGE MASTER TO \r\nMASTER_HOST=\'server2\', \r\nMASTER_USER=\'repl\', \r\nMASTER_PASSWORD=\'password\', \r\nMASTER_LOG_FILE=\'binlog.000005\', \r\nMASTER_LOG_POS=849349769;</pre>\r\nOnce we have run the CHANGE MASTER command we can now start replication by executing the START SLAVE command on the slave databases.\r\n<pre class=\"code\">START SLAVE;</pre>\r\n<h2>Step 4. Run The Application</h2>\r\nI will now start the bookstore application running on server 1. This demo starts a number of threads simulating customers placing orders for books.\r\n<pre class=\"code\">replication-demo:\r\n     [java] Connecting to database...\r\n     [java] Creating Publishers...\r\n     [java] [TIME] Created 1000 Publishers.\r\n     [java] [TIME] Created 2000 Publishers.\r\n     [java] Creating Books...\r\n     [java] [TIME] Created 1000 Books.\r\n     [java] [TIME] Created 2000 Books.\r\n     [java] [TIME] Created 3000 Books.\r\n     [java] [TIME] Created 4000 Books.\r\n     [java] [TIME] Created 5000 Books.\r\n     [java] [TIME] Created 6000 Books.\r\n     [java] [TIME] Created 7000 Books.\r\n     [java] [TIME] Created 8000 Books.\r\n     [java] [TIME] Created 9000 Books.\r\n     [java] [TIME] Created 10000 Books.\r\n     [java] Starting Demo...\r\n     [java] Iteration #1: Throughput (TPS): read=0.0; write=299.4; error=0.0\r\n     [java] Iteration #2: Throughput (TPS): read=0.0; write=303.0; error=0.0</pre>\r\nWe should now see the row count increasing on both the master and slave databases, showing that replication is now working.\r\n<h2>Transaction Loss due to Replication Lag</h2>\r\nTo see what happens in the event of the master database or server failing, I am now going to remove the network cable from the master database server to simulate a failure.\r\n<pre class=\"code\">     [java] Iteration #14: Throughput (TPS): read=0.0; write=290.6; error=0.0\r\n     [java] Iteration #15: Throughput (TPS): read=0.0; write=293.4; error=0.0\r\n     [java] Iteration #16: Throughput (TPS): read=0.0; write=253.6; error=0.0\r\n     [java] Iteration #17: Throughput (TPS): read=0.0; write=0.0; error=0.0\r\n     [java] Iteration #18: Throughput (TPS): read=0.0; write=0.0; error=0.0</pre>\r\nWe can see that the client is now failing to write transactions so I am going to stop the client.\r\n\r\nI am now going to check the row count on the slave database.\r\n<pre class=\"code\">mysql&gt; SELECT COUNT(*) FROM dbs_bookstore.customer_order;\r\n+----------+\r\n| COUNT(*) |\r\n+----------+\r\n|    25278 | \r\n+----------+\r\n1 row in set (0.00 sec)</pre>\r\nI\'m re-connecting the network cable now so we can see how many orders were written to the master database.\r\n<pre class=\"code\">mysql&gt; SELECT COUNT(*) FROM dbs_bookstore.customer_order;\r\n+----------+\r\n| COUNT(*) |\r\n+----------+\r\n|    25323 | \r\n+----------+\r\n1 row in set (0.00 sec)</pre>\r\nAs you can see, 45 transactions have been lost. Depending on the nature of the application, this could be undesirable to say the least.\r\n\r\nThese numbers are from running with low throughput on low-cost servers but on a typical production setup with a higher load, a higher number of transactions could be lost.\r\n<h2>Summary</h2>\r\nMySQL Replication is easy to set up and use, and for many purposes it is a\r\nvery good tool. However, it is not intended for use in reliability or\r\nhigh-availability support, so keep that in mind when you decide to implement\r\nit for your application.\r\n\r\nIf you need the performance of MySQL Replication but without the risk of transaction loss, check out our <a href=\"/dbshards-replicate\">dbShards Reliable Replication</a> product. dbShards does support full transaction reliability, failover and high\r\navailability.', 'MySQL Replication HOWTO', '', 'inherit', 'open', 'open', '', '204-revision-v1', '', '', '2015-05-22 14:18:59', '2015-05-22 20:18:59', '', '204', 'http://www.agildata.com/204-revision-v1/', '0', 'revision', '', '0');
INSERT INTO `wpag_posts` VALUES('206', '5', '2015-05-22 14:20:41', '0000-00-00 00:00:00', '<h1>MySQL-Ruby Tutorial and Code Samples</h1>\r\n<h2>Introduction</h2>\r\nThis short article demonstrates how to write a Ruby implementation of the DAO (Data Access Object) design pattern for interacting with a MySQL database using the mysql-ruby library.\r\n<h2>Installing mysql-ruby</h2>\r\nDownload mysql-ruby from http://www.tmtm.org/en/mysql/ruby/ and follow the installation instructions on that page to make and install Ruby from source.\r\n\r\nSet the RUBYLIB environment variable so that mysql-ruby can be located by the Ruby interpreter. For example:\r\n<p class=\"code\">export RUBYLIB=~/mysql-ruby-2.8/</p>\r\n\r\n<h2>Write a DTO class</h2>\r\nWrite a class to represent the data for a single row in a table. This is often referred to as a Data Transfer Object (DTO) or Value Object (VO). This class simply contains a single attribute for each column in the table. We will pass instances of this class to the DAO object when we want to insert, update or delete a row and we will receive instances of this class when we invoke a \'finder\' on the DAO object.\r\n<h3>Example of simple DTO class:</h3>\r\n<pre class=\"prettyprint\">class Country\r\n\r\n  def id; @id; end  # The getter method for @id\r\n  def name; @name; end  # The getter method for @name\r\n\r\n  def id=(value)  # The setter method for @id\r\n    @id =  value\r\n  end\r\n\r\n  def name=(value)  # The setter method for @name\r\n    @name =  value\r\n  end\r\nend</pre>\r\n<h2>Writing the DAO class</h2>\r\nThe DAO class will contain an insert, update and delete methods and a number of finder methods which perform pre-defined select queries.\r\n\r\nThe first step to writing the DAO class it to provide a constructor that stores the mysql-ruby connection object.\r\n<pre class=\"prettyprint\">class CountryDao\r\n\r\n  def initialize(my)\r\n    @my = my;\r\n  end\r\n\r\n  # other methods will go here shortly ...\r\nend</pre>\r\n<h2>Example DAO insert method</h2>\r\nThe insert method creates a prepared statement (a mysql-ruby Stmt object that can have parameters bound to it before execution). Here is a sample insert method that binds parameters to the insert statement based on the supplied DTO, which should be an instance of the Country class defined earlier in the tutorial.\r\n<pre class=\"prettyprint\">def insert(dto)\r\n  sql = \"INSERT INTO country ( id, name ) VALUES ( ?, ? )\"\r\n  st = @my.prepare(sql)\r\n  st.execute(dto.id, dto.name)\r\n  st.close\r\nend</pre>\r\n<h2>Example DAO update method</h2>\r\nThe update method is very similar to the insert method.\r\n<pre class=\"prettyprint\">def update(dto)\r\n  sql = \"UPDATE country SET id = ?, name = ? WHERE id = ?\";\r\n  st = @my.prepare(sql);\r\n  st.execute(dto.id, dto.name, dto.id);\r\n  st.close\r\nend</pre>\r\n<h2>Example DAO delete method</h2>\r\nThe delete method is very similar to the insert and update methods method.\r\n<pre class=\"prettyprint\">def delete(dto)\r\n  sql = \"DELETE FROM country WHERE id = ?\"\r\n  st = @my.prepare(sql)\r\n  st.execute(dto.id)\r\n  st.close\r\nend</pre>\r\n<h2>Writing the DAO finder methods</h2>\r\nFinder methods execute a SELECT statement and then fetch results from the database, creating a DTO instance for each row.\r\n<pre class=\"prettyprint\">def findAll();\r\n  sql = \"SELECT id, name FROM country ORDER BY id\"\r\n  st = @my.prepare(sql)\r\n  st.execute()\r\n  result = fetchResults(st)\r\n  st.close\r\n  return result\r\nend</pre>\r\n<pre class=\"prettyprint\">def findWhereNameEquals(name);\r\n  sql = \"SELECT id, name FROM country WHERE name = ?\"\r\n  st = @my.prepare(sql)\r\n  st.execute(name)\r\n  result = fetchResults(st)\r\n  st.close\r\n  return result\r\nend</pre>\r\nThe finder methods rely on a shared fetchResults() method.\r\n<pre class=\"prettyprint\">def fetchResults(stmt)\r\n  rows = []\r\n  while row = stmt.fetch do\r\n    dto = Country.new\r\n    dto.id = row[0]\r\n    dto.name = row[1]\r\n    rows &lt;&lt; dto\r\n  end\r\n  return rows\r\nend</pre>\r\n<h2>Example client code to invoke the Ruby DAO</h2>\r\nIt is necessary for the Ruby script to import the mysql-ruby library and the DAO/DTO classes.\r\n<pre class=\"prettyprint\">require \"mysql\"\r\nrequire \"CountryDao\"\r\nrequire \"Country\"</pre>\r\nThe following lines of code establish a connection with a MySQL database.\r\n<pre class=\"prettyprint\">my = Mysql.new(\"localhost\", \"myusername\", \"mypassword\", \"mydatabase\")\r\nmy.autocommit(false);</pre>\r\n<h3>Inserting a row</h3>\r\nThe following code creates and populates a Country DTO and then passes it the DAO which inserts a row into the database.\r\n<pre class=\"prettyprint\">country = Country.new();\r\ncountry.id = 1;\r\ncountry.name = \"United States\"; \r\ncountryDao = CountryDao.new(my);\r\ncountryDao.insert(country);</pre>\r\n<h3>Finding rows</h3>\r\nThe following code gets a list of countries from the database.\r\n<pre class=\"prettyprint\">countryDao.findAll.each() { |y|\r\n  printf \"country: %s\\n\", y.name \r\n}</pre>\r\nThe following code retrieves a country by name.\r\n<pre class=\"prettyprint\">usa = countryDao.findWhereNameEquals(\"United States\")</pre>\r\n<h3>Updating a row</h3>\r\n<pre class=\"prettyprint\">usa.name = \"United States of America\"\r\ncountryDao.update(usa)</pre>\r\n<h2>Ruby DAO Code Generator</h2>\r\nThe code samples in this tutorial were generated directly from a database schema using FireStorm/DAO Enterprise Edition 4.0 which is available for download free of charge <a href=\"/products/firestorm/download/\">here</a>.', 'MySQL-Ruby Tutorial and Code Samples', '', 'draft', 'open', 'open', '', 'mysql-ruby', '', '', '2015-05-22 14:20:41', '2015-05-22 20:20:41', '', '0', 'http://www.agildata.com/?page_id=206', '0', 'page', '', '0');
INSERT INTO `wpag_posts` VALUES('207', '5', '2015-05-22 14:20:34', '2015-05-22 20:20:34', '<h1>MySQL-Ruby Tutorial and Code Samples</h1>\r\n<h2>Introduction</h2>\r\nThis short article demonstrates how to write a Ruby implementation of the DAO (Data Access Object) design pattern for interacting with a MySQL database using the mysql-ruby library.\r\n<h2>Installing mysql-ruby</h2>\r\nDownload mysql-ruby from http://www.tmtm.org/en/mysql/ruby/ and follow the installation instructions on that page to make and install Ruby from source.\r\n\r\nSet the RUBYLIB environment variable so that mysql-ruby can be located by the Ruby interpreter. For example:\r\n<p class=\"code\">export RUBYLIB=~/mysql-ruby-2.8/</p>\r\n\r\n<h2>Write a DTO class</h2>\r\nWrite a class to represent the data for a single row in a table. This is often referred to as a Data Transfer Object (DTO) or Value Object (VO). This class simply contains a single attribute for each column in the table. We will pass instances of this class to the DAO object when we want to insert, update or delete a row and we will receive instances of this class when we invoke a \'finder\' on the DAO object.\r\n<h3>Example of simple DTO class:</h3>\r\n<pre class=\"prettyprint\">class Country\r\n\r\n  def id; @id; end  # The getter method for @id\r\n  def name; @name; end  # The getter method for @name\r\n\r\n  def id=(value)  # The setter method for @id\r\n    @id =  value\r\n  end\r\n\r\n  def name=(value)  # The setter method for @name\r\n    @name =  value\r\n  end\r\nend</pre>\r\n<h2>Writing the DAO class</h2>\r\nThe DAO class will contain an insert, update and delete methods and a number of finder methods which perform pre-defined select queries.\r\n\r\nThe first step to writing the DAO class it to provide a constructor that stores the mysql-ruby connection object.\r\n<pre class=\"prettyprint\">class CountryDao\r\n\r\n  def initialize(my)\r\n    @my = my;\r\n  end\r\n\r\n  # other methods will go here shortly ...\r\nend</pre>\r\n<h2>Example DAO insert method</h2>\r\nThe insert method creates a prepared statement (a mysql-ruby Stmt object that can have parameters bound to it before execution). Here is a sample insert method that binds parameters to the insert statement based on the supplied DTO, which should be an instance of the Country class defined earlier in the tutorial.\r\n<pre class=\"prettyprint\">def insert(dto)\r\n  sql = \"INSERT INTO country ( id, name ) VALUES ( ?, ? )\"\r\n  st = @my.prepare(sql)\r\n  st.execute(dto.id, dto.name)\r\n  st.close\r\nend</pre>\r\n<h2>Example DAO update method</h2>\r\nThe update method is very similar to the insert method.\r\n<pre class=\"prettyprint\">def update(dto)\r\n  sql = \"UPDATE country SET id = ?, name = ? WHERE id = ?\";\r\n  st = @my.prepare(sql);\r\n  st.execute(dto.id, dto.name, dto.id);\r\n  st.close\r\nend</pre>\r\n<h2>Example DAO delete method</h2>\r\nThe delete method is very similar to the insert and update methods method.\r\n<pre class=\"prettyprint\">def delete(dto)\r\n  sql = \"DELETE FROM country WHERE id = ?\"\r\n  st = @my.prepare(sql)\r\n  st.execute(dto.id)\r\n  st.close\r\nend</pre>\r\n<h2>Writing the DAO finder methods</h2>\r\nFinder methods execute a SELECT statement and then fetch results from the database, creating a DTO instance for each row.\r\n<pre class=\"prettyprint\">def findAll();\r\n  sql = \"SELECT id, name FROM country ORDER BY id\"\r\n  st = @my.prepare(sql)\r\n  st.execute()\r\n  result = fetchResults(st)\r\n  st.close\r\n  return result\r\nend</pre>\r\n<pre class=\"prettyprint\">def findWhereNameEquals(name);\r\n  sql = \"SELECT id, name FROM country WHERE name = ?\"\r\n  st = @my.prepare(sql)\r\n  st.execute(name)\r\n  result = fetchResults(st)\r\n  st.close\r\n  return result\r\nend</pre>\r\nThe finder methods rely on a shared fetchResults() method.\r\n<pre class=\"prettyprint\">def fetchResults(stmt)\r\n  rows = []\r\n  while row = stmt.fetch do\r\n    dto = Country.new\r\n    dto.id = row[0]\r\n    dto.name = row[1]\r\n    rows &lt;&lt; dto\r\n  end\r\n  return rows\r\nend</pre>\r\n<h2>Example client code to invoke the Ruby DAO</h2>\r\nIt is necessary for the Ruby script to import the mysql-ruby library and the DAO/DTO classes.\r\n<pre class=\"prettyprint\">require \"mysql\"\r\nrequire \"CountryDao\"\r\nrequire \"Country\"</pre>\r\nThe following lines of code establish a connection with a MySQL database.\r\n<pre class=\"prettyprint\">my = Mysql.new(\"localhost\", \"myusername\", \"mypassword\", \"mydatabase\")\r\nmy.autocommit(false);</pre>\r\n<h3>Inserting a row</h3>\r\nThe following code creates and populates a Country DTO and then passes it the DAO which inserts a row into the database.\r\n<pre class=\"prettyprint\">country = Country.new();\r\ncountry.id = 1;\r\ncountry.name = \"United States\"; \r\ncountryDao = CountryDao.new(my);\r\ncountryDao.insert(country);</pre>\r\n<h3>Finding rows</h3>\r\nThe following code gets a list of countries from the database.\r\n<pre class=\"prettyprint\">countryDao.findAll.each() { |y|\r\n  printf \"country: %s\\n\", y.name \r\n}</pre>\r\nThe following code retrieves a country by name.\r\n<pre class=\"prettyprint\">usa = countryDao.findWhereNameEquals(\"United States\")</pre>\r\n<h3>Updating a row</h3>\r\n<pre class=\"prettyprint\">usa.name = \"United States of America\"\r\ncountryDao.update(usa)</pre>\r\n<h2>Ruby DAO Code Generator</h2>\r\nThe code samples in this tutorial were generated directly from a database schema using FireStorm/DAO Enterprise Edition 4.0 which is available for download free of charge <a href=\"/products/firestorm/download/\">here</a>.', 'MySQL-Ruby Tutorial and Code Samples', '', 'inherit', 'open', 'open', '', '206-revision-v1', '', '', '2015-05-22 14:20:34', '2015-05-22 20:20:34', '', '206', 'http://www.agildata.com/206-revision-v1/', '0', 'revision', '', '0');
INSERT INTO `wpag_posts` VALUES('208', '5', '2015-05-22 14:22:21', '0000-00-00 00:00:00', '<h3>Technology Partners</h3>\r\nTechnology Partners are independent software vendors (ISVs) that have products that are complementary to CodeFutures\' products. A typical end-user solution will involve multiple systems and multiple complementary technologies, which is why CodeFutures is partnering with the best-of-breed vendors in several complementary technology areas. Additional details technology partnerships currently under development are available under Non-Disclosure Agreement. For further details, please contact <a href=\"mailto:sales@codefutures.com\">sales@codefutures.com</a>.\r\n<h3>Solutions Partners: Helping Consultings Serve Their Clients</h3>\r\nSolution Partners receive marketing support, access to CodeFutures\' resources, and full technical and commercial product support. This partner category is designed to provide Information Technology consultants with support in building, deploying, and supporting commercial applications for their clients. For further details, please contact <a href=\"mailto:sales@codefutures.com\">sales@codefutures.com</a>.\r\n<h3>Current Technology Industry Partners</h3>\r\nGoogle Cloud Platform enables developers to build, test and deploy applications on Google’s highly-scalable and reliable infrastructure. Choose from computing, storage and application services for your web, mobile and backend solutions. <a href=\"https://cloud.google.com/\" target=\"_blank\">https://cloud.google.com/</a>\r\nOpenCrowd is a design &amp; technology services firm that builds custom web solutions for enterprise clients and start-ups on-premise and in the cloud. For the last 10 years we have been helping our clients innovate and launch products and solutions within 90 days. Our custom solutions range from 360 View Dashboards and Search Powered Applications to Business Social Applications. We have a strong history of leveraging cutting edge business concepts and technologies to build innovative solutions. For more information please visit us at http://www.opencrowd.com/\r\nRightScale is the leader in cloud computing management. Founded in 2006, the company offers a fully automated cloud management platform that enables organizations to easily deploy and manage business critical applications across multiple clouds with complete control and portability. The RightScale Cloud Management Platform is delivered as \"software as a service\" (SAAS) and is available in a range of editions, from the free Developer Edition to Enterprise Editions. To date, thousands of deployments and over 350,000 servers have been launched on the RightScale Platform for leading companies such as Animoto, Playfish, Sling Media and TC3.To learn more about RightScale, please click <a href=\"http://www.rightscale.com/lp/default.php?ls=Referral&amp;sd=Partner_Codefutures_Partnerpage&amp;campaign=%2070170000000KyQN\">here</a>.\r\nMySQL AB develops and markets a family of high performance, affordable database servers and tools. Our mission is to make superior data management available and affordable for all. We contribute to building the mission-critical, high-volume systems and products worldwide.\r\nSun\'s iForce Initiative brings together Sun and its best of breed partners worldwide to deliver proven solutions that reduce cost and time to market.\r\nCodeFutures FireStorm/DAO integrates seamlessly with IBM Informix, IBM DB2, and IBM WebSphere Application server.\r\n<table cellspacing=\"5\" cellpadding=\"5\">\r\n<tbody>\r\n<tr>\r\n<td><a href=\"http://codefutures.com/wp-content/uploads/2014/03/Google_Cloud.png\"><img class=\"size-full wp-image-14387 aligncenter\" src=\"http://codefutures.com/wp-content/uploads/2014/03/Google_Cloud.png\" alt=\"Google_Cloud\" width=\"260\" height=\"175\" /></a></td>\r\n</tr>\r\n<tr>\r\n<td align=\"center\" valign=\"top\"><img class=\"size-full wp-image-14386 aligncenter\" src=\"http://codefutures.com/wp-content/uploads/2014/03/OC_logo_complete_design_technology-300x66.png\" alt=\"OC_logo_complete_design_technology-300x66\" width=\"300\" height=\"66\" /></td>\r\n<td align=\"center\" valign=\"center\"><img src=\"/img/rightscale_logo_white_bluebgd.gif\" alt=\"\" /></td>\r\n<td align=\"center\" valign=\"center\"><img src=\"/img/logo/mysqldevc.gif\" alt=\"\" /></td>\r\n<td align=\"center\" width=\"200\"><img src=\"/img/logo/iforce.gif\" alt=\"\" /></td>\r\n<td align=\"center\" valign=\"top\"><img src=\"/img/logo/ibmbusinesspartner.gif\" alt=\"\" /></td>\r\n</tr>\r\n</tbody>\r\n</table>\r\n<h3>Industry Participation</h3>\r\nCodeFutures is a member of a number of industry organizations such as the Software Pipelines Alliance, Open SOA Collaboration, and Code Generation Network. For further details, please contact <a href=\"mailto:sales@codefutures.com\">sales@codefutures.com</a>.', 'Partners, Technology Partners, Solution Partners, and Industry Partnerships and Participation', '', 'draft', 'open', 'open', '', 'partners', '', '', '2015-05-22 14:22:21', '2015-05-22 20:22:21', '', '0', 'http://www.agildata.com/?page_id=208', '0', 'page', '', '0');
INSERT INTO `wpag_posts` VALUES('209', '5', '2015-05-22 14:22:09', '2015-05-22 20:22:09', '<h3>Technology Partners</h3>\r\nTechnology Partners are independent software vendors (ISVs) that have products that are complementary to CodeFutures\' products. A typical end-user solution will involve multiple systems and multiple complementary technologies, which is why CodeFutures is partnering with the best-of-breed vendors in several complementary technology areas. Additional details technology partnerships currently under development are available under Non-Disclosure Agreement. For further details, please contact <a href=\"mailto:sales@codefutures.com\">sales@codefutures.com</a>.\r\n<h3>Solutions Partners: Helping Consultings Serve Their Clients</h3>\r\nSolution Partners receive marketing support, access to CodeFutures\' resources, and full technical and commercial product support. This partner category is designed to provide Information Technology consultants with support in building, deploying, and supporting commercial applications for their clients. For further details, please contact <a href=\"mailto:sales@codefutures.com\">sales@codefutures.com</a>.\r\n<h3>Current Technology Industry Partners</h3>\r\nGoogle Cloud Platform enables developers to build, test and deploy applications on Google’s highly-scalable and reliable infrastructure. Choose from computing, storage and application services for your web, mobile and backend solutions. <a href=\"https://cloud.google.com/\" target=\"_blank\">https://cloud.google.com/</a>\r\nOpenCrowd is a design &amp; technology services firm that builds custom web solutions for enterprise clients and start-ups on-premise and in the cloud. For the last 10 years we have been helping our clients innovate and launch products and solutions within 90 days. Our custom solutions range from 360 View Dashboards and Search Powered Applications to Business Social Applications. We have a strong history of leveraging cutting edge business concepts and technologies to build innovative solutions. For more information please visit us at http://www.opencrowd.com/\r\nRightScale is the leader in cloud computing management. Founded in 2006, the company offers a fully automated cloud management platform that enables organizations to easily deploy and manage business critical applications across multiple clouds with complete control and portability. The RightScale Cloud Management Platform is delivered as \"software as a service\" (SAAS) and is available in a range of editions, from the free Developer Edition to Enterprise Editions. To date, thousands of deployments and over 350,000 servers have been launched on the RightScale Platform for leading companies such as Animoto, Playfish, Sling Media and TC3.To learn more about RightScale, please click <a href=\"http://www.rightscale.com/lp/default.php?ls=Referral&amp;sd=Partner_Codefutures_Partnerpage&amp;campaign=%2070170000000KyQN\">here</a>.\r\nMySQL AB develops and markets a family of high performance, affordable database servers and tools. Our mission is to make superior data management available and affordable for all. We contribute to building the mission-critical, high-volume systems and products worldwide.\r\nSun\'s iForce Initiative brings together Sun and its best of breed partners worldwide to deliver proven solutions that reduce cost and time to market.\r\nCodeFutures FireStorm/DAO integrates seamlessly with IBM Informix, IBM DB2, and IBM WebSphere Application server.\r\n<table cellspacing=\"5\" cellpadding=\"5\">\r\n<tbody>\r\n<tr>\r\n<td><a href=\"http://codefutures.com/wp-content/uploads/2014/03/Google_Cloud.png\"><img class=\"size-full wp-image-14387 aligncenter\" src=\"http://codefutures.com/wp-content/uploads/2014/03/Google_Cloud.png\" alt=\"Google_Cloud\" width=\"260\" height=\"175\" /></a></td>\r\n</tr>\r\n<tr>\r\n<td align=\"center\" valign=\"top\"><img class=\"size-full wp-image-14386 aligncenter\" src=\"http://codefutures.com/wp-content/uploads/2014/03/OC_logo_complete_design_technology-300x66.png\" alt=\"OC_logo_complete_design_technology-300x66\" width=\"300\" height=\"66\" /></td>\r\n<td align=\"center\" valign=\"center\"><img src=\"/img/rightscale_logo_white_bluebgd.gif\" alt=\"\" /></td>\r\n<td align=\"center\" valign=\"center\"><img src=\"/img/logo/mysqldevc.gif\" alt=\"\" /></td>\r\n<td align=\"center\" width=\"200\"><img src=\"/img/logo/iforce.gif\" alt=\"\" /></td>\r\n<td align=\"center\" valign=\"top\"><img src=\"/img/logo/ibmbusinesspartner.gif\" alt=\"\" /></td>\r\n</tr>\r\n</tbody>\r\n</table>\r\n<h3>Industry Participation</h3>\r\nCodeFutures is a member of a number of industry organizations such as the Software Pipelines Alliance, Open SOA Collaboration, and Code Generation Network. For further details, please contact <a href=\"mailto:sales@codefutures.com\">sales@codefutures.com</a>.', 'Partners, Technology Partners, Solution Partners, and Industry Partnerships and Participation', '', 'inherit', 'open', 'open', '', '208-revision-v1', '', '', '2015-05-22 14:22:09', '2015-05-22 20:22:09', '', '208', 'http://www.agildata.com/208-revision-v1/', '0', 'revision', '', '0');
INSERT INTO `wpag_posts` VALUES('210', '5', '2015-05-22 14:23:37', '0000-00-00 00:00:00', '<h1>Real Time Big Data: An Agile Approach</h1>\r\n<h2>Agile Big Data</h2>\r\nLearn all about the the agile approach to real-time big data in this exclusive white paper. To receive the entire report, please register below.\r\n<h3><strong>Introduction</strong></h3>\r\nBig Data is growing fast, from a multitude of sources – in fact we are in the midst of a true Big Data explosion.  In fact, as of 2012, every day 2.5 exabytes (2.5×1018) of data were created . With new agile Big Data sources coming online all the time, it is worldwide data growth could easily 10X this figure in the coming years.\r\n\r\n<a href=\"/wp-content/uploads/2014/07/AgilData-white-paper-Figure-1.jpg\"><img src=\"/wp-content/uploads/2014/07/AgilData-white-paper-Figure-1.jpg\" alt=\"AgilData white paper Figure 1\" width=\"524\" height=\"324\" /></a>\r\n<h3><strong>Figure 1 Big Data is growing from a multitude of sources</strong></h3>\r\nBig Data sources include Search Engines, Social Networks, Mobile Devices, System Data, and now the Internet of Things (IoT). Virtually every aspect of our lives will be impacted by data as ever-more capable devices and smart components are introduced to society. These components generate data – lots of it – often in ways we never imagined feasible just a few short years ago.\r\n\r\nWe should not forget to also include the impact of growing transaction systems on <strong>agile Big Data</strong>. Many operational databases are growing rapidly as well, expanding in to the multi-terabyte range and beyond. These systems provide a rich and often vital source of Big Data, one that must not only provide answers to complex queries, but additionally support the traditional needs of transactionality, data integrity, high performance and reliability.\r\n\r\nRecently another new development has emerged in the Big Data landscape: the need to know what is happening now, in real time. It is no longer adequate to understand what is contained in Big Data sources last month, last week or even yesterday – companies need to see a real time view of Big Data as it happens. With this type of visibility, organizations can respond immediately to changes in areas such as the market, user patterns, fraud detection, and many others.\r\n\r\nVirtually all organizations and business will be affected by and need access to Big Data – even those that are not directly in the fields shown in Figure 1. Here are just a few simple examples:\r\n\r\n• An online game application may generate its own Big Data for tracking user actions during gameplay, yet also needs to access Social Network feeds to interact with its users on a real time basis.\r\n• A healthcare practitioner will need access to many Big Data stores, such as government-provided disease tracking databases and centralized electronic healthcare records.\r\n•An aircraft mechanic must access up-to-date services bulletins for the specific aircraft being worked on at that moment, in order to perform potentially critical (not to mention life-saving) maintenance.\r\n• Climatologists must integrate and study Big Data from several sources to gauge the impact of climate change on the environment, the population and our vital physical resources.\r\n•A CEO or other executives in large organizations must have improved visibility into both operational data within their companies, as well as insights into the external Big Data sources that affect the business and its growth.\r\n\r\nWe have also seen an emergence of a whole new class of Big Data applications; applications that aggregate Big Data from a plethora of sources, to extract new meaning and value by combining, interpreting and creating new views across these data sources.\r\n\r\nIn short, Big Data and its impact will affect us all, often in ways that have not yet been conceived.\r\n\r\nThus as this trend toward ubiquitous Big Data rapidly evolves, the need for organizations to tap into and leverage these Big Data sources, for strategic advantage, competitive positioning, and to meet the emerging needs of users becomes a critical concern. Organizations that do not capitalize on the Big Data explosion will be left behind, with competitive offerings outstripping their capabilities.\r\n\r\nAs the volume, number of sources, complexity and demands of Big Data infrastructures increase, organizations are struggling to manage, interpret and extract real meaning from all this data. In other words, what does all this data mean and how can we make it valuable to the organizations that collect or access this data?\r\n\r\n<a href=\"/wp-content/uploads/2014/07/AgilData-white-paper-Figure-2.jpg\"><img src=\"/wp-content/uploads/2014/07/AgilData-white-paper-Figure-2.jpg\" alt=\"AgilData white paper Figure 2\" width=\"498\" height=\"237\" /></a>\r\n<h3><strong>Figure 2 What does all this Big Data mean?</strong></h3>\r\nAfter spending considerable time looking at this problem, it is apparent that we need a different view of Big Data, one that is flexible and agile in nature. We need to be able to access fast-growing <em>agile Big Data</em> in a way that is natural to our applications and needs.\r\n\r\nThis is emphasized by the fact that most organizations today utilize agile software development methodologies, an iterative approach to building features and functionality. In some cases the entire company or organization also aspires to function in an agile manner, allowing fast and nimble response to changes in the marketplace and various competitive threats.\r\nThus if being agile is our goal when it comes to software development processes and organizational management, why is it that data infrastructures continue to be a barrier to an agile approach? It can be simply stated this way:\r\n<h3 style=\"color: red;\"><em>Your process is agile…Why isn’t your data?</em></h3>\r\nConsidering this set of emerging problems, it is time to reconsider how we have been looking at data, and take an entirely new view of the problem.\r\n<h3><strong>Have we been Looking at Databases Wrong all this Time?</strong></h3>\r\nToday’s databases are typically used as static repositories, with this simple flow:\r\n<p style=\"padding-left: 30px;\">- Create an initial data structure (schema)\r\n- Put data into the database\r\n- Retrieve data from the database</p>\r\nThis is a totally understandable and natural way to look at a data infrastructure, after all we normally consider that a database is a persistent repository for our data.\r\n\r\nWhen an application starts out, the schema is simple, and things tend to work very well. Developers and data architects generally start with a data modeling process, defining a schema that will meet these early requirements. The queries are straightforward, as the initial schema often addresses – and more importantly mirrors – the first set of features of the application. These features are generally easier to implement in an early phase, particularly given the simple nature. This of course ties to the iterative nature of an agile process, building a small set of features initially and then adding complexity and new functionality in smaller chunks as the application moves forward.\r\n\r\n<a href=\"/wp-content/uploads/2014/07/AgilData-white-paper-Figure-3.jpg\"><img src=\"/wp-content/uploads/2014/07/AgilData-white-paper-Figure-3.jpg\" alt=\"AgilData white paper Figure 3\" width=\"377\" height=\"203\" /></a>\r\n\r\n<strong>Figure 3 A simple application and database schema</strong>\r\n\r\n[1] <a href=\"http://en.wikipedia.org/wiki/Big_data\">http://en.wikipedia.org/wiki/Big_data</a>\r\n\r\n&nbsp;\r\n<h2>Get The Full AgilData® Whitepaper Now</h2>\r\nFill out the form below and we will send you the AgilData® White Paper via email.\r\nIf you wish to be an AgilData® Beta Tester please check the appropriate box. A team member will contact you via email to get you set up.', 'Real-Time Big Data: An Agile Approach', '', 'draft', 'open', 'open', '', 'agile-data-white-paper', '', '', '2015-05-22 14:23:37', '2015-05-22 20:23:37', '', '0', 'http://www.agildata.com/?page_id=210', '0', 'page', '', '0');
INSERT INTO `wpag_posts` VALUES('211', '5', '2015-05-22 14:23:28', '2015-05-22 20:23:28', '<h1>Real Time Big Data: An Agile Approach</h1>\r\n<h2>Agile Big Data</h2>\r\nLearn all about the the agile approach to real-time big data in this exclusive white paper. To receive the entire report, please register below.\r\n<h3><strong>Introduction</strong></h3>\r\nBig Data is growing fast, from a multitude of sources – in fact we are in the midst of a true Big Data explosion.  In fact, as of 2012, every day 2.5 exabytes (2.5×1018) of data were created . With new agile Big Data sources coming online all the time, it is worldwide data growth could easily 10X this figure in the coming years.\r\n\r\n<a href=\"/wp-content/uploads/2014/07/AgilData-white-paper-Figure-1.jpg\"><img src=\"/wp-content/uploads/2014/07/AgilData-white-paper-Figure-1.jpg\" alt=\"AgilData white paper Figure 1\" width=\"524\" height=\"324\" /></a>\r\n<h3><strong>Figure 1 Big Data is growing from a multitude of sources</strong></h3>\r\nBig Data sources include Search Engines, Social Networks, Mobile Devices, System Data, and now the Internet of Things (IoT). Virtually every aspect of our lives will be impacted by data as ever-more capable devices and smart components are introduced to society. These components generate data – lots of it – often in ways we never imagined feasible just a few short years ago.\r\n\r\nWe should not forget to also include the impact of growing transaction systems on <strong>agile Big Data</strong>. Many operational databases are growing rapidly as well, expanding in to the multi-terabyte range and beyond. These systems provide a rich and often vital source of Big Data, one that must not only provide answers to complex queries, but additionally support the traditional needs of transactionality, data integrity, high performance and reliability.\r\n\r\nRecently another new development has emerged in the Big Data landscape: the need to know what is happening now, in real time. It is no longer adequate to understand what is contained in Big Data sources last month, last week or even yesterday – companies need to see a real time view of Big Data as it happens. With this type of visibility, organizations can respond immediately to changes in areas such as the market, user patterns, fraud detection, and many others.\r\n\r\nVirtually all organizations and business will be affected by and need access to Big Data – even those that are not directly in the fields shown in Figure 1. Here are just a few simple examples:\r\n\r\n• An online game application may generate its own Big Data for tracking user actions during gameplay, yet also needs to access Social Network feeds to interact with its users on a real time basis.\r\n• A healthcare practitioner will need access to many Big Data stores, such as government-provided disease tracking databases and centralized electronic healthcare records.\r\n•An aircraft mechanic must access up-to-date services bulletins for the specific aircraft being worked on at that moment, in order to perform potentially critical (not to mention life-saving) maintenance.\r\n• Climatologists must integrate and study Big Data from several sources to gauge the impact of climate change on the environment, the population and our vital physical resources.\r\n•A CEO or other executives in large organizations must have improved visibility into both operational data within their companies, as well as insights into the external Big Data sources that affect the business and its growth.\r\n\r\nWe have also seen an emergence of a whole new class of Big Data applications; applications that aggregate Big Data from a plethora of sources, to extract new meaning and value by combining, interpreting and creating new views across these data sources.\r\n\r\nIn short, Big Data and its impact will affect us all, often in ways that have not yet been conceived.\r\n\r\nThus as this trend toward ubiquitous Big Data rapidly evolves, the need for organizations to tap into and leverage these Big Data sources, for strategic advantage, competitive positioning, and to meet the emerging needs of users becomes a critical concern. Organizations that do not capitalize on the Big Data explosion will be left behind, with competitive offerings outstripping their capabilities.\r\n\r\nAs the volume, number of sources, complexity and demands of Big Data infrastructures increase, organizations are struggling to manage, interpret and extract real meaning from all this data. In other words, what does all this data mean and how can we make it valuable to the organizations that collect or access this data?\r\n\r\n<a href=\"/wp-content/uploads/2014/07/AgilData-white-paper-Figure-2.jpg\"><img src=\"/wp-content/uploads/2014/07/AgilData-white-paper-Figure-2.jpg\" alt=\"AgilData white paper Figure 2\" width=\"498\" height=\"237\" /></a>\r\n<h3><strong>Figure 2 What does all this Big Data mean?</strong></h3>\r\nAfter spending considerable time looking at this problem, it is apparent that we need a different view of Big Data, one that is flexible and agile in nature. We need to be able to access fast-growing <em>agile Big Data</em> in a way that is natural to our applications and needs.\r\n\r\nThis is emphasized by the fact that most organizations today utilize agile software development methodologies, an iterative approach to building features and functionality. In some cases the entire company or organization also aspires to function in an agile manner, allowing fast and nimble response to changes in the marketplace and various competitive threats.\r\nThus if being agile is our goal when it comes to software development processes and organizational management, why is it that data infrastructures continue to be a barrier to an agile approach? It can be simply stated this way:\r\n<h3 style=\"color: red;\"><em>Your process is agile…Why isn’t your data?</em></h3>\r\nConsidering this set of emerging problems, it is time to reconsider how we have been looking at data, and take an entirely new view of the problem.\r\n<h3><strong>Have we been Looking at Databases Wrong all this Time?</strong></h3>\r\nToday’s databases are typically used as static repositories, with this simple flow:\r\n<p style=\"padding-left: 30px;\">- Create an initial data structure (schema)\r\n- Put data into the database\r\n- Retrieve data from the database</p>\r\nThis is a totally understandable and natural way to look at a data infrastructure, after all we normally consider that a database is a persistent repository for our data.\r\n\r\nWhen an application starts out, the schema is simple, and things tend to work very well. Developers and data architects generally start with a data modeling process, defining a schema that will meet these early requirements. The queries are straightforward, as the initial schema often addresses – and more importantly mirrors – the first set of features of the application. These features are generally easier to implement in an early phase, particularly given the simple nature. This of course ties to the iterative nature of an agile process, building a small set of features initially and then adding complexity and new functionality in smaller chunks as the application moves forward.\r\n\r\n<a href=\"/wp-content/uploads/2014/07/AgilData-white-paper-Figure-3.jpg\"><img src=\"/wp-content/uploads/2014/07/AgilData-white-paper-Figure-3.jpg\" alt=\"AgilData white paper Figure 3\" width=\"377\" height=\"203\" /></a>\r\n\r\n<strong>Figure 3 A simple application and database schema</strong>\r\n\r\n[1] <a href=\"http://en.wikipedia.org/wiki/Big_data\">http://en.wikipedia.org/wiki/Big_data</a>\r\n\r\n&nbsp;\r\n<h2>Get The Full AgilData® Whitepaper Now</h2>\r\nFill out the form below and we will send you the AgilData® White Paper via email.\r\nIf you wish to be an AgilData® Beta Tester please check the appropriate box. A team member will contact you via email to get you set up.', 'Real-Time Big Data: An Agile Approach', '', 'inherit', 'open', 'open', '', '210-revision-v1', '', '', '2015-05-22 14:23:28', '2015-05-22 20:23:28', '', '210', 'http://www.agildata.com/210-revision-v1/', '0', 'revision', '', '0');
INSERT INTO `wpag_posts` VALUES('212', '5', '2015-05-22 14:24:44', '0000-00-00 00:00:00', '<h1>SDO Tutorial</h1>\r\nThe objective of this SDO Tutorial is to provide a general introduction to the Service Data Objects (SDO) specification, which defines a generic API for accessing and manipulating data as\r\npart of a Service Oriented Architecture (SOA). Currently, SDO specifications exist for Java and C++ but other\r\nanguages may be supported in\r\nthe future. This tutorial demonstrates how to use the Java <a href=\"/sdo-api/\">SDO API</a> and the code samples in the tutorial\r\nhave been tested with Apache Tuscany SDO\r\n\r\nSDO provides an API for accessing and manipulating structured data. The <a href=\"/sdo-api/\">SDO API</a> is independent of the actual data source.\r\nFor example, SDO can be used to access XML data or SQL data. Typically, a Data Access Service (DAS) is used to\r\npopulate SDO objects from some data store.\r\n\r\nOne of the main benefits of SDO is that it actually tracks changes made to a dataset and can pass\r\nthat change summary to other services by serializing it to XML.\r\n<h2>SDO Tutorial: SDO Main Classes</h2>\r\n<table class=\"matrix\">\r\n<tbody>\r\n<tr>\r\n<td valign=\"top\" width=\"25%\">Type</td>\r\n<td valign=\"top\" width=\"75%\">Definition of a simple or complex data type. SDO contains a number of built-in data types, including\r\ncommonj.sdo#String and commonj.sdo#DataObject but users can define their own types.</td>\r\n</tr>\r\n<tr>\r\n<td valign=\"top\">Property</td>\r\n<td valign=\"top\">Definition of a property within an SDO Type.</td>\r\n</tr>\r\n<tr>\r\n<td valign=\"top\">DataObject</td>\r\n<td valign=\"top\">DataObject is the fundamental representation of a piece of data and lies at the core of the\r\n<a href=\"/sdo-api/\">SDO API</a>. DataObject provides get/set methods for accessing and manipulating its properties. A DataObject\'s\r\nproperties can contain simple values, other DataObjects, or Lists of simple values of DataObjects. DataObjects\r\ncan contain references to other DataObjects or they can contain them. This makes DataObject suitable for\r\nhierarchical data models (XML) as well as relational models (SQL).</td>\r\n</tr>\r\n<tr>\r\n<td valign=\"top\">DataGraph</td>\r\n<td valign=\"top\">Container object for a tree of DataObjects.</td>\r\n</tr>\r\n</tbody>\r\n</table>\r\n<h2>SDO Tutorial: The SDO Environment and HelperContext</h2>\r\nSDO defines a HelperContext interface for accessing a set of related SDO Helper classes for performing\r\ncommon operations such as reading and writing XML documents, defining SDO types from XML Schema, and so on. All\r\nSDO implementations provide a default context, which can be obtained by calling HelperProvider.getDefaultContext().\r\nSome implementations offer methods for creating new isolated contexts but this is not currently required by\r\nthe SDO specification.\r\n<p class=\"codeheader\">Obtaining a default HelperContext</p>\r\n\r\n<table class=\"code\" width=\"100%\">\r\n<tbody>\r\n<tr>\r\n<td>\r\n<pre><span class=\"javaIdentifier\">HelperContext</span> <span class=\"javaIdentifier\">helperContext</span> = <span class=\"javaIdentifier\">HelperProvider</span>.<span class=\"javaIdentifier\">getDefaultContext</span>()</pre>\r\n</td>\r\n</tr>\r\n</tbody>\r\n</table>\r\n<h2>SDO Tutorial: SDO Types and Properties</h2>\r\nSDO provides type-safe access to data through the use of types and properties. SDO types can be created programatically\r\nbut typically are created by parsing an XML Schema (using the XSDHelper class) or are defined automatically by\r\nthe Data Access Service.\r\n\r\nSDO types can be accessed via the TypeHelper interface.\r\n<table class=\"code\" width=\"100%\">\r\n<tbody>\r\n<tr>\r\n<td>\r\n<pre><span class=\"javaIdentifier\">Type</span> <span class=\"javaIdentifier\">stringType</span> = <span class=\"javaIdentifier\">helperContext</span>.<span class=\"javaIdentifier\">getTypeHelper</span>().<span class=\"javaIdentifier\">getType</span>( <span class=\"javaLiteral\">\"commonj.sdo\"</span>, <span class=\"javaLiteral\">\"String\"</span> );</pre>\r\n</td>\r\n</tr>\r\n</tbody>\r\n</table>\r\n<h2>SDO Tutorial: Reading XML Documents (Without Schema)</h2>\r\nFor XML documents with no schema and where no SDO types have been explicitly defined for the document\r\nstructure, there are some simple rules for how the XML gets mapped to SDO. Each XML element becomes an\r\nSDO DataObject and each attribute becomes an SDO Property.\r\n<p class=\"codeheader\">Simple XML Example</p>\r\n\r\n<table class=\"code\" width=\"100%\">\r\n<tbody>\r\n<tr>\r\n<td>&lt;?xml version=\"1.0\"?&gt;\r\n&lt;test&gt;\r\n&lt;person name=\"Andy Grove\" /&gt;\r\n&lt;/test&gt;</td>\r\n</tr>\r\n</tbody>\r\n</table>\r\n<p class=\"codeheader\">Java source code</p>\r\n\r\n<table class=\"code\" width=\"100%\">\r\n<tbody>\r\n<tr>\r\n<td>\r\n<pre><span class=\"javaIdentifier\">HelperContext</span> <span class=\"javaIdentifier\">ctx</span> = <span class=\"javaIdentifier\">HelperProvider</span>.<span class=\"javaIdentifier\">getDefaultContext</span>();\r\n<span class=\"javaIdentifier\">FileInputStream</span> <span class=\"javaIdentifier\">is</span> = <span class=\"javaKeyword\">new</span> <span class=\"javaIdentifier\">FileInputStream</span>(<span class=\"javaLiteral\">\"test.xml\"</span>);\r\n<span class=\"javaIdentifier\">XMLDocument</span> <span class=\"javaIdentifier\">doc</span> = <span class=\"javaIdentifier\">ctx</span>.<span class=\"javaIdentifier\">getXMLHelper</span>().<span class=\"javaIdentifier\">load</span>(<span class=\"javaIdentifier\">is</span>);\r\n<span class=\"javaIdentifier\">DataObject</span> <span class=\"javaIdentifier\">root</span> = <span class=\"javaIdentifier\">doc</span>.<span class=\"javaIdentifier\">getRootObject</span>();\r\n<span class=\"javaIdentifier\">String</span> <span class=\"javaIdentifier\">personName</span> = <span class=\"javaIdentifier\">root</span>.<span class=\"javaIdentifier\">getString</span>( <span class=\"javaLiteral\">\"person.0/name\"</span> );\r\n<span class=\"javaIdentifier\">System</span>.<span class=\"javaIdentifier\">out</span>.<span class=\"javaIdentifier\">println</span>( <span class=\"javaIdentifier\">personName</span> );</pre>\r\n</td>\r\n</tr>\r\n</tbody>\r\n</table>\r\n<h2>SDO Tutorial: Defining Types programatically</h2>\r\nSDO types can be created by populating a \"{commonj.sdo}Type\" DataObject.\r\n<table class=\"code\" width=\"100%\">\r\n<tbody>\r\n<tr>\r\n<td>\r\n<pre><span class=\"javaIdentifier\">HelperContext</span> <span class=\"javaIdentifier\">ctx</span> = <span class=\"javaIdentifier\">HelperProvider</span>.<span class=\"javaIdentifier\">getDefaultContext</span>();\r\n<span class=\"javaComment\">// define a new type\r\n</span><span class=\"javaIdentifier\">DataObject</span> <span class=\"javaIdentifier\">typeDef</span> = <span class=\"javaIdentifier\">ctx</span>.<span class=\"javaIdentifier\">getDataFactory</span>().<span class=\"javaIdentifier\">create</span>( <span class=\"javaLiteral\">\"commonj.sdo\"</span>, <span class=\"javaLiteral\">\"Type\"</span> );\r\n<span class=\"javaIdentifier\">typeDef</span>.<span class=\"javaIdentifier\">set</span>( <span class=\"javaLiteral\">\"uri\"</span>, <span class=\"javaLiteral\">\"http://www.codesuccess.com/\"</span> );\r\n<span class=\"javaIdentifier\">typeDef</span>.<span class=\"javaIdentifier\">set</span>( <span class=\"javaLiteral\">\"name\"</span>, <span class=\"javaLiteral\">\"MyCustomerType\"</span> );\r\n<span class=\"javaComment\">// add a property\r\n</span><span class=\"javaIdentifier\">DataObject</span> <span class=\"javaIdentifier\">propDef</span> = <span class=\"javaIdentifier\">typeDef</span>.<span class=\"javaIdentifier\">createDataObject</span>( <span class=\"javaLiteral\">\"property\"</span> );\r\n<span class=\"javaIdentifier\">propDef</span>.<span class=\"javaIdentifier\">set</span>( <span class=\"javaLiteral\">\"name\"</span>, <span class=\"javaLiteral\">\"customerID\"</span> );\r\n<span class=\"javaIdentifier\">propDef</span>.<span class=\"javaIdentifier\">set</span>( <span class=\"javaLiteral\">\"type\"</span>, <span class=\"javaIdentifier\">ctx</span>.<span class=\"javaIdentifier\">getTypeHelper</span>.<span class=\"javaIdentifier\">getType</span>( <span class=\"javaLiteral\">\"commonj.sdo\"</span>, <span class=\"javaLiteral\">\"String\"</span> ) );\r\n<span class=\"javaComment\">// add another property\r\n</span><span class=\"javaIdentifier\">propDef</span> = <span class=\"javaIdentifier\">typeDef</span>.<span class=\"javaIdentifier\">createDataObject</span>( <span class=\"javaLiteral\">\"property\"</span> );\r\n<span class=\"javaIdentifier\">propDef</span>.<span class=\"javaIdentifier\">set</span>( <span class=\"javaLiteral\">\"name\"</span>, <span class=\"javaLiteral\">\"customerName\"</span> );\r\n<span class=\"javaIdentifier\">propDef</span>.<span class=\"javaIdentifier\">set</span>( <span class=\"javaLiteral\">\"type\"</span>, <span class=\"javaIdentifier\">ctx</span>.<span class=\"javaIdentifier\">getTypeHelper</span>.<span class=\"javaIdentifier\">getType</span>( <span class=\"javaLiteral\">\"commonj.sdo\"</span>, <span class=\"javaLiteral\">\"String\"</span> ) );\r\n<span class=\"javaComment\">// define the type\r\n</span><span class=\"javaIdentifier\">Type</span> <span class=\"javaIdentifier\">type</span> = <span class=\"javaIdentifier\">ctx</span>.<span class=\"javaIdentifier\">getTypeHelper</span>().<span class=\"javaIdentifier\">define</span>( <span class=\"javaIdentifier\">typeDef</span> );</pre>\r\n</td>\r\n</tr>\r\n</tbody>\r\n</table>\r\n<h2>SDO Tutorial: Defining Types from XSD</h2>\r\nRather than programmatically defining SDO types it is possible to load them from an XML Schema using the\r\nSDO XSDHelper class, as shown in the following code fragment.\r\n<table class=\"code\" width=\"100%\">\r\n<tbody>\r\n<tr>\r\n<td>\r\n<pre><span class=\"javaIdentifier\">HelperContext</span> <span class=\"javaIdentifier\">ctx</span> = <span class=\"javaIdentifier\">HelperProvider</span>.<span class=\"javaIdentifier\">getDefaultContext</span>();\r\n<span class=\"javaIdentifier\">FileInputStream</span> <span class=\"javaIdentifier\">is</span> = <span class=\"javaKeyword\">new</span> <span class=\"javaIdentifier\">FileInputStream</span>(<span class=\"javaLiteral\">\"test.xsd\"</span>);\r\n<span class=\"javaIdentifier\">ctx</span>.<span class=\"javaIdentifier\">getXSDHelper</span>().<span class=\"javaIdentifier\">define</span>(<span class=\"javaIdentifier\">is</span>, <span class=\"javaLiteral\">null</span>);</pre>\r\n</td>\r\n</tr>\r\n</tbody>\r\n</table>\r\n<h2>SDO Tutorial: Serializing SDO to XML</h2>\r\nThe XMLHelper interface provides methods for serializing DataObject or XMLDocument instances to XML.', 'SDO Tutorial', '', 'draft', 'open', 'open', '', '', '', '', '2015-05-22 14:24:44', '2015-05-22 20:24:44', '', '0', 'http://www.agildata.com/?page_id=212', '0', 'page', '', '0');
INSERT INTO `wpag_posts` VALUES('213', '5', '2015-05-22 14:24:38', '2015-05-22 20:24:38', '<h1>SDO Tutorial</h1>\r\nThe objective of this SDO Tutorial is to provide a general introduction to the Service Data Objects (SDO) specification, which defines a generic API for accessing and manipulating data as\r\npart of a Service Oriented Architecture (SOA). Currently, SDO specifications exist for Java and C++ but other\r\nanguages may be supported in\r\nthe future. This tutorial demonstrates how to use the Java <a href=\"/sdo-api/\">SDO API</a> and the code samples in the tutorial\r\nhave been tested with Apache Tuscany SDO\r\n\r\nSDO provides an API for accessing and manipulating structured data. The <a href=\"/sdo-api/\">SDO API</a> is independent of the actual data source.\r\nFor example, SDO can be used to access XML data or SQL data. Typically, a Data Access Service (DAS) is used to\r\npopulate SDO objects from some data store.\r\n\r\nOne of the main benefits of SDO is that it actually tracks changes made to a dataset and can pass\r\nthat change summary to other services by serializing it to XML.\r\n<h2>SDO Tutorial: SDO Main Classes</h2>\r\n<table class=\"matrix\">\r\n<tbody>\r\n<tr>\r\n<td valign=\"top\" width=\"25%\">Type</td>\r\n<td valign=\"top\" width=\"75%\">Definition of a simple or complex data type. SDO contains a number of built-in data types, including\r\ncommonj.sdo#String and commonj.sdo#DataObject but users can define their own types.</td>\r\n</tr>\r\n<tr>\r\n<td valign=\"top\">Property</td>\r\n<td valign=\"top\">Definition of a property within an SDO Type.</td>\r\n</tr>\r\n<tr>\r\n<td valign=\"top\">DataObject</td>\r\n<td valign=\"top\">DataObject is the fundamental representation of a piece of data and lies at the core of the\r\n<a href=\"/sdo-api/\">SDO API</a>. DataObject provides get/set methods for accessing and manipulating its properties. A DataObject\'s\r\nproperties can contain simple values, other DataObjects, or Lists of simple values of DataObjects. DataObjects\r\ncan contain references to other DataObjects or they can contain them. This makes DataObject suitable for\r\nhierarchical data models (XML) as well as relational models (SQL).</td>\r\n</tr>\r\n<tr>\r\n<td valign=\"top\">DataGraph</td>\r\n<td valign=\"top\">Container object for a tree of DataObjects.</td>\r\n</tr>\r\n</tbody>\r\n</table>\r\n<h2>SDO Tutorial: The SDO Environment and HelperContext</h2>\r\nSDO defines a HelperContext interface for accessing a set of related SDO Helper classes for performing\r\ncommon operations such as reading and writing XML documents, defining SDO types from XML Schema, and so on. All\r\nSDO implementations provide a default context, which can be obtained by calling HelperProvider.getDefaultContext().\r\nSome implementations offer methods for creating new isolated contexts but this is not currently required by\r\nthe SDO specification.\r\n<p class=\"codeheader\">Obtaining a default HelperContext</p>\r\n\r\n<table class=\"code\" width=\"100%\">\r\n<tbody>\r\n<tr>\r\n<td>\r\n<pre><span class=\"javaIdentifier\">HelperContext</span> <span class=\"javaIdentifier\">helperContext</span> = <span class=\"javaIdentifier\">HelperProvider</span>.<span class=\"javaIdentifier\">getDefaultContext</span>()</pre>\r\n</td>\r\n</tr>\r\n</tbody>\r\n</table>\r\n<h2>SDO Tutorial: SDO Types and Properties</h2>\r\nSDO provides type-safe access to data through the use of types and properties. SDO types can be created programatically\r\nbut typically are created by parsing an XML Schema (using the XSDHelper class) or are defined automatically by\r\nthe Data Access Service.\r\n\r\nSDO types can be accessed via the TypeHelper interface.\r\n<table class=\"code\" width=\"100%\">\r\n<tbody>\r\n<tr>\r\n<td>\r\n<pre><span class=\"javaIdentifier\">Type</span> <span class=\"javaIdentifier\">stringType</span> = <span class=\"javaIdentifier\">helperContext</span>.<span class=\"javaIdentifier\">getTypeHelper</span>().<span class=\"javaIdentifier\">getType</span>( <span class=\"javaLiteral\">\"commonj.sdo\"</span>, <span class=\"javaLiteral\">\"String\"</span> );</pre>\r\n</td>\r\n</tr>\r\n</tbody>\r\n</table>\r\n<h2>SDO Tutorial: Reading XML Documents (Without Schema)</h2>\r\nFor XML documents with no schema and where no SDO types have been explicitly defined for the document\r\nstructure, there are some simple rules for how the XML gets mapped to SDO. Each XML element becomes an\r\nSDO DataObject and each attribute becomes an SDO Property.\r\n<p class=\"codeheader\">Simple XML Example</p>\r\n\r\n<table class=\"code\" width=\"100%\">\r\n<tbody>\r\n<tr>\r\n<td>&lt;?xml version=\"1.0\"?&gt;\r\n&lt;test&gt;\r\n&lt;person name=\"Andy Grove\" /&gt;\r\n&lt;/test&gt;</td>\r\n</tr>\r\n</tbody>\r\n</table>\r\n<p class=\"codeheader\">Java source code</p>\r\n\r\n<table class=\"code\" width=\"100%\">\r\n<tbody>\r\n<tr>\r\n<td>\r\n<pre><span class=\"javaIdentifier\">HelperContext</span> <span class=\"javaIdentifier\">ctx</span> = <span class=\"javaIdentifier\">HelperProvider</span>.<span class=\"javaIdentifier\">getDefaultContext</span>();\r\n<span class=\"javaIdentifier\">FileInputStream</span> <span class=\"javaIdentifier\">is</span> = <span class=\"javaKeyword\">new</span> <span class=\"javaIdentifier\">FileInputStream</span>(<span class=\"javaLiteral\">\"test.xml\"</span>);\r\n<span class=\"javaIdentifier\">XMLDocument</span> <span class=\"javaIdentifier\">doc</span> = <span class=\"javaIdentifier\">ctx</span>.<span class=\"javaIdentifier\">getXMLHelper</span>().<span class=\"javaIdentifier\">load</span>(<span class=\"javaIdentifier\">is</span>);\r\n<span class=\"javaIdentifier\">DataObject</span> <span class=\"javaIdentifier\">root</span> = <span class=\"javaIdentifier\">doc</span>.<span class=\"javaIdentifier\">getRootObject</span>();\r\n<span class=\"javaIdentifier\">String</span> <span class=\"javaIdentifier\">personName</span> = <span class=\"javaIdentifier\">root</span>.<span class=\"javaIdentifier\">getString</span>( <span class=\"javaLiteral\">\"person.0/name\"</span> );\r\n<span class=\"javaIdentifier\">System</span>.<span class=\"javaIdentifier\">out</span>.<span class=\"javaIdentifier\">println</span>( <span class=\"javaIdentifier\">personName</span> );</pre>\r\n</td>\r\n</tr>\r\n</tbody>\r\n</table>\r\n<h2>SDO Tutorial: Defining Types programatically</h2>\r\nSDO types can be created by populating a \"{commonj.sdo}Type\" DataObject.\r\n<table class=\"code\" width=\"100%\">\r\n<tbody>\r\n<tr>\r\n<td>\r\n<pre><span class=\"javaIdentifier\">HelperContext</span> <span class=\"javaIdentifier\">ctx</span> = <span class=\"javaIdentifier\">HelperProvider</span>.<span class=\"javaIdentifier\">getDefaultContext</span>();\r\n<span class=\"javaComment\">// define a new type\r\n</span><span class=\"javaIdentifier\">DataObject</span> <span class=\"javaIdentifier\">typeDef</span> = <span class=\"javaIdentifier\">ctx</span>.<span class=\"javaIdentifier\">getDataFactory</span>().<span class=\"javaIdentifier\">create</span>( <span class=\"javaLiteral\">\"commonj.sdo\"</span>, <span class=\"javaLiteral\">\"Type\"</span> );\r\n<span class=\"javaIdentifier\">typeDef</span>.<span class=\"javaIdentifier\">set</span>( <span class=\"javaLiteral\">\"uri\"</span>, <span class=\"javaLiteral\">\"http://www.codesuccess.com/\"</span> );\r\n<span class=\"javaIdentifier\">typeDef</span>.<span class=\"javaIdentifier\">set</span>( <span class=\"javaLiteral\">\"name\"</span>, <span class=\"javaLiteral\">\"MyCustomerType\"</span> );\r\n<span class=\"javaComment\">// add a property\r\n</span><span class=\"javaIdentifier\">DataObject</span> <span class=\"javaIdentifier\">propDef</span> = <span class=\"javaIdentifier\">typeDef</span>.<span class=\"javaIdentifier\">createDataObject</span>( <span class=\"javaLiteral\">\"property\"</span> );\r\n<span class=\"javaIdentifier\">propDef</span>.<span class=\"javaIdentifier\">set</span>( <span class=\"javaLiteral\">\"name\"</span>, <span class=\"javaLiteral\">\"customerID\"</span> );\r\n<span class=\"javaIdentifier\">propDef</span>.<span class=\"javaIdentifier\">set</span>( <span class=\"javaLiteral\">\"type\"</span>, <span class=\"javaIdentifier\">ctx</span>.<span class=\"javaIdentifier\">getTypeHelper</span>.<span class=\"javaIdentifier\">getType</span>( <span class=\"javaLiteral\">\"commonj.sdo\"</span>, <span class=\"javaLiteral\">\"String\"</span> ) );\r\n<span class=\"javaComment\">// add another property\r\n</span><span class=\"javaIdentifier\">propDef</span> = <span class=\"javaIdentifier\">typeDef</span>.<span class=\"javaIdentifier\">createDataObject</span>( <span class=\"javaLiteral\">\"property\"</span> );\r\n<span class=\"javaIdentifier\">propDef</span>.<span class=\"javaIdentifier\">set</span>( <span class=\"javaLiteral\">\"name\"</span>, <span class=\"javaLiteral\">\"customerName\"</span> );\r\n<span class=\"javaIdentifier\">propDef</span>.<span class=\"javaIdentifier\">set</span>( <span class=\"javaLiteral\">\"type\"</span>, <span class=\"javaIdentifier\">ctx</span>.<span class=\"javaIdentifier\">getTypeHelper</span>.<span class=\"javaIdentifier\">getType</span>( <span class=\"javaLiteral\">\"commonj.sdo\"</span>, <span class=\"javaLiteral\">\"String\"</span> ) );\r\n<span class=\"javaComment\">// define the type\r\n</span><span class=\"javaIdentifier\">Type</span> <span class=\"javaIdentifier\">type</span> = <span class=\"javaIdentifier\">ctx</span>.<span class=\"javaIdentifier\">getTypeHelper</span>().<span class=\"javaIdentifier\">define</span>( <span class=\"javaIdentifier\">typeDef</span> );</pre>\r\n</td>\r\n</tr>\r\n</tbody>\r\n</table>\r\n<h2>SDO Tutorial: Defining Types from XSD</h2>\r\nRather than programmatically defining SDO types it is possible to load them from an XML Schema using the\r\nSDO XSDHelper class, as shown in the following code fragment.\r\n<table class=\"code\" width=\"100%\">\r\n<tbody>\r\n<tr>\r\n<td>\r\n<pre><span class=\"javaIdentifier\">HelperContext</span> <span class=\"javaIdentifier\">ctx</span> = <span class=\"javaIdentifier\">HelperProvider</span>.<span class=\"javaIdentifier\">getDefaultContext</span>();\r\n<span class=\"javaIdentifier\">FileInputStream</span> <span class=\"javaIdentifier\">is</span> = <span class=\"javaKeyword\">new</span> <span class=\"javaIdentifier\">FileInputStream</span>(<span class=\"javaLiteral\">\"test.xsd\"</span>);\r\n<span class=\"javaIdentifier\">ctx</span>.<span class=\"javaIdentifier\">getXSDHelper</span>().<span class=\"javaIdentifier\">define</span>(<span class=\"javaIdentifier\">is</span>, <span class=\"javaLiteral\">null</span>);</pre>\r\n</td>\r\n</tr>\r\n</tbody>\r\n</table>\r\n<h2>SDO Tutorial: Serializing SDO to XML</h2>\r\nThe XMLHelper interface provides methods for serializing DataObject or XMLDocument instances to XML.', 'SDO Tutorial', '', 'inherit', 'open', 'open', '', '212-revision-v1', '', '', '2015-05-22 14:24:38', '2015-05-22 20:24:38', '', '212', 'http://www.agildata.com/212-revision-v1/', '0', 'revision', '', '0');
INSERT INTO `wpag_posts` VALUES('214', '5', '2015-05-22 14:25:40', '0000-00-00 00:00:00', '<h1>Spring DAO</h1>\r\nSpring is one of the best data persistence frameworks for using with the DAO design pattern, providing an attractive Spring DAO combination. This short tutorial provides a brief introduction to Spring DAO JDBC.\r\n\r\nFireStorm/DAO is a Spring DAO tool that can be used to automatically generate the Spring DAO code in this tutorial.\r\n<p class=\"additionalrl\"><a href=\"/products/firestorm/download/\">Download FireStorm/DAO</a></p>\r\n\r\n<h2>Setting up a DataSource</h2>\r\nThere are a number of ways to configure Spring to use DataSources. A simple method is to use spring beans\r\nto create a DataSource and inject it into a DAO / POJO class.\r\n<pre class=\"prettyprint\">&lt;bean id=\"myDataSource\" class=\"org.apache.commons.dbcp.BasicDataSource\" destroy-method=\"close\"&gt;\r\n&lt;property name=\"driverClassName\" value=\"com.mysql.jdbc.Driver\"/&gt;\r\n&lt;property name=\"url\" value=\"jdbc:mysql://localhost:3306/mydb\"/&gt;\r\n&lt;property name=\"username\" value=\"test\"/&gt;\r\n&lt;property name=\"password\" value=\"*******\"/&gt;\r\n&lt;/bean&gt;&lt;bean id=\"companyDao\" class=\"com.myapp.CompanyDao\"&gt;\r\n&lt;property name=\"dataSource\" ref=\"myDataSource\" /&gt;\r\n&lt;/bean&gt;</pre>\r\nThe CompanyDao class will have this basic structure.\r\n<pre class=\"prettyprint\"><span class=\"javaKeyword\">public</span> <span class=\"javaKeyword\">class</span> <span class=\"javaIdentifier\">CompanyDao</span> {\r\n\r\n    <span class=\"javaIdentifier\">DataSource</span> <span class=\"javaIdentifier\">dataSource</span>;\r\n    <span class=\"javaIdentifier\">SimpleJdbcTemplate</span> <span class=\"javaIdentifier\">jdbcTemplate</span>;\r\n\r\n    <span class=\"javaKeyword\">public</span> <span class=\"javaKeyword\">void</span> <span class=\"javaIdentifier\">setDataSource</span>(<span class=\"javaIdentifier\">DataSource</span> <span class=\"javaIdentifier\">dataSource</span>) {\r\n        <span class=\"javaKeyword\">this</span>.<span class=\"javaIdentifier\">dataSource</span> = <span class=\"javaIdentifier\">dataSource</span>;\r\n        <span class=\"javaIdentifier\">jdbcTemplate</span> = <span class=\"javaKeyword\">new</span> <span class=\"javaIdentifier\">SimpleJdbcTemplate</span>(<span class=\"javaIdentifier\">dataSource</span>);\r\n    }\r\n\r\n    <span class=\"javaComment\">/* DAO methods go here */</span>\r\n\r\n}</pre>\r\nThe Spring DAO class can be instantiated using:\r\n<pre class=\"prettyprint\"><span class=\"javaIdentifier\">BeanFactory</span> <span class=\"javaIdentifier\">bf</span> = <span class=\"javaKeyword\">new</span> <span class=\"javaIdentifier\">XmlBeanFactory</span>( <span class=\"javaKeyword\">new</span> <span class=\"javaIdentifier\">ClassPathResource</span>(<span class=\"javaLiteral\">\"config.xml\"</span>) );\r\n    <span class=\"javaKeyword\">return</span> (<span class=\"javaIdentifier\">CompanyDao</span>) <span class=\"javaIdentifier\">bf</span>.<span class=\"javaIdentifier\">getBean</span>( <span class=\"javaLiteral\">\"companyDao\"</span> );</pre>\r\n<h2>Running a query</h2>\r\nThe Spring DAO JDBC Template class provides an elegant method of running SQL queries and mapping the result set to\r\nJava objects with a minimal amount of coding.\r\n<pre class=\"prettyprint\"><span class=\"javaKeyword\">public</span> <span class=\"javaIdentifier\">Company</span> <span class=\"javaIdentifier\">getCompany</span>(<span class=\"javaKeyword\">int</span> <span class=\"javaIdentifier\">id</span>) <span class=\"javaKeyword\">throws</span> <span class=\"javaIdentifier\">SQLException</span> {\r\n    <span class=\"javaKeyword\">return</span> <span class=\"javaIdentifier\">jdbcTemplate</span>.<span class=\"javaIdentifier\">queryForObject</span>(\r\n            <span class=\"javaLiteral\">\"SELECT id, name FROM company WHERE id = ?\"</span>,\r\n            <span class=\"javaKeyword\">new</span> <span class=\"javaIdentifier\">ParameterizedRowMapper</span>&lt;<span class=\"javaIdentifier\">Company</span>&gt;() {\r\n                <span class=\"javaKeyword\">public</span> <span class=\"javaIdentifier\">Company</span> <span class=\"javaIdentifier\">mapRow</span>(<span class=\"javaIdentifier\">ResultSet</span> <span class=\"javaIdentifier\">rs</span>, <span class=\"javaKeyword\">int</span> <span class=\"javaIdentifier\">i</span>) <span class=\"javaKeyword\">throws</span> <span class=\"javaIdentifier\">SQLException</span> {\r\n                    <span class=\"javaKeyword\">return</span> <span class=\"javaKeyword\">new</span> <span class=\"javaIdentifier\">Company</span>( <span class=\"javaIdentifier\">rs</span>.<span class=\"javaIdentifier\">getInt</span>(<span class=\"javaLiteral\">1</span>), <span class=\"javaIdentifier\">rs</span>.<span class=\"javaIdentifier\">getString</span>(<span class=\"javaLiteral\">2</span>) );\r\n                }\r\n            },\r\n            <span class=\"javaIdentifier\">id</span>\r\n    );\r\n}</pre>\r\n<h2>Inserts, Updates, and Deletes</h2>\r\nThese are even simpler than the query example.\r\n<pre class=\"prettyprint\"><span class=\"javaKeyword\">public</span> <span class=\"javaKeyword\">int</span> <span class=\"javaIdentifier\">createCompany</span>(<span class=\"javaIdentifier\">Company</span> <span class=\"javaIdentifier\">company</span>) <span class=\"javaKeyword\">throws</span> <span class=\"javaIdentifier\">SQLException</span> {\r\n        <span class=\"javaIdentifier\">jdbcTemplate</span>.<span class=\"javaIdentifier\">update</span>(\r\n                <span class=\"javaLiteral\">\"INSERT INTO company (name) VALUES (?)\"</span>,\r\n                <span class=\"javaIdentifier\">company</span>.<span class=\"javaIdentifier\">getName</span>()\r\n        );\r\n        <span class=\"javaKeyword\">return</span> <span class=\"javaIdentifier\">jdbcTemplate</span>.<span class=\"javaIdentifier\">queryForInt</span>( <span class=\"javaLiteral\">\"select last_insert_id()\"</span> );\r\n    }</pre>\r\nOne weakness of Spring JDBC is that it does not help with retrieving auto-generated keys and generally does not provide\r\nany support for assigning primary keys. The above code is specific to MySQL.\r\n<h2>Additional Resources</h2>\r\nFireStorm/DAO is a <a href=\"/products/firestorm/\">database access tool</a> based on the <a href=\"/data-access-object/\">Data Access Object</a> design pattern.\r\n<p class=\"additionalrl\"><a href=\"/products/firestorm/download/\">Download FireStorm/DAO</a></p>\r\nCodeFutures provides a free program to analyze the performance of your MySQL database.\r\n<p class=\"additionalrl\"><a href=\"/database-performance-analysis/\">Free MySQL Performance Analysis</a></p>\r\nRead about how <a href=\"/database-sharding/\">Database Sharding</a> helps many major companies to linearly scale their database applications.\r\n<p class=\"additionalrl\"><a href=\"/database-sharding-white-paper/\">Request Database Sharding White Paper</a></p>\r\ndbShards economically scales large, high transaction volume databases using <a href=\"/database-sharding/\">Database Sharding</a>.\r\n<p class=\"additionalrl\"><a href=\"/dbshards-product-presentation/\">View Introduction to dbShards Video</a></p>', 'Spring DAO', '', 'draft', 'open', 'open', '', '', '', '', '2015-05-22 14:25:40', '2015-05-22 20:25:40', '', '0', 'http://www.agildata.com/?page_id=214', '0', 'page', '', '0');
INSERT INTO `wpag_posts` VALUES('215', '5', '2015-05-22 14:25:34', '2015-05-22 20:25:34', '<h1>Spring DAO</h1>\r\nSpring is one of the best data persistence frameworks for using with the DAO design pattern, providing an attractive Spring DAO combination. This short tutorial provides a brief introduction to Spring DAO JDBC.\r\n\r\nFireStorm/DAO is a Spring DAO tool that can be used to automatically generate the Spring DAO code in this tutorial.\r\n<p class=\"additionalrl\"><a href=\"/products/firestorm/download/\">Download FireStorm/DAO</a></p>\r\n\r\n<h2>Setting up a DataSource</h2>\r\nThere are a number of ways to configure Spring to use DataSources. A simple method is to use spring beans\r\nto create a DataSource and inject it into a DAO / POJO class.\r\n<pre class=\"prettyprint\">&lt;bean id=\"myDataSource\" class=\"org.apache.commons.dbcp.BasicDataSource\" destroy-method=\"close\"&gt;\r\n&lt;property name=\"driverClassName\" value=\"com.mysql.jdbc.Driver\"/&gt;\r\n&lt;property name=\"url\" value=\"jdbc:mysql://localhost:3306/mydb\"/&gt;\r\n&lt;property name=\"username\" value=\"test\"/&gt;\r\n&lt;property name=\"password\" value=\"*******\"/&gt;\r\n&lt;/bean&gt;&lt;bean id=\"companyDao\" class=\"com.myapp.CompanyDao\"&gt;\r\n&lt;property name=\"dataSource\" ref=\"myDataSource\" /&gt;\r\n&lt;/bean&gt;</pre>\r\nThe CompanyDao class will have this basic structure.\r\n<pre class=\"prettyprint\"><span class=\"javaKeyword\">public</span> <span class=\"javaKeyword\">class</span> <span class=\"javaIdentifier\">CompanyDao</span> {\r\n\r\n    <span class=\"javaIdentifier\">DataSource</span> <span class=\"javaIdentifier\">dataSource</span>;\r\n    <span class=\"javaIdentifier\">SimpleJdbcTemplate</span> <span class=\"javaIdentifier\">jdbcTemplate</span>;\r\n\r\n    <span class=\"javaKeyword\">public</span> <span class=\"javaKeyword\">void</span> <span class=\"javaIdentifier\">setDataSource</span>(<span class=\"javaIdentifier\">DataSource</span> <span class=\"javaIdentifier\">dataSource</span>) {\r\n        <span class=\"javaKeyword\">this</span>.<span class=\"javaIdentifier\">dataSource</span> = <span class=\"javaIdentifier\">dataSource</span>;\r\n        <span class=\"javaIdentifier\">jdbcTemplate</span> = <span class=\"javaKeyword\">new</span> <span class=\"javaIdentifier\">SimpleJdbcTemplate</span>(<span class=\"javaIdentifier\">dataSource</span>);\r\n    }\r\n\r\n    <span class=\"javaComment\">/* DAO methods go here */</span>\r\n\r\n}</pre>\r\nThe Spring DAO class can be instantiated using:\r\n<pre class=\"prettyprint\"><span class=\"javaIdentifier\">BeanFactory</span> <span class=\"javaIdentifier\">bf</span> = <span class=\"javaKeyword\">new</span> <span class=\"javaIdentifier\">XmlBeanFactory</span>( <span class=\"javaKeyword\">new</span> <span class=\"javaIdentifier\">ClassPathResource</span>(<span class=\"javaLiteral\">\"config.xml\"</span>) );\r\n    <span class=\"javaKeyword\">return</span> (<span class=\"javaIdentifier\">CompanyDao</span>) <span class=\"javaIdentifier\">bf</span>.<span class=\"javaIdentifier\">getBean</span>( <span class=\"javaLiteral\">\"companyDao\"</span> );</pre>\r\n<h2>Running a query</h2>\r\nThe Spring DAO JDBC Template class provides an elegant method of running SQL queries and mapping the result set to\r\nJava objects with a minimal amount of coding.\r\n<pre class=\"prettyprint\"><span class=\"javaKeyword\">public</span> <span class=\"javaIdentifier\">Company</span> <span class=\"javaIdentifier\">getCompany</span>(<span class=\"javaKeyword\">int</span> <span class=\"javaIdentifier\">id</span>) <span class=\"javaKeyword\">throws</span> <span class=\"javaIdentifier\">SQLException</span> {\r\n    <span class=\"javaKeyword\">return</span> <span class=\"javaIdentifier\">jdbcTemplate</span>.<span class=\"javaIdentifier\">queryForObject</span>(\r\n            <span class=\"javaLiteral\">\"SELECT id, name FROM company WHERE id = ?\"</span>,\r\n            <span class=\"javaKeyword\">new</span> <span class=\"javaIdentifier\">ParameterizedRowMapper</span>&lt;<span class=\"javaIdentifier\">Company</span>&gt;() {\r\n                <span class=\"javaKeyword\">public</span> <span class=\"javaIdentifier\">Company</span> <span class=\"javaIdentifier\">mapRow</span>(<span class=\"javaIdentifier\">ResultSet</span> <span class=\"javaIdentifier\">rs</span>, <span class=\"javaKeyword\">int</span> <span class=\"javaIdentifier\">i</span>) <span class=\"javaKeyword\">throws</span> <span class=\"javaIdentifier\">SQLException</span> {\r\n                    <span class=\"javaKeyword\">return</span> <span class=\"javaKeyword\">new</span> <span class=\"javaIdentifier\">Company</span>( <span class=\"javaIdentifier\">rs</span>.<span class=\"javaIdentifier\">getInt</span>(<span class=\"javaLiteral\">1</span>), <span class=\"javaIdentifier\">rs</span>.<span class=\"javaIdentifier\">getString</span>(<span class=\"javaLiteral\">2</span>) );\r\n                }\r\n            },\r\n            <span class=\"javaIdentifier\">id</span>\r\n    );\r\n}</pre>\r\n<h2>Inserts, Updates, and Deletes</h2>\r\nThese are even simpler than the query example.\r\n<pre class=\"prettyprint\"><span class=\"javaKeyword\">public</span> <span class=\"javaKeyword\">int</span> <span class=\"javaIdentifier\">createCompany</span>(<span class=\"javaIdentifier\">Company</span> <span class=\"javaIdentifier\">company</span>) <span class=\"javaKeyword\">throws</span> <span class=\"javaIdentifier\">SQLException</span> {\r\n        <span class=\"javaIdentifier\">jdbcTemplate</span>.<span class=\"javaIdentifier\">update</span>(\r\n                <span class=\"javaLiteral\">\"INSERT INTO company (name) VALUES (?)\"</span>,\r\n                <span class=\"javaIdentifier\">company</span>.<span class=\"javaIdentifier\">getName</span>()\r\n        );\r\n        <span class=\"javaKeyword\">return</span> <span class=\"javaIdentifier\">jdbcTemplate</span>.<span class=\"javaIdentifier\">queryForInt</span>( <span class=\"javaLiteral\">\"select last_insert_id()\"</span> );\r\n    }</pre>\r\nOne weakness of Spring JDBC is that it does not help with retrieving auto-generated keys and generally does not provide\r\nany support for assigning primary keys. The above code is specific to MySQL.\r\n<h2>Additional Resources</h2>\r\nFireStorm/DAO is a <a href=\"/products/firestorm/\">database access tool</a> based on the <a href=\"/data-access-object/\">Data Access Object</a> design pattern.\r\n<p class=\"additionalrl\"><a href=\"/products/firestorm/download/\">Download FireStorm/DAO</a></p>\r\nCodeFutures provides a free program to analyze the performance of your MySQL database.\r\n<p class=\"additionalrl\"><a href=\"/database-performance-analysis/\">Free MySQL Performance Analysis</a></p>\r\nRead about how <a href=\"/database-sharding/\">Database Sharding</a> helps many major companies to linearly scale their database applications.\r\n<p class=\"additionalrl\"><a href=\"/database-sharding-white-paper/\">Request Database Sharding White Paper</a></p>\r\ndbShards economically scales large, high transaction volume databases using <a href=\"/database-sharding/\">Database Sharding</a>.\r\n<p class=\"additionalrl\"><a href=\"/dbshards-product-presentation/\">View Introduction to dbShards Video</a></p>', 'Spring DAO', '', 'inherit', 'open', 'open', '', '214-revision-v1', '', '', '2015-05-22 14:25:34', '2015-05-22 20:25:34', '', '214', 'http://www.agildata.com/214-revision-v1/', '0', 'revision', '', '0');
INSERT INTO `wpag_posts` VALUES('216', '5', '2015-05-22 14:28:36', '0000-00-00 00:00:00', '<h1>Spring JDBC Pagination Tutorial</h1>\r\n<h2>Overview</h2>\r\nThis short tutorial provides sample code for implementating pagination with the Spring Framework.\r\n<h2>Goals</h2>\r\nWhen users of web applications request data, such as a list of bank transactions, it is usually not a good idea\r\nto return all of that data in a single page as there could be hundreds or thousands of records. Typically,\r\nweb applications return the data one page at a time and allow the user to navigate between those pages.\r\n\r\nThere are some different approaches to implementing pagination. One simple aproach is simply to run\r\nthe query against the database and store all of the results in memory in the user\'s session and have the\r\nview render a subset of those results. This is easy to implement but does not scale well as it could potentially\r\nuse a lot of memory on the server, limiting the number of users that can be supported at any time.\r\n\r\nAn alternative approach is to implement pagination in the data services layer so that only a single page\r\nof information is loaded from the database at any time. This means that a new query will be run each time the\r\nuser moves between pages so there is a performance overhead with this approach. However, because of the lower\r\nmemory usage, this solution is also more scalable and that is typically a more important consideration when\r\nit comes to web applications.\r\n<h2>Example</h2>\r\nThis tutorial uses the use code of listing a number of companies. This might be a public service listing\r\nrecords of public companies.\r\n<h2>Using Spring JDBC without Pagination</h2>\r\nFirst of all, let\'s look at a standard technique using Spring JDBC to return a list of companies in a single result set.\r\n<table class=\"code\" width=\"100%\">\r\n<tbody>\r\n<tr>\r\n<td>\r\n<pre><span class=\"javaKeyword\">public</span> <span class=\"javaIdentifier\">List</span>&lt;<span class=\"javaIdentifier\">Company</span>&gt; <span class=\"javaIdentifier\">getCompanies</span>() <span class=\"javaKeyword\">throws</span> <span class=\"javaIdentifier\">SQLException</span> {\r\n    <span class=\"javaKeyword\">return</span> <span class=\"javaIdentifier\">jdbcTemplate</span>.<span class=\"javaIdentifier\">query</span>(\r\n            <span class=\"javaLiteral\">\"SELECT id, name FROM company WHERE user_id = ? AND deleted = 0 ORDER BY name\"</span>,\r\n            <span class=\"javaKeyword\">new</span> <span class=\"javaIdentifier\">ParameterizedRowMapper</span>&lt;<span class=\"javaIdentifier\">Company</span>&gt;() {\r\n                <span class=\"javaKeyword\">public</span> <span class=\"javaIdentifier\">Company</span> <span class=\"javaIdentifier\">mapRow</span>(<span class=\"javaIdentifier\">ResultSet</span> <span class=\"javaIdentifier\">rs</span>, <span class=\"javaKeyword\">int</span> <span class=\"javaIdentifier\">i</span>) <span class=\"javaKeyword\">throws</span> <span class=\"javaIdentifier\">SQLException</span> {\r\n                    <span class=\"javaKeyword\">return</span> <span class=\"javaKeyword\">new</span> <span class=\"javaIdentifier\">Company</span>(\r\n                            <span class=\"javaIdentifier\">rs</span>.<span class=\"javaIdentifier\">getInt</span>(<span class=\"javaLiteral\">1</span>),\r\n                            <span class=\"javaIdentifier\">rs</span>.<span class=\"javaIdentifier\">getString</span>(<span class=\"javaLiteral\">2</span>)\r\n                    );\r\n                }\r\n            },\r\n            <span class=\"javaIdentifier\">userId</span>\r\n    );\r\n}</pre>\r\n</td>\r\n</tr>\r\n</tbody>\r\n</table>\r\n<h2>Using Spring JDBC with Pagination</h2>\r\nHere\'s a new version of the method which uses a PaginationHelper class, which is shown further on in this tutorial.\r\nAs you can see, the usage is very similar to standard Spring JDBC. The most obvious difference is that we now have\r\ntwo SQL statements instead of one. This is necessary if we want to be able to show the users how many pages of data\r\nthere are but it is an extra performance hit so there is room for refinement in this approach by perhaps caching the\r\nnumber of pages. The code uses the standard ParameterizedRowMapper to minimize impact on existing code.\r\n<table class=\"code\" width=\"100%\">\r\n<tbody>\r\n<tr>\r\n<td>\r\n<pre><span class=\"javaKeyword\">public</span> <span class=\"javaIdentifier\">Page</span>&lt;<span class=\"javaIdentifier\">Company</span>&gt; <span class=\"javaIdentifier\">getCompanies</span>(<span class=\"javaKeyword\">final</span> <span class=\"javaKeyword\">int</span> <span class=\"javaIdentifier\">pageNo</span>, <span class=\"javaKeyword\">final</span> <span class=\"javaKeyword\">int</span> <span class=\"javaIdentifier\">pageSize</span>) <span class=\"javaKeyword\">throws</span> <span class=\"javaIdentifier\">SQLException</span> {\r\n        <span class=\"javaIdentifier\">PaginationHelper</span>&lt;<span class=\"javaIdentifier\">Company</span>&gt; <span class=\"javaIdentifier\">ph</span> = <span class=\"javaKeyword\">new</span> <span class=\"javaIdentifier\">PaginationHelper</span>&lt;<span class=\"javaIdentifier\">Company</span>&gt;();\r\n        <span class=\"javaKeyword\">return</span> <span class=\"javaIdentifier\">ph</span>.<span class=\"javaIdentifier\">fetchPage</span>(\r\n                <span class=\"javaIdentifier\">jdbcTemplate</span>,\r\n                <span class=\"javaLiteral\">\"SELECT count(*) FROM company WHERE user_id = ? AND deleted = 0 ORDER BY name\"</span>,\r\n                <span class=\"javaLiteral\">\"SELECT id, name FROM company WHERE user_id = ? AND deleted = 0 ORDER BY name\"</span>,\r\n                <span class=\"javaKeyword\">new</span> <span class=\"javaIdentifier\">Object</span>[]{<span class=\"javaIdentifier\">userId</span>},\r\n                <span class=\"javaIdentifier\">pageNo</span>,\r\n                <span class=\"javaIdentifier\">pageSize</span>,\r\n                <span class=\"javaKeyword\">new</span> <span class=\"javaIdentifier\">ParameterizedRowMapper</span>&lt;<span class=\"javaIdentifier\">Company</span>&gt;() {\r\n                    <span class=\"javaKeyword\">public</span> <span class=\"javaIdentifier\">Company</span> <span class=\"javaIdentifier\">mapRow</span>(<span class=\"javaIdentifier\">ResultSet</span> <span class=\"javaIdentifier\">rs</span>, <span class=\"javaKeyword\">int</span> <span class=\"javaIdentifier\">i</span>) <span class=\"javaKeyword\">throws</span> <span class=\"javaIdentifier\">SQLException</span> {\r\n                        <span class=\"javaKeyword\">return</span> <span class=\"javaKeyword\">new</span> <span class=\"javaIdentifier\">Company</span>(\r\n                            <span class=\"javaIdentifier\">rs</span>.<span class=\"javaIdentifier\">getInt</span>(<span class=\"javaLiteral\">1</span>),\r\n                            <span class=\"javaIdentifier\">rs</span>.<span class=\"javaIdentifier\">getString</span>(<span class=\"javaLiteral\">2</span>)\r\n                        );\r\n                    }\r\n                }\r\n        );\r\n\r\n    }</pre>\r\n</td>\r\n</tr>\r\n</tbody>\r\n</table>\r\n<h2>The Page class</h2>\r\nThe Page class is a very simple template class that contains a list of items, the page number, and the number\r\nof pages that are available.\r\n<table class=\"code\" width=\"100%\">\r\n<tbody>\r\n<tr>\r\n<td>\r\n<pre><span class=\"javaKeyword\">public</span> <span class=\"javaKeyword\">class</span> <span class=\"javaIdentifier\">Page</span>&lt;<span class=\"javaIdentifier\">E</span>&gt; {\r\n\r\n        <span class=\"javaKeyword\">private</span> <span class=\"javaKeyword\">int</span> <span class=\"javaIdentifier\">pageNumber</span>;\r\n        <span class=\"javaKeyword\">private</span> <span class=\"javaKeyword\">int</span> <span class=\"javaIdentifier\">pagesAvailable</span>;\r\n        <span class=\"javaKeyword\">private</span> <span class=\"javaIdentifier\">List</span>&lt;<span class=\"javaIdentifier\">E</span>&gt; <span class=\"javaIdentifier\">pageItems</span> = <span class=\"javaKeyword\">new</span> <span class=\"javaIdentifier\">ArrayList</span>&lt;<span class=\"javaIdentifier\">E</span>&gt;();\r\n\r\n        <span class=\"javaKeyword\">public</span> <span class=\"javaKeyword\">void</span> <span class=\"javaIdentifier\">setPageNumber</span>(<span class=\"javaKeyword\">int</span> <span class=\"javaIdentifier\">pageNumber</span>) {\r\n            <span class=\"javaKeyword\">this</span>.<span class=\"javaIdentifier\">pageNumber</span> = <span class=\"javaIdentifier\">pageNumber</span>;\r\n        }\r\n\r\n        <span class=\"javaKeyword\">public</span> <span class=\"javaKeyword\">void</span> <span class=\"javaIdentifier\">setPagesAvailable</span>(<span class=\"javaKeyword\">int</span> <span class=\"javaIdentifier\">pagesAvailable</span>) {\r\n            <span class=\"javaKeyword\">this</span>.<span class=\"javaIdentifier\">pagesAvailable</span> = <span class=\"javaIdentifier\">pagesAvailable</span>;\r\n        }\r\n\r\n        <span class=\"javaKeyword\">public</span> <span class=\"javaKeyword\">void</span> <span class=\"javaIdentifier\">setPageItems</span>(<span class=\"javaIdentifier\">List</span>&lt;<span class=\"javaIdentifier\">E</span>&gt; <span class=\"javaIdentifier\">pageItems</span>) {\r\n            <span class=\"javaKeyword\">this</span>.<span class=\"javaIdentifier\">pageItems</span> = <span class=\"javaIdentifier\">pageItems</span>;\r\n        }\r\n\r\n        <span class=\"javaKeyword\">public</span> <span class=\"javaKeyword\">int</span> <span class=\"javaIdentifier\">getPageNumber</span>() {\r\n            <span class=\"javaKeyword\">return</span> <span class=\"javaIdentifier\">pageNumber</span>;\r\n        }\r\n\r\n        <span class=\"javaKeyword\">public</span> <span class=\"javaKeyword\">int</span> <span class=\"javaIdentifier\">getPagesAvailable</span>() {\r\n            <span class=\"javaKeyword\">return</span> <span class=\"javaIdentifier\">pagesAvailable</span>;\r\n        }\r\n\r\n        <span class=\"javaKeyword\">public</span> <span class=\"javaIdentifier\">List</span>&lt;<span class=\"javaIdentifier\">E</span>&gt; <span class=\"javaIdentifier\">getPageItems</span>() {\r\n            <span class=\"javaKeyword\">return</span> <span class=\"javaIdentifier\">pageItems</span>;\r\n        }\r\n    }</pre>\r\n</td>\r\n</tr>\r\n</tbody>\r\n</table>\r\n<h2>Pagination Helper</h2>\r\nHere\'s the source code for the PaginationHelper class. This is actually very simple. The first SQL query is executed\r\nto determine how many rows of data are available. This allows the number of pages to be calculated. The second query\r\nis then executed using the JdbcTemplate query method that accepts a Spring ResultSetExtractor. The implementation\r\nof this ResultSetExtractor processes the result set and delegates to the supplied ParameterizedRowMapper for those\r\nrows that should be returned as part of the current page of data.\r\n<table class=\"code\" width=\"100%\">\r\n<tbody>\r\n<tr>\r\n<td>\r\n<pre><span class=\"javaKeyword\">public</span> <span class=\"javaKeyword\">class</span> <span class=\"javaIdentifier\">PaginationHelper</span>&lt;<span class=\"javaIdentifier\">E</span>&gt; {\r\n\r\n    <span class=\"javaKeyword\">public</span> <span class=\"javaIdentifier\">Page</span>&lt;<span class=\"javaIdentifier\">E</span>&gt; <span class=\"javaIdentifier\">fetchPage</span>(\r\n            <span class=\"javaKeyword\">final</span> <span class=\"javaIdentifier\">JdbcTemplate</span> <span class=\"javaIdentifier\">jt</span>,\r\n            <span class=\"javaKeyword\">final</span> <span class=\"javaIdentifier\">String</span> <span class=\"javaIdentifier\">sqlCountRows</span>,\r\n            <span class=\"javaKeyword\">final</span> <span class=\"javaIdentifier\">String</span> <span class=\"javaIdentifier\">sqlFetchRows</span>,\r\n            <span class=\"javaKeyword\">final</span> <span class=\"javaIdentifier\">Object</span> <span class=\"javaIdentifier\">args</span>[],\r\n            <span class=\"javaKeyword\">final</span> <span class=\"javaKeyword\">int</span> <span class=\"javaIdentifier\">pageNo</span>,\r\n            <span class=\"javaKeyword\">final</span> <span class=\"javaKeyword\">int</span> <span class=\"javaIdentifier\">pageSize</span>,\r\n            <span class=\"javaKeyword\">final</span> <span class=\"javaIdentifier\">ParameterizedRowMapper</span>&lt;<span class=\"javaIdentifier\">E</span>&gt; <span class=\"javaIdentifier\">rowMapper</span>) {\r\n\r\n        <span class=\"javaComment\">// determine how many rows are available\r\n</span>        <span class=\"javaKeyword\">final</span> <span class=\"javaKeyword\">int</span> <span class=\"javaIdentifier\">rowCount</span> = <span class=\"javaIdentifier\">jt</span>.<span class=\"javaIdentifier\">queryForInt</span>(<span class=\"javaIdentifier\">sqlCountRows</span>, <span class=\"javaIdentifier\">args</span>);\r\n\r\n        <span class=\"javaComment\">// calculate the number of pages\r\n</span>        <span class=\"javaKeyword\">int</span> <span class=\"javaIdentifier\">pageCount</span> = <span class=\"javaIdentifier\">rowCount</span> / <span class=\"javaIdentifier\">pageSize</span>;\r\n        <span class=\"javaKeyword\">if</span> (<span class=\"javaIdentifier\">rowCount</span> &gt; <span class=\"javaIdentifier\">pageSize</span> * <span class=\"javaIdentifier\">pageCount</span>) {\r\n            <span class=\"javaIdentifier\">pageCount</span>++;\r\n        }\r\n\r\n        <span class=\"javaComment\">// create the page object\r\n</span>        <span class=\"javaKeyword\">final</span> <span class=\"javaIdentifier\">Page</span>&lt;<span class=\"javaIdentifier\">E</span>&gt; <span class=\"javaIdentifier\">page</span> = <span class=\"javaKeyword\">new</span> <span class=\"javaIdentifier\">Page</span>&lt;<span class=\"javaIdentifier\">E</span>&gt;();\r\n        <span class=\"javaIdentifier\">page</span>.<span class=\"javaIdentifier\">setPageNumber</span>(<span class=\"javaIdentifier\">pageNo</span>);\r\n        <span class=\"javaIdentifier\">page</span>.<span class=\"javaIdentifier\">setPagesAvailable</span>(<span class=\"javaIdentifier\">pageCount</span>);\r\n\r\n        <span class=\"javaComment\">// fetch a single page of results\r\n</span>        <span class=\"javaKeyword\">final</span> <span class=\"javaKeyword\">int</span> <span class=\"javaIdentifier\">startRow</span> = (<span class=\"javaIdentifier\">pageNo</span> - <span class=\"javaLiteral\">1</span>) * <span class=\"javaIdentifier\">pageSize</span>;\r\n        <span class=\"javaIdentifier\">jt</span>.<span class=\"javaIdentifier\">query</span>(\r\n                <span class=\"javaIdentifier\">sqlFetchRows</span>,\r\n                <span class=\"javaIdentifier\">args</span>,\r\n                <span class=\"javaKeyword\">new</span> <span class=\"javaIdentifier\">ResultSetExtractor</span>() {\r\n                    <span class=\"javaKeyword\">public</span> <span class=\"javaIdentifier\">Object</span> <span class=\"javaIdentifier\">extractData</span>(<span class=\"javaIdentifier\">ResultSet</span> <span class=\"javaIdentifier\">rs</span>) <span class=\"javaKeyword\">throws</span> <span class=\"javaIdentifier\">SQLException</span>, <span class=\"javaIdentifier\">DataAccessException</span> {\r\n                        <span class=\"javaKeyword\">final</span> <span class=\"javaIdentifier\">List</span> <span class=\"javaIdentifier\">pageItems</span> = <span class=\"javaIdentifier\">page</span>.<span class=\"javaIdentifier\">getPageItems</span>();\r\n                        <span class=\"javaKeyword\">int</span> <span class=\"javaIdentifier\">currentRow</span> = <span class=\"javaLiteral\">0</span>;\r\n                        <span class=\"javaKeyword\">while</span> (<span class=\"javaIdentifier\">rs</span>.<span class=\"javaIdentifier\">next</span>() &amp;&amp; <span class=\"javaIdentifier\">currentRow</span> &lt; <span class=\"javaIdentifier\">startRow</span> + <span class=\"javaIdentifier\">pageSize</span>) {\r\n                            <span class=\"javaKeyword\">if</span> (<span class=\"javaIdentifier\">currentRow</span> &gt;= <span class=\"javaIdentifier\">startRow</span>) {\r\n                                <span class=\"javaIdentifier\">pageItems</span>.<span class=\"javaIdentifier\">add</span>(<span class=\"javaIdentifier\">rowMapper</span>.<span class=\"javaIdentifier\">mapRow</span>(<span class=\"javaIdentifier\">rs</span>, <span class=\"javaIdentifier\">currentRow</span>));\r\n                            }\r\n                            <span class=\"javaIdentifier\">currentRow</span>++;\r\n                        }\r\n                        <span class=\"javaKeyword\">return</span> <span class=\"javaIdentifier\">page</span>;\r\n                    }\r\n                });\r\n        <span class=\"javaKeyword\">return</span> <span class=\"javaIdentifier\">page</span>;\r\n    }\r\n\r\n}</pre>\r\n</td>\r\n</tr>\r\n</tbody>\r\n</table>\r\n<h2>Summary</h2>\r\nThis tutorial demonstrates simple and effective database level pagination using Spring JDBC\r\nbut this code could be improved in a number of ways:\r\n<ul>\r\n	<li>It could cache the number of pages available to remove the overhead of running the \'count\' SQL each time</li>\r\n	<li>It could make use of ScrollableResultSet support when fetching the rows</li>\r\n	<li>It could make use of database specific features such as MySQL\'s support for the \"LIMIT offset, count\" syntax</li>\r\n</ul>\r\nIt would be nice if the Spring Framework could be extended to include pagination support\r\nbut the beauty of the Spring Framework though is that it makes it easy to extend with extra functionality.', 'Spring JDBC Pagination Tutorial', '', 'draft', 'open', 'open', '', 'spring-jdbc-pagination', '', '', '2015-05-22 14:28:36', '2015-05-22 20:28:36', '', '0', 'http://www.agildata.com/?page_id=216', '0', 'page', '', '0');
INSERT INTO `wpag_posts` VALUES('217', '5', '2015-05-22 14:28:28', '2015-05-22 20:28:28', '<h1>Spring JDBC Pagination Tutorial</h1>\r\n<h2>Overview</h2>\r\nThis short tutorial provides sample code for implementating pagination with the Spring Framework.\r\n<h2>Goals</h2>\r\nWhen users of web applications request data, such as a list of bank transactions, it is usually not a good idea\r\nto return all of that data in a single page as there could be hundreds or thousands of records. Typically,\r\nweb applications return the data one page at a time and allow the user to navigate between those pages.\r\n\r\nThere are some different approaches to implementing pagination. One simple aproach is simply to run\r\nthe query against the database and store all of the results in memory in the user\'s session and have the\r\nview render a subset of those results. This is easy to implement but does not scale well as it could potentially\r\nuse a lot of memory on the server, limiting the number of users that can be supported at any time.\r\n\r\nAn alternative approach is to implement pagination in the data services layer so that only a single page\r\nof information is loaded from the database at any time. This means that a new query will be run each time the\r\nuser moves between pages so there is a performance overhead with this approach. However, because of the lower\r\nmemory usage, this solution is also more scalable and that is typically a more important consideration when\r\nit comes to web applications.\r\n<h2>Example</h2>\r\nThis tutorial uses the use code of listing a number of companies. This might be a public service listing\r\nrecords of public companies.\r\n<h2>Using Spring JDBC without Pagination</h2>\r\nFirst of all, let\'s look at a standard technique using Spring JDBC to return a list of companies in a single result set.\r\n<table class=\"code\" width=\"100%\">\r\n<tbody>\r\n<tr>\r\n<td>\r\n<pre><span class=\"javaKeyword\">public</span> <span class=\"javaIdentifier\">List</span>&lt;<span class=\"javaIdentifier\">Company</span>&gt; <span class=\"javaIdentifier\">getCompanies</span>() <span class=\"javaKeyword\">throws</span> <span class=\"javaIdentifier\">SQLException</span> {\r\n    <span class=\"javaKeyword\">return</span> <span class=\"javaIdentifier\">jdbcTemplate</span>.<span class=\"javaIdentifier\">query</span>(\r\n            <span class=\"javaLiteral\">\"SELECT id, name FROM company WHERE user_id = ? AND deleted = 0 ORDER BY name\"</span>,\r\n            <span class=\"javaKeyword\">new</span> <span class=\"javaIdentifier\">ParameterizedRowMapper</span>&lt;<span class=\"javaIdentifier\">Company</span>&gt;() {\r\n                <span class=\"javaKeyword\">public</span> <span class=\"javaIdentifier\">Company</span> <span class=\"javaIdentifier\">mapRow</span>(<span class=\"javaIdentifier\">ResultSet</span> <span class=\"javaIdentifier\">rs</span>, <span class=\"javaKeyword\">int</span> <span class=\"javaIdentifier\">i</span>) <span class=\"javaKeyword\">throws</span> <span class=\"javaIdentifier\">SQLException</span> {\r\n                    <span class=\"javaKeyword\">return</span> <span class=\"javaKeyword\">new</span> <span class=\"javaIdentifier\">Company</span>(\r\n                            <span class=\"javaIdentifier\">rs</span>.<span class=\"javaIdentifier\">getInt</span>(<span class=\"javaLiteral\">1</span>),\r\n                            <span class=\"javaIdentifier\">rs</span>.<span class=\"javaIdentifier\">getString</span>(<span class=\"javaLiteral\">2</span>)\r\n                    );\r\n                }\r\n            },\r\n            <span class=\"javaIdentifier\">userId</span>\r\n    );\r\n}</pre>\r\n</td>\r\n</tr>\r\n</tbody>\r\n</table>\r\n<h2>Using Spring JDBC with Pagination</h2>\r\nHere\'s a new version of the method which uses a PaginationHelper class, which is shown further on in this tutorial.\r\nAs you can see, the usage is very similar to standard Spring JDBC. The most obvious difference is that we now have\r\ntwo SQL statements instead of one. This is necessary if we want to be able to show the users how many pages of data\r\nthere are but it is an extra performance hit so there is room for refinement in this approach by perhaps caching the\r\nnumber of pages. The code uses the standard ParameterizedRowMapper to minimize impact on existing code.\r\n<table class=\"code\" width=\"100%\">\r\n<tbody>\r\n<tr>\r\n<td>\r\n<pre><span class=\"javaKeyword\">public</span> <span class=\"javaIdentifier\">Page</span>&lt;<span class=\"javaIdentifier\">Company</span>&gt; <span class=\"javaIdentifier\">getCompanies</span>(<span class=\"javaKeyword\">final</span> <span class=\"javaKeyword\">int</span> <span class=\"javaIdentifier\">pageNo</span>, <span class=\"javaKeyword\">final</span> <span class=\"javaKeyword\">int</span> <span class=\"javaIdentifier\">pageSize</span>) <span class=\"javaKeyword\">throws</span> <span class=\"javaIdentifier\">SQLException</span> {\r\n        <span class=\"javaIdentifier\">PaginationHelper</span>&lt;<span class=\"javaIdentifier\">Company</span>&gt; <span class=\"javaIdentifier\">ph</span> = <span class=\"javaKeyword\">new</span> <span class=\"javaIdentifier\">PaginationHelper</span>&lt;<span class=\"javaIdentifier\">Company</span>&gt;();\r\n        <span class=\"javaKeyword\">return</span> <span class=\"javaIdentifier\">ph</span>.<span class=\"javaIdentifier\">fetchPage</span>(\r\n                <span class=\"javaIdentifier\">jdbcTemplate</span>,\r\n                <span class=\"javaLiteral\">\"SELECT count(*) FROM company WHERE user_id = ? AND deleted = 0 ORDER BY name\"</span>,\r\n                <span class=\"javaLiteral\">\"SELECT id, name FROM company WHERE user_id = ? AND deleted = 0 ORDER BY name\"</span>,\r\n                <span class=\"javaKeyword\">new</span> <span class=\"javaIdentifier\">Object</span>[]{<span class=\"javaIdentifier\">userId</span>},\r\n                <span class=\"javaIdentifier\">pageNo</span>,\r\n                <span class=\"javaIdentifier\">pageSize</span>,\r\n                <span class=\"javaKeyword\">new</span> <span class=\"javaIdentifier\">ParameterizedRowMapper</span>&lt;<span class=\"javaIdentifier\">Company</span>&gt;() {\r\n                    <span class=\"javaKeyword\">public</span> <span class=\"javaIdentifier\">Company</span> <span class=\"javaIdentifier\">mapRow</span>(<span class=\"javaIdentifier\">ResultSet</span> <span class=\"javaIdentifier\">rs</span>, <span class=\"javaKeyword\">int</span> <span class=\"javaIdentifier\">i</span>) <span class=\"javaKeyword\">throws</span> <span class=\"javaIdentifier\">SQLException</span> {\r\n                        <span class=\"javaKeyword\">return</span> <span class=\"javaKeyword\">new</span> <span class=\"javaIdentifier\">Company</span>(\r\n                            <span class=\"javaIdentifier\">rs</span>.<span class=\"javaIdentifier\">getInt</span>(<span class=\"javaLiteral\">1</span>),\r\n                            <span class=\"javaIdentifier\">rs</span>.<span class=\"javaIdentifier\">getString</span>(<span class=\"javaLiteral\">2</span>)\r\n                        );\r\n                    }\r\n                }\r\n        );\r\n\r\n    }</pre>\r\n</td>\r\n</tr>\r\n</tbody>\r\n</table>\r\n<h2>The Page class</h2>\r\nThe Page class is a very simple template class that contains a list of items, the page number, and the number\r\nof pages that are available.\r\n<table class=\"code\" width=\"100%\">\r\n<tbody>\r\n<tr>\r\n<td>\r\n<pre><span class=\"javaKeyword\">public</span> <span class=\"javaKeyword\">class</span> <span class=\"javaIdentifier\">Page</span>&lt;<span class=\"javaIdentifier\">E</span>&gt; {\r\n\r\n        <span class=\"javaKeyword\">private</span> <span class=\"javaKeyword\">int</span> <span class=\"javaIdentifier\">pageNumber</span>;\r\n        <span class=\"javaKeyword\">private</span> <span class=\"javaKeyword\">int</span> <span class=\"javaIdentifier\">pagesAvailable</span>;\r\n        <span class=\"javaKeyword\">private</span> <span class=\"javaIdentifier\">List</span>&lt;<span class=\"javaIdentifier\">E</span>&gt; <span class=\"javaIdentifier\">pageItems</span> = <span class=\"javaKeyword\">new</span> <span class=\"javaIdentifier\">ArrayList</span>&lt;<span class=\"javaIdentifier\">E</span>&gt;();\r\n\r\n        <span class=\"javaKeyword\">public</span> <span class=\"javaKeyword\">void</span> <span class=\"javaIdentifier\">setPageNumber</span>(<span class=\"javaKeyword\">int</span> <span class=\"javaIdentifier\">pageNumber</span>) {\r\n            <span class=\"javaKeyword\">this</span>.<span class=\"javaIdentifier\">pageNumber</span> = <span class=\"javaIdentifier\">pageNumber</span>;\r\n        }\r\n\r\n        <span class=\"javaKeyword\">public</span> <span class=\"javaKeyword\">void</span> <span class=\"javaIdentifier\">setPagesAvailable</span>(<span class=\"javaKeyword\">int</span> <span class=\"javaIdentifier\">pagesAvailable</span>) {\r\n            <span class=\"javaKeyword\">this</span>.<span class=\"javaIdentifier\">pagesAvailable</span> = <span class=\"javaIdentifier\">pagesAvailable</span>;\r\n        }\r\n\r\n        <span class=\"javaKeyword\">public</span> <span class=\"javaKeyword\">void</span> <span class=\"javaIdentifier\">setPageItems</span>(<span class=\"javaIdentifier\">List</span>&lt;<span class=\"javaIdentifier\">E</span>&gt; <span class=\"javaIdentifier\">pageItems</span>) {\r\n            <span class=\"javaKeyword\">this</span>.<span class=\"javaIdentifier\">pageItems</span> = <span class=\"javaIdentifier\">pageItems</span>;\r\n        }\r\n\r\n        <span class=\"javaKeyword\">public</span> <span class=\"javaKeyword\">int</span> <span class=\"javaIdentifier\">getPageNumber</span>() {\r\n            <span class=\"javaKeyword\">return</span> <span class=\"javaIdentifier\">pageNumber</span>;\r\n        }\r\n\r\n        <span class=\"javaKeyword\">public</span> <span class=\"javaKeyword\">int</span> <span class=\"javaIdentifier\">getPagesAvailable</span>() {\r\n            <span class=\"javaKeyword\">return</span> <span class=\"javaIdentifier\">pagesAvailable</span>;\r\n        }\r\n\r\n        <span class=\"javaKeyword\">public</span> <span class=\"javaIdentifier\">List</span>&lt;<span class=\"javaIdentifier\">E</span>&gt; <span class=\"javaIdentifier\">getPageItems</span>() {\r\n            <span class=\"javaKeyword\">return</span> <span class=\"javaIdentifier\">pageItems</span>;\r\n        }\r\n    }</pre>\r\n</td>\r\n</tr>\r\n</tbody>\r\n</table>\r\n<h2>Pagination Helper</h2>\r\nHere\'s the source code for the PaginationHelper class. This is actually very simple. The first SQL query is executed\r\nto determine how many rows of data are available. This allows the number of pages to be calculated. The second query\r\nis then executed using the JdbcTemplate query method that accepts a Spring ResultSetExtractor. The implementation\r\nof this ResultSetExtractor processes the result set and delegates to the supplied ParameterizedRowMapper for those\r\nrows that should be returned as part of the current page of data.\r\n<table class=\"code\" width=\"100%\">\r\n<tbody>\r\n<tr>\r\n<td>\r\n<pre><span class=\"javaKeyword\">public</span> <span class=\"javaKeyword\">class</span> <span class=\"javaIdentifier\">PaginationHelper</span>&lt;<span class=\"javaIdentifier\">E</span>&gt; {\r\n\r\n    <span class=\"javaKeyword\">public</span> <span class=\"javaIdentifier\">Page</span>&lt;<span class=\"javaIdentifier\">E</span>&gt; <span class=\"javaIdentifier\">fetchPage</span>(\r\n            <span class=\"javaKeyword\">final</span> <span class=\"javaIdentifier\">JdbcTemplate</span> <span class=\"javaIdentifier\">jt</span>,\r\n            <span class=\"javaKeyword\">final</span> <span class=\"javaIdentifier\">String</span> <span class=\"javaIdentifier\">sqlCountRows</span>,\r\n            <span class=\"javaKeyword\">final</span> <span class=\"javaIdentifier\">String</span> <span class=\"javaIdentifier\">sqlFetchRows</span>,\r\n            <span class=\"javaKeyword\">final</span> <span class=\"javaIdentifier\">Object</span> <span class=\"javaIdentifier\">args</span>[],\r\n            <span class=\"javaKeyword\">final</span> <span class=\"javaKeyword\">int</span> <span class=\"javaIdentifier\">pageNo</span>,\r\n            <span class=\"javaKeyword\">final</span> <span class=\"javaKeyword\">int</span> <span class=\"javaIdentifier\">pageSize</span>,\r\n            <span class=\"javaKeyword\">final</span> <span class=\"javaIdentifier\">ParameterizedRowMapper</span>&lt;<span class=\"javaIdentifier\">E</span>&gt; <span class=\"javaIdentifier\">rowMapper</span>) {\r\n\r\n        <span class=\"javaComment\">// determine how many rows are available\r\n</span>        <span class=\"javaKeyword\">final</span> <span class=\"javaKeyword\">int</span> <span class=\"javaIdentifier\">rowCount</span> = <span class=\"javaIdentifier\">jt</span>.<span class=\"javaIdentifier\">queryForInt</span>(<span class=\"javaIdentifier\">sqlCountRows</span>, <span class=\"javaIdentifier\">args</span>);\r\n\r\n        <span class=\"javaComment\">// calculate the number of pages\r\n</span>        <span class=\"javaKeyword\">int</span> <span class=\"javaIdentifier\">pageCount</span> = <span class=\"javaIdentifier\">rowCount</span> / <span class=\"javaIdentifier\">pageSize</span>;\r\n        <span class=\"javaKeyword\">if</span> (<span class=\"javaIdentifier\">rowCount</span> &gt; <span class=\"javaIdentifier\">pageSize</span> * <span class=\"javaIdentifier\">pageCount</span>) {\r\n            <span class=\"javaIdentifier\">pageCount</span>++;\r\n        }\r\n\r\n        <span class=\"javaComment\">// create the page object\r\n</span>        <span class=\"javaKeyword\">final</span> <span class=\"javaIdentifier\">Page</span>&lt;<span class=\"javaIdentifier\">E</span>&gt; <span class=\"javaIdentifier\">page</span> = <span class=\"javaKeyword\">new</span> <span class=\"javaIdentifier\">Page</span>&lt;<span class=\"javaIdentifier\">E</span>&gt;();\r\n        <span class=\"javaIdentifier\">page</span>.<span class=\"javaIdentifier\">setPageNumber</span>(<span class=\"javaIdentifier\">pageNo</span>);\r\n        <span class=\"javaIdentifier\">page</span>.<span class=\"javaIdentifier\">setPagesAvailable</span>(<span class=\"javaIdentifier\">pageCount</span>);\r\n\r\n        <span class=\"javaComment\">// fetch a single page of results\r\n</span>        <span class=\"javaKeyword\">final</span> <span class=\"javaKeyword\">int</span> <span class=\"javaIdentifier\">startRow</span> = (<span class=\"javaIdentifier\">pageNo</span> - <span class=\"javaLiteral\">1</span>) * <span class=\"javaIdentifier\">pageSize</span>;\r\n        <span class=\"javaIdentifier\">jt</span>.<span class=\"javaIdentifier\">query</span>(\r\n                <span class=\"javaIdentifier\">sqlFetchRows</span>,\r\n                <span class=\"javaIdentifier\">args</span>,\r\n                <span class=\"javaKeyword\">new</span> <span class=\"javaIdentifier\">ResultSetExtractor</span>() {\r\n                    <span class=\"javaKeyword\">public</span> <span class=\"javaIdentifier\">Object</span> <span class=\"javaIdentifier\">extractData</span>(<span class=\"javaIdentifier\">ResultSet</span> <span class=\"javaIdentifier\">rs</span>) <span class=\"javaKeyword\">throws</span> <span class=\"javaIdentifier\">SQLException</span>, <span class=\"javaIdentifier\">DataAccessException</span> {\r\n                        <span class=\"javaKeyword\">final</span> <span class=\"javaIdentifier\">List</span> <span class=\"javaIdentifier\">pageItems</span> = <span class=\"javaIdentifier\">page</span>.<span class=\"javaIdentifier\">getPageItems</span>();\r\n                        <span class=\"javaKeyword\">int</span> <span class=\"javaIdentifier\">currentRow</span> = <span class=\"javaLiteral\">0</span>;\r\n                        <span class=\"javaKeyword\">while</span> (<span class=\"javaIdentifier\">rs</span>.<span class=\"javaIdentifier\">next</span>() &amp;&amp; <span class=\"javaIdentifier\">currentRow</span> &lt; <span class=\"javaIdentifier\">startRow</span> + <span class=\"javaIdentifier\">pageSize</span>) {\r\n                            <span class=\"javaKeyword\">if</span> (<span class=\"javaIdentifier\">currentRow</span> &gt;= <span class=\"javaIdentifier\">startRow</span>) {\r\n                                <span class=\"javaIdentifier\">pageItems</span>.<span class=\"javaIdentifier\">add</span>(<span class=\"javaIdentifier\">rowMapper</span>.<span class=\"javaIdentifier\">mapRow</span>(<span class=\"javaIdentifier\">rs</span>, <span class=\"javaIdentifier\">currentRow</span>));\r\n                            }\r\n                            <span class=\"javaIdentifier\">currentRow</span>++;\r\n                        }\r\n                        <span class=\"javaKeyword\">return</span> <span class=\"javaIdentifier\">page</span>;\r\n                    }\r\n                });\r\n        <span class=\"javaKeyword\">return</span> <span class=\"javaIdentifier\">page</span>;\r\n    }\r\n\r\n}</pre>\r\n</td>\r\n</tr>\r\n</tbody>\r\n</table>\r\n<h2>Summary</h2>\r\nThis tutorial demonstrates simple and effective database level pagination using Spring JDBC\r\nbut this code could be improved in a number of ways:\r\n<ul>\r\n	<li>It could cache the number of pages available to remove the overhead of running the \'count\' SQL each time</li>\r\n	<li>It could make use of ScrollableResultSet support when fetching the rows</li>\r\n	<li>It could make use of database specific features such as MySQL\'s support for the \"LIMIT offset, count\" syntax</li>\r\n</ul>\r\nIt would be nice if the Spring Framework could be extended to include pagination support\r\nbut the beauty of the Spring Framework though is that it makes it easy to extend with extra functionality.', 'Spring JDBC Pagination Tutorial', '', 'inherit', 'open', 'open', '', '216-revision-v1', '', '', '2015-05-22 14:28:28', '2015-05-22 20:28:28', '', '216', 'http://www.agildata.com/216-revision-v1/', '0', 'revision', '', '0');
INSERT INTO `wpag_posts` VALUES('218', '5', '2015-05-22 14:30:13', '0000-00-00 00:00:00', '<h1>Building Data Access Layers using Java DAOs</h1>\r\n<h2>Using the Data Access Object Design (DAO) Pattern to Build a Data Access Layer (DAL)</h2>\r\nBusiness applications almost always need access to data from relational or object databases and the Java platform offers many techniques for accessing this data. The oldest technique is to use the Java Database Connectivity (JDBC) API, which provides the capability to execute SQL queries against a database and then fetch the results, one column at a time. Although this API provides everything a developer needs to access data and to persist application state, Java 2 Enterprise Edition (J2EE) offers a newer persistence framework in the\r\nform of Entity Beans, a subset of the Enterprise JavaBean (EJB) framework.\r\nAlthough there have been many improvements in the more recent EJB 2.0\r\nspecification, many developers are now looking to alternative persistence frameworks, such as Spring and Hibernate.\r\n<h2>The Benefits of Using Data Access Objects for your Data Access Layer</h2>\r\nThe DAO design pattern provides a technique for separating object and data access logic from any particular persistence mechanism or API. There are clear benefits to this approach from an architectural perspective. The DAO approach provides flexibility to change an application\'s persistence mechanism over time without the need to re-engineer application logic that interacts with the DAO tier. For example, there may be performance benefits in changing an application\'s performance mechanism from using Entity Beans to using direct JDBC calls from a session bean, or even a move to an alternative persistence framework, such as Hibernate. Without a DAO tier in place, this sort of transition would require extensive re-engineering of existing code.\r\n\r\nThe DAO design pattern also provides a simple, consistent API for data access that does not require knowledge of JDB or EJB interfaces. A typical DAO interface is shown below.\r\n<p class=\"CODE\">public interface CustomerDAO</p>\r\n{\r\n\r\npublic void insert(Customer customer)\r\n\r\nthrows CustomerDAOException;\r\n<p class=\"CODE\">public void update(CustomerPK pk, Customer customer)</p>\r\nthrows CustomerDAOException;\r\n<p class=\"CODE\">public void delete(CustomerPK pk)</p>\r\nthrows CustomerDAOException;\r\n<p class=\"CODE\">public Customer[] findAll()</p>\r\nthrows CustomerDAOException;\r\n<p class=\"CODE\">public Customer findByPrimaryKey(String email)</p>\r\nthrows CustomerDAOException;\r\n<p class=\"CODE\">public Customer[] findByCompany(int companyId)</p>\r\nthrows CustomerDAOException;\r\n\r\n}\r\n\r\nIt is important to note that DAO does not just apply to simple mappings of one object to one relational table, but also allows complex queries to be performed and allows for stored procedures and database views to be mapped into Java data structures.\r\n<h2>Minimizing the Impact of Moving to DAO for you Data Access Layer</h2>\r\nCodeFutures\' objective is to minimize the importance of the main argument against using DAO: the fact that it requires a significant amount of repetitive source code to be produced for no immediate advantage over using JDBC or EJB directly. For many developers, this disadvantage is good enough reason to ignore the long-term benefits of using a framework-neutral API, especially where there are strict project deadlines. Without the code generation advantages of FireStorm/DAO, it is not easy to justify to a project manager or project sponsor the time and cost of manually writing DAO code, regardless of any future benefits they may see.\r\n<h2>Data Access Layer Code Generation</h2>\r\nCodeFutures\' solution to the manual coding problem is to automate the production of a DAO tier, as well as automating the actual implementation logic for whichever persistence framework is deemed appropriate for an application. This approach is easy to adopt because almost all databases use a standard language for defining their structure (SQL).\r\n<h2>Additional Resources</h2>\r\nFireStorm/DAO is a <a href=\"/products/firestorm/\">database access tool</a> based on the <a href=\"/data-access-object/\">Data Access Object</a> design pattern.\r\n<p class=\"additionalrl\"><a href=\"/products/firestorm/download/\">Download FireStorm/DAO</a></p>\r\nCodeFutures provides a free program to analyze the performance of your MySQL database.\r\n<p class=\"additionalrl\"><a href=\"/database-performance-analysis/\">Free MySQL Performance Analysis</a></p>\r\nRead about how <a href=\"/database-sharding/\">Database Sharding</a> helps many major companies to linearly scale their database applications.\r\n<p class=\"additionalrl\"><a href=\"/database-sharding-white-paper/\">Request Database Sharding White Paper</a></p>\r\ndbShards economically scales large, high transaction volume databases using <a href=\"/database-sharding/\">Database Sharding</a>.\r\n<p class=\"additionalrl\"><a href=\"/dbshards-product-presentation/\">View Introduction to dbShards Video</a></p>', 'Using the Data Access Object Design (DAO) Pattern to Build a Data Access Layer (DAL)', '', 'draft', 'open', 'open', '', 'data-access-object-design-dao-pattern-build-data-access-layer-dal', '', '', '2015-05-22 14:30:13', '2015-05-22 20:30:13', '', '0', 'http://www.agildata.com/?page_id=218', '0', 'page', '', '0');
INSERT INTO `wpag_posts` VALUES('219', '5', '2015-05-22 14:30:05', '2015-05-22 20:30:05', '<h1>Building Data Access Layers using Java DAOs</h1>\r\n<h2>Using the Data Access Object Design (DAO) Pattern to Build a Data Access Layer (DAL)</h2>\r\nBusiness applications almost always need access to data from relational or object databases and the Java platform offers many techniques for accessing this data. The oldest technique is to use the Java Database Connectivity (JDBC) API, which provides the capability to execute SQL queries against a database and then fetch the results, one column at a time. Although this API provides everything a developer needs to access data and to persist application state, Java 2 Enterprise Edition (J2EE) offers a newer persistence framework in the\r\nform of Entity Beans, a subset of the Enterprise JavaBean (EJB) framework.\r\nAlthough there have been many improvements in the more recent EJB 2.0\r\nspecification, many developers are now looking to alternative persistence frameworks, such as Spring and Hibernate.\r\n<h2>The Benefits of Using Data Access Objects for your Data Access Layer</h2>\r\nThe DAO design pattern provides a technique for separating object and data access logic from any particular persistence mechanism or API. There are clear benefits to this approach from an architectural perspective. The DAO approach provides flexibility to change an application\'s persistence mechanism over time without the need to re-engineer application logic that interacts with the DAO tier. For example, there may be performance benefits in changing an application\'s performance mechanism from using Entity Beans to using direct JDBC calls from a session bean, or even a move to an alternative persistence framework, such as Hibernate. Without a DAO tier in place, this sort of transition would require extensive re-engineering of existing code.\r\n\r\nThe DAO design pattern also provides a simple, consistent API for data access that does not require knowledge of JDB or EJB interfaces. A typical DAO interface is shown below.\r\n<p class=\"CODE\">public interface CustomerDAO</p>\r\n{\r\n\r\npublic void insert(Customer customer)\r\n\r\nthrows CustomerDAOException;\r\n<p class=\"CODE\">public void update(CustomerPK pk, Customer customer)</p>\r\nthrows CustomerDAOException;\r\n<p class=\"CODE\">public void delete(CustomerPK pk)</p>\r\nthrows CustomerDAOException;\r\n<p class=\"CODE\">public Customer[] findAll()</p>\r\nthrows CustomerDAOException;\r\n<p class=\"CODE\">public Customer findByPrimaryKey(String email)</p>\r\nthrows CustomerDAOException;\r\n<p class=\"CODE\">public Customer[] findByCompany(int companyId)</p>\r\nthrows CustomerDAOException;\r\n\r\n}\r\n\r\nIt is important to note that DAO does not just apply to simple mappings of one object to one relational table, but also allows complex queries to be performed and allows for stored procedures and database views to be mapped into Java data structures.\r\n<h2>Minimizing the Impact of Moving to DAO for you Data Access Layer</h2>\r\nCodeFutures\' objective is to minimize the importance of the main argument against using DAO: the fact that it requires a significant amount of repetitive source code to be produced for no immediate advantage over using JDBC or EJB directly. For many developers, this disadvantage is good enough reason to ignore the long-term benefits of using a framework-neutral API, especially where there are strict project deadlines. Without the code generation advantages of FireStorm/DAO, it is not easy to justify to a project manager or project sponsor the time and cost of manually writing DAO code, regardless of any future benefits they may see.\r\n<h2>Data Access Layer Code Generation</h2>\r\nCodeFutures\' solution to the manual coding problem is to automate the production of a DAO tier, as well as automating the actual implementation logic for whichever persistence framework is deemed appropriate for an application. This approach is easy to adopt because almost all databases use a standard language for defining their structure (SQL).\r\n<h2>Additional Resources</h2>\r\nFireStorm/DAO is a <a href=\"/products/firestorm/\">database access tool</a> based on the <a href=\"/data-access-object/\">Data Access Object</a> design pattern.\r\n<p class=\"additionalrl\"><a href=\"/products/firestorm/download/\">Download FireStorm/DAO</a></p>\r\nCodeFutures provides a free program to analyze the performance of your MySQL database.\r\n<p class=\"additionalrl\"><a href=\"/database-performance-analysis/\">Free MySQL Performance Analysis</a></p>\r\nRead about how <a href=\"/database-sharding/\">Database Sharding</a> helps many major companies to linearly scale their database applications.\r\n<p class=\"additionalrl\"><a href=\"/database-sharding-white-paper/\">Request Database Sharding White Paper</a></p>\r\ndbShards economically scales large, high transaction volume databases using <a href=\"/database-sharding/\">Database Sharding</a>.\r\n<p class=\"additionalrl\"><a href=\"/dbshards-product-presentation/\">View Introduction to dbShards Video</a></p>', 'Using the Data Access Object Design (DAO) Pattern to Build a Data Access Layer (DAL)', '', 'inherit', 'open', 'open', '', '218-revision-v1', '', '', '2015-05-22 14:30:05', '2015-05-22 20:30:05', '', '218', 'http://www.agildata.com/218-revision-v1/', '0', 'revision', '', '0');
INSERT INTO `wpag_posts` VALUES('358', '5', '2015-06-03 16:01:52', '2015-06-03 22:01:52', 'AgilData, formerly CodeFutures, a provider of Agile <strong>Streaming Big Data</strong> technologies, announced Dan Lynn as CEO. Lynn assumes the role from Founder Cory Isaacson, who has joined RMS and will now serve as chairman of AgilData. Lynn brings more than 14 years of advanced technology and business success experience, and will help AgilData Code build on its industry leadership advancing Agile Big Data initiatives. His technical and product expertise will be invaluable to achieving the AgilData platform goals of simplifying streaming fast data at scale using SQL helping companies be more competitive by getting more value from their ever growing volumes of mission-critical data.\r\n\r\nIsaacson states, “Dan Lynn has the experience and passion to lead AgilData into the next chapter of its growth, and to help organizations simplify the increasingly complex set of challenges that bog Big Data initiatives down. Dan’s mix of business experience and deep technology leadership is a perfect fit for AgilData as it delivers new innovation to the Big Data market space.”\r\n\r\n“The opportunity to join AgilData is very exciting as we work to radically change the way organizations stream, organize, and gain value from Big Data,” said Lynn. “Today’s large IT departments are quickly adopting Agile-based approaches that are iterative and meet the real-time needs of the organization. Our mission is to bring the same agility to data retrieval through new approaches that are streamlined to empower developers to more quickly achieve the goals of the business.”\r\n\r\nAgilData is a leading supplier of database performance tools.  Its Big Data platform AgilData is designed to remove the complexity and limitations of current data management approaches. AgilData provides high-performance stream processing that supports the real-time, data-driven enterprise enabling organizations to quickly and efficiently gather meaningful insights from fast data. AgilData’s vision is to enable an agile approach to Big Data processing and data modeling – transforming static database repositories into a flexible data infrastructure and disrupting traditional industry practices with its forward-thinking approaches to database architecture.', 'AgilData to Advance Streaming Big Data', '', 'publish', 'open', 'open', '', 'dan-lynn-named-ceo-of-agildata-agile-streaming-big-data', '', '', '2015-09-30 16:40:41', '2015-09-30 22:40:41', '', '0', 'http://www.agildata.com/?p=358', '0', 'post', '', '0');
INSERT INTO `wpag_posts` VALUES('225', '4', '2015-05-27 10:07:13', '2015-05-27 16:07:13', 'a:6:{s:8:\"location\";a:1:{i:0;a:1:{i:0;a:3:{s:5:\"param\";s:9:\"post_type\";s:8:\"operator\";s:2:\"==\";s:5:\"value\";s:6:\"client\";}}}s:8:\"position\";s:15:\"acf_after_title\";s:5:\"style\";s:8:\"seamless\";s:15:\"label_placement\";s:3:\"top\";s:21:\"instruction_placement\";s:5:\"field\";s:14:\"hide_on_screen\";a:13:{i:0;s:11:\"the_content\";i:1;s:7:\"excerpt\";i:2;s:13:\"custom_fields\";i:3;s:10:\"discussion\";i:4;s:8:\"comments\";i:5;s:9:\"revisions\";i:6;s:6:\"author\";i:7;s:6:\"format\";i:8;s:15:\"page_attributes\";i:9;s:14:\"featured_image\";i:10;s:10:\"categories\";i:11;s:4:\"tags\";i:12;s:15:\"send-trackbacks\";}}', 'Clients', 'clients', 'publish', 'closed', 'closed', '', 'group_5565eb0ea2184', '', '', '2015-05-27 10:18:51', '2015-05-27 16:18:51', '', '0', 'http://www.agildata.com/?post_type=acf-field-group&#038;p=225', '0', 'acf-field-group', '', '0');
INSERT INTO `wpag_posts` VALUES('226', '4', '2015-05-27 10:07:13', '2015-05-27 16:07:13', 'a:15:{s:4:\"type\";s:5:\"image\";s:12:\"instructions\";s:0:\"\";s:8:\"required\";i:1;s:17:\"conditional_logic\";i:0;s:7:\"wrapper\";a:3:{s:5:\"width\";s:0:\"\";s:5:\"class\";s:0:\"\";s:2:\"id\";s:0:\"\";}s:13:\"return_format\";s:5:\"array\";s:12:\"preview_size\";s:9:\"thumbnail\";s:7:\"library\";s:3:\"all\";s:9:\"min_width\";s:0:\"\";s:10:\"min_height\";s:0:\"\";s:8:\"min_size\";s:0:\"\";s:9:\"max_width\";s:0:\"\";s:10:\"max_height\";s:0:\"\";s:8:\"max_size\";s:0:\"\";s:10:\"mime_types\";s:0:\"\";}', 'Client Logo', 'client_logo', 'publish', 'open', 'open', '', 'field_5565eb1536547', '', '', '2015-05-27 10:16:17', '2015-05-27 16:16:17', '', '225', 'http://www.agildata.com/?post_type=acf-field&#038;p=226', '1', 'acf-field', '', '0');
INSERT INTO `wpag_posts` VALUES('227', '4', '2015-05-27 10:07:14', '2015-05-27 16:07:14', 'a:7:{s:4:\"type\";s:3:\"url\";s:12:\"instructions\";s:0:\"\";s:8:\"required\";i:0;s:17:\"conditional_logic\";i:0;s:7:\"wrapper\";a:3:{s:5:\"width\";s:0:\"\";s:5:\"class\";s:0:\"\";s:2:\"id\";s:0:\"\";}s:13:\"default_value\";s:0:\"\";s:11:\"placeholder\";s:0:\"\";}', 'Client Website', 'client_website', 'publish', 'open', 'open', '', 'field_5565eb3c36548', '', '', '2015-05-27 10:16:17', '2015-05-27 16:16:17', '', '225', 'http://www.agildata.com/?post_type=acf-field&#038;p=227', '2', 'acf-field', '', '0');
INSERT INTO `wpag_posts` VALUES('228', '4', '2015-05-27 10:08:28', '2015-05-27 16:08:28', '', 'FullContact', '', 'publish', 'closed', 'closed', '', 'fullcontact', '', '', '2015-05-27 10:18:30', '2015-05-27 16:18:30', '', '0', 'http://www.agildata.com/?post_type=client&#038;p=228', '0', 'client', '', '0');
INSERT INTO `wpag_posts` VALUES('229', '4', '2015-05-27 10:10:52', '2015-05-27 16:10:52', '', 'gumi', '', 'publish', 'closed', 'closed', '', 'gumi', '', '', '2015-05-27 10:18:15', '2015-05-27 16:18:15', '', '0', 'http://www.agildata.com/?post_type=client&#038;p=229', '0', 'client', '', '0');
INSERT INTO `wpag_posts` VALUES('230', '4', '2015-05-27 10:11:26', '2015-05-27 16:11:26', '', 'ActiveStandards', '', 'publish', 'closed', 'closed', '', 'activestandards', '', '', '2015-05-27 10:18:03', '2015-05-27 16:18:03', '', '0', 'http://www.agildata.com/?post_type=client&#038;p=230', '0', 'client', '', '0');
INSERT INTO `wpag_posts` VALUES('231', '4', '2015-05-27 10:12:16', '2015-05-27 16:12:16', '', 'Pokemon', '', 'publish', 'closed', 'closed', '', 'pokemon', '', '', '2015-05-27 10:17:52', '2015-05-27 16:17:52', '', '0', 'http://www.agildata.com/?post_type=client&#038;p=231', '0', 'client', '', '0');
INSERT INTO `wpag_posts` VALUES('232', '4', '2015-05-27 10:13:04', '2015-05-27 16:13:04', '', 'Genoo', '', 'publish', 'closed', 'closed', '', 'genoo', '', '', '2015-05-27 10:17:36', '2015-05-27 16:17:36', '', '0', 'http://www.agildata.com/?post_type=client&#038;p=232', '0', 'client', '', '0');
INSERT INTO `wpag_posts` VALUES('233', '4', '2015-05-27 10:13:51', '2015-05-27 16:13:51', '', 'BigDoor', '', 'publish', 'closed', 'closed', '', 'bigdoor', '', '', '2015-05-27 10:39:30', '2015-05-27 16:39:30', '', '0', 'http://www.agildata.com/?post_type=client&#038;p=233', '0', 'client', '', '0');
INSERT INTO `wpag_posts` VALUES('234', '4', '2015-05-27 10:16:17', '2015-05-27 16:16:17', 'a:7:{s:4:\"type\";s:10:\"true_false\";s:12:\"instructions\";s:26:\"Display client on homepage\";s:8:\"required\";i:0;s:17:\"conditional_logic\";i:0;s:7:\"wrapper\";a:3:{s:5:\"width\";s:0:\"\";s:5:\"class\";s:0:\"\";s:2:\"id\";s:0:\"\";}s:7:\"message\";s:0:\"\";s:13:\"default_value\";i:0;}', 'Featured Client', 'featured_client', 'publish', 'open', 'open', '', 'field_5565ed8ce60d8', '', '', '2015-05-27 10:18:51', '2015-05-27 16:18:51', '', '225', 'http://www.agildata.com/?post_type=acf-field&#038;p=234', '0', 'acf-field', '', '0');
INSERT INTO `wpag_posts` VALUES('243', '5', '2015-05-28 23:15:59', '2015-05-29 05:15:59', '<h3>Mission</h3>\r\nWhat we believe a Big Data solution should be like?\r\n<h3>History</h3>\r\nAbout the team / locations, etc.. (rebrand and)\r\n\r\nCodeFutures, a provider of Agile Big Data technologies, has been rebranded as AgilData with a new leader and new mission to simplify stream processing of Big Data with SQL.\r\n\r\nDan Lynn assumed the role of CEO from founder Cory Isaacson, who has joined RMS and will now serve as chairman of AgilData. Lynn brings more than 14 years of advanced technology and business success experience.  Lynn is at his core a product developer with a keen interest in producing solutions that are simple to use and leverage common skills.  Dan believes a good Developer Experience is what’s missing in most Big Data solutions.  His technical product expertise is unique as a CEO to advancing its mission to create better database applications created by developers for developers.\r\n<h3>Who are we?</h3>\r\nAgilData is a Denver based startup with a distributed workforce that extends to both coasts of North America and Europe.\r\n<h3>And we are growing….</h3>\r\nWe are always looking for exceptional people to join us. If you feel that you would be a great fit, but don\'t see a job below that fits you, feel free to drop us an email at jobs@agildata.com and let\'s chat.\r\n\r\n<script src=\"//app.theresumator.com/widgets/basic/create/agildata\" type=\"text/javascript\" charset=\"utf-8\"></script>', 'About', '', 'inherit', 'open', 'open', '', '99-revision-v1', '', '', '2015-05-28 23:15:59', '2015-05-29 05:15:59', '', '99', 'http://www.agildata.com/99-revision-v1/', '0', 'revision', '', '0');
INSERT INTO `wpag_posts` VALUES('244', '5', '2015-05-29 00:29:46', '2015-05-29 06:29:46', '<h3>Why are we here?</h3>\r\nOur mission at AgilData is to make developers around the world happier and more productive by simplifying how they work with data.\r\n<h3>History</h3>\r\nAgilData started life with a different name. In 2007 Cory Isaacson and Andy Grovefounded CodeFutures, bringing their experience building high performance data pipelines for Wall Street and using it to help companies reliably scale out relational databases using a product called dbShards. Customers loved dbShards and it went on to become a commercial success.\r\n\r\nIn 2014, we noticed that databases aren\'t merely the constraining factor from a performance and operations perspective; they often impose a constraint <em>on the development process itself</em>. Agile development practices have difficulty extending into the database and can run into process roadblocks, often pitting DBAs and developers against each other needlessly. We felt we had the experience and passion to solve this.\r\n\r\nWe re-oriented the company around helping companies be agile with their data as well as their software, which led to a new name: AgilData. We\'ve taken our years of experience running distributed data pipelines at scale and our passion for simplifying the developer experience and poured them into a simple-to-use product that lets developers process streaming big data at scale...using simple SQL.\r\n<h3>Who are we?</h3>\r\nOur roots are in Colorado, but our team is global. We build distributed systems, and <em>we are one too</em>! Our team is distributed across North America and Europe. We\'re Lean Startup apostles and startup veterans who believe that the right people and the right team are the most important part of a successful company.\r\n<h3>And we are growing….</h3>\r\nWe are always looking for exceptional people to join us. If you feel that you would be a great fit, but don\'t see a job below that fits you, feel free to drop us an email at jobs@agildata.com and let\'s chat.\r\n\r\n<script src=\"//app.theresumator.com/widgets/basic/create/agildata\" type=\"text/javascript\" charset=\"utf-8\"></script>', 'About', '', 'inherit', 'open', 'open', '', '99-revision-v1', '', '', '2015-05-29 00:29:46', '2015-05-29 06:29:46', '', '99', 'http://www.agildata.com/99-revision-v1/', '0', 'revision', '', '0');
INSERT INTO `wpag_posts` VALUES('247', '5', '2015-05-29 00:33:56', '2015-05-29 06:33:56', '<h3>Why are we here?</h3>\r\nOur mission at AgilData is to make developers around the world happier and more productive by simplifying how they work with data.\r\n<h3>History</h3>\r\nAgilData started life with a different name. In 2007 Cory Isaacson and Andy Grove founded CodeFutures, bringing years of experience building high performance data pipelines for Wall Street and using it to help companies reliably scale out relational databases using a product called dbShards. Customers loved dbShards and it went on to become a commercial success.\r\n\r\nIn 2014, we noticed that databases aren\'t merely the constraining factor from a performance and operations perspective: they often impose a constraint <em>on the development process itself</em>. Agile development practices have difficulty extending into databases and can run into process roadblocks, pitting DBAs and developers against each other needlessly.\r\n\r\nWe have the experience and passion to solve this. So...\r\n\r\nWe re-oriented the company around helping companies be agile with their data as well as their software, which led to a new name: AgilData. We\'ve taken our years of experience running distributed data pipelines at scale and our passion for simplifying the developer experience and poured them into a simple-to-use product that lets developers process streaming big data at scale...using simple SQL.\r\n<h3>Who are we?</h3>\r\nOur roots are in Colorado, but our team is global. We build distributed systems, and <em>we are one too</em>! Our team is distributed across North America and Europe. We\'re Lean Startup apostles and startup veterans who believe that the right people and the right team are the most important part of a successful company.\r\n<h3>And we are growing….</h3>\r\nWe are always looking for exceptional people to join us. If you feel that you would be a great fit, but don\'t see a job below that fits you, feel free to drop us an email at jobs@agildata.com and let\'s chat.\r\n\r\n<script src=\"//app.theresumator.com/widgets/basic/create/agildata\" type=\"text/javascript\" charset=\"utf-8\"></script>', 'About', '', 'inherit', 'open', 'open', '', '99-revision-v1', '', '', '2015-05-29 00:33:56', '2015-05-29 06:33:56', '', '99', 'http://www.agildata.com/99-revision-v1/', '0', 'revision', '', '0');
INSERT INTO `wpag_posts` VALUES('245', '5', '2015-05-29 00:30:42', '2015-05-29 06:30:42', '<h3>Why are we here?</h3>\r\nOur mission at AgilData is to make developers around the world happier and more productive by simplifying how they work with data.\r\n<h3>History</h3>\r\nAgilData started life with a different name. In 2007 Cory Isaacson and Andy Grove founded CodeFutures, bringing years of experience building high performance data pipelines for Wall Street and using it to help companies reliably scale out relational databases using a product called dbShards. Customers loved dbShards and it went on to become a commercial success.\r\n\r\nIn 2014, we noticed that databases aren\'t merely the constraining factor from a performance and operations perspective; they often impose a constraint <em>on the development process itself</em>. Agile development practices have difficulty extending into the database and can run into process roadblocks, often pitting DBAs and developers against each other needlessly. We felt we had the experience and passion to solve this.\r\n\r\nWe re-oriented the company around helping companies be agile with their data as well as their software, which led to a new name: AgilData. We\'ve taken our years of experience running distributed data pipelines at scale and our passion for simplifying the developer experience and poured them into a simple-to-use product that lets developers process streaming big data at scale...using simple SQL.\r\n<h3>Who are we?</h3>\r\nOur roots are in Colorado, but our team is global. We build distributed systems, and <em>we are one too</em>! Our team is distributed across North America and Europe. We\'re Lean Startup apostles and startup veterans who believe that the right people and the right team are the most important part of a successful company.\r\n<h3>And we are growing….</h3>\r\nWe are always looking for exceptional people to join us. If you feel that you would be a great fit, but don\'t see a job below that fits you, feel free to drop us an email at jobs@agildata.com and let\'s chat.\r\n\r\n<script src=\"//app.theresumator.com/widgets/basic/create/agildata\" type=\"text/javascript\" charset=\"utf-8\"></script>', 'About', '', 'inherit', 'open', 'open', '', '99-revision-v1', '', '', '2015-05-29 00:30:42', '2015-05-29 06:30:42', '', '99', 'http://www.agildata.com/99-revision-v1/', '0', 'revision', '', '0');
INSERT INTO `wpag_posts` VALUES('246', '5', '2015-05-29 00:31:23', '2015-05-29 06:31:23', '<h3>Why are we here?</h3>\r\nOur mission at AgilData is to make developers around the world happier and more productive by simplifying how they work with data.\r\n<h3>History</h3>\r\nAgilData started life with a different name. In 2007 Cory Isaacson and Andy Grove founded CodeFutures, bringing years of experience building high performance data pipelines for Wall Street and using it to help companies reliably scale out relational databases using a product called dbShards. Customers loved dbShards and it went on to become a commercial success.\r\n\r\nIn 2014, we noticed that databases aren\'t merely the constraining factor from a performance and operations perspective; they often impose a constraint <em>on the development process itself</em>. Agile development practices have difficulty extending into databases and can run into process roadblocks, often pitting DBAs and developers against each other needlessly. We felt we had the experience and passion to solve this.\r\n\r\nWe re-oriented the company around helping companies be agile with their data as well as their software, which led to a new name: AgilData. We\'ve taken our years of experience running distributed data pipelines at scale and our passion for simplifying the developer experience and poured them into a simple-to-use product that lets developers process streaming big data at scale...using simple SQL.\r\n<h3>Who are we?</h3>\r\nOur roots are in Colorado, but our team is global. We build distributed systems, and <em>we are one too</em>! Our team is distributed across North America and Europe. We\'re Lean Startup apostles and startup veterans who believe that the right people and the right team are the most important part of a successful company.\r\n<h3>And we are growing….</h3>\r\nWe are always looking for exceptional people to join us. If you feel that you would be a great fit, but don\'t see a job below that fits you, feel free to drop us an email at jobs@agildata.com and let\'s chat.\r\n\r\n<script src=\"//app.theresumator.com/widgets/basic/create/agildata\" type=\"text/javascript\" charset=\"utf-8\"></script>', 'About', '', 'inherit', 'open', 'open', '', '99-revision-v1', '', '', '2015-05-29 00:31:23', '2015-05-29 06:31:23', '', '99', 'http://www.agildata.com/99-revision-v1/', '0', 'revision', '', '0');
INSERT INTO `wpag_posts` VALUES('249', '5', '2015-05-29 00:35:03', '2015-05-29 06:35:03', '<h3>Why are we here?</h3>\r\nOur mission at AgilData is to make developers around the world happier and more productive by simplifying how they work with data.\r\n<h3>History</h3>\r\nAgilData started life with a different name. In 2007 Cory Isaacson and Andy Grove founded CodeFutures, bringing years of experience building high performance data pipelines for Wall Street and using it to help companies reliably scale out relational databases using a product called dbShards. Customers loved dbShards and it went on to become a commercial success.\r\n\r\nIn 2014, we noticed that databases aren\'t merely the constraining factor from a performance and operations perspective: they often impose a constraint <em>on the development process itself</em>. Agile development practices have difficulty extending into databases and can run into process roadblocks, pitting DBAs and developers against each other needlessly.\r\n\r\nWe have the experience and passion to solve this. So...\r\n\r\nWe re-oriented the company around helping companies be agile with their data as well as their software, which led to a new name: AgilData. We\'ve taken our years of experience running distributed data pipelines at scale and our passion for simplifying the developer experience and poured them into a simple-to-use product that lets developers process streaming big data at scale...using simple SQL.\r\n<h3>Who are we?</h3>\r\nWe\'re Lean Startup apostles and startup veterans who believe that the right people and the right team are the most important part of a successful company. Our roots are in Colorado, but our team is global. We build distributed systems, and <em>we are one too</em>! Our team is distributed across North America and Europe.\r\n<h3>And we are growing….</h3>\r\nWe are always looking for exceptional people to join us. If you feel that you would be a great fit, but don\'t see a job below that fits you, feel free to drop us an email at jobs@agildata.com and let\'s chat.\r\n\r\n<script src=\"//app.theresumator.com/widgets/basic/create/agildata\" type=\"text/javascript\" charset=\"utf-8\"></script>', 'About', '', 'inherit', 'open', 'open', '', '99-revision-v1', '', '', '2015-05-29 00:35:03', '2015-05-29 06:35:03', '', '99', 'http://www.agildata.com/99-revision-v1/', '0', 'revision', '', '0');
INSERT INTO `wpag_posts` VALUES('248', '5', '2015-05-29 00:34:41', '2015-05-29 06:34:41', '<h3>Why are we here?</h3>\r\nOur mission at AgilData is to make developers around the world happier and more productive by simplifying how they work with data.\r\n<h3>History</h3>\r\nAgilData started life with a different name. In 2007 Cory Isaacson and Andy Grove founded CodeFutures, bringing years of experience building high performance data pipelines for Wall Street and using it to help companies reliably scale out relational databases using a product called dbShards. Customers loved dbShards and it went on to become a commercial success.\r\n\r\nIn 2014, we noticed that databases aren\'t merely the constraining factor from a performance and operations perspective: they often impose a constraint <em>on the development process itself</em>. Agile development practices have difficulty extending into databases and can run into process roadblocks, pitting DBAs and developers against each other needlessly.\r\n\r\nWe have the experience and passion to solve this. So...\r\n\r\nWe re-oriented the company around helping companies be agile with their data as well as their software, which led to a new name: AgilData. We\'ve taken our years of experience running distributed data pipelines at scale and our passion for simplifying the developer experience and poured them into a simple-to-use product that lets developers process streaming big data at scale...using simple SQL.\r\n<h3>Who are we?</h3>\r\nWe\'re Lean Startup apostles and startup veterans who believe that the right people and the right team are the most important part of a successful company.\r\n\r\nOur roots are in Colorado, but our team is global. We build distributed systems, and <em>we are one too</em>! Our team is distributed across North America and Europe.\r\n<h3>And we are growing….</h3>\r\nWe are always looking for exceptional people to join us. If you feel that you would be a great fit, but don\'t see a job below that fits you, feel free to drop us an email at jobs@agildata.com and let\'s chat.\r\n\r\n<script src=\"//app.theresumator.com/widgets/basic/create/agildata\" type=\"text/javascript\" charset=\"utf-8\"></script>', 'About', '', 'inherit', 'open', 'open', '', '99-revision-v1', '', '', '2015-05-29 00:34:41', '2015-05-29 06:34:41', '', '99', 'http://www.agildata.com/99-revision-v1/', '0', 'revision', '', '0');
INSERT INTO `wpag_posts` VALUES('252', '1', '2015-05-29 15:09:33', '2015-05-29 21:09:33', 'a:12:{s:4:\"type\";s:4:\"text\";s:12:\"instructions\";s:0:\"\";s:8:\"required\";i:0;s:17:\"conditional_logic\";i:0;s:7:\"wrapper\";a:3:{s:5:\"width\";s:0:\"\";s:5:\"class\";s:0:\"\";s:2:\"id\";s:0:\"\";}s:13:\"default_value\";s:0:\"\";s:11:\"placeholder\";s:0:\"\";s:7:\"prepend\";s:0:\"\";s:6:\"append\";s:0:\"\";s:9:\"maxlength\";s:0:\"\";s:8:\"readonly\";i:0;s:8:\"disabled\";i:0;}', 'Beta Button Text', 'beta_button_text', 'publish', 'open', 'open', '', 'field_5568d562085ed', '', '', '2015-05-29 15:09:33', '2015-05-29 21:09:33', '', '251', 'http://www.agildata.com/?post_type=acf-field&p=252', '0', 'acf-field', '', '0');
INSERT INTO `wpag_posts` VALUES('253', '1', '2015-05-29 15:09:33', '2015-05-29 21:09:33', 'a:12:{s:4:\"type\";s:4:\"text\";s:12:\"instructions\";s:0:\"\";s:8:\"required\";i:0;s:17:\"conditional_logic\";i:0;s:7:\"wrapper\";a:3:{s:5:\"width\";s:0:\"\";s:5:\"class\";s:0:\"\";s:2:\"id\";s:0:\"\";}s:13:\"default_value\";s:0:\"\";s:11:\"placeholder\";s:0:\"\";s:7:\"prepend\";s:0:\"\";s:6:\"append\";s:0:\"\";s:9:\"maxlength\";s:0:\"\";s:8:\"readonly\";i:0;s:8:\"disabled\";i:0;}', 'Beta Button URL', 'beta_button_url', 'publish', 'open', 'open', '', 'field_5568d56d085ee', '', '', '2015-05-29 15:09:33', '2015-05-29 21:09:33', '', '251', 'http://www.agildata.com/?post_type=acf-field&p=253', '1', 'acf-field', '', '0');
INSERT INTO `wpag_posts` VALUES('254', '1', '2015-05-29 15:09:33', '2015-05-29 21:09:33', 'a:12:{s:4:\"type\";s:4:\"text\";s:12:\"instructions\";s:0:\"\";s:8:\"required\";i:0;s:17:\"conditional_logic\";i:0;s:7:\"wrapper\";a:3:{s:5:\"width\";s:0:\"\";s:5:\"class\";s:0:\"\";s:2:\"id\";s:0:\"\";}s:13:\"default_value\";s:0:\"\";s:11:\"placeholder\";s:0:\"\";s:7:\"prepend\";s:0:\"\";s:6:\"append\";s:0:\"\";s:9:\"maxlength\";s:0:\"\";s:8:\"readonly\";i:0;s:8:\"disabled\";i:0;}', 'Whitepaper Button Text', 'whitepaper_button_text', 'publish', 'open', 'open', '', 'field_5568d579085ef', '', '', '2015-05-29 15:09:33', '2015-05-29 21:09:33', '', '251', 'http://www.agildata.com/?post_type=acf-field&p=254', '2', 'acf-field', '', '0');
INSERT INTO `wpag_posts` VALUES('255', '1', '2015-05-29 15:09:33', '2015-05-29 21:09:33', 'a:12:{s:4:\"type\";s:4:\"text\";s:12:\"instructions\";s:0:\"\";s:8:\"required\";i:0;s:17:\"conditional_logic\";i:0;s:7:\"wrapper\";a:3:{s:5:\"width\";s:0:\"\";s:5:\"class\";s:0:\"\";s:2:\"id\";s:0:\"\";}s:13:\"default_value\";s:0:\"\";s:11:\"placeholder\";s:0:\"\";s:7:\"prepend\";s:0:\"\";s:6:\"append\";s:0:\"\";s:9:\"maxlength\";s:0:\"\";s:8:\"readonly\";i:0;s:8:\"disabled\";i:0;}', 'Whitepaper Button URL', 'whitepaper_button_url', 'publish', 'open', 'open', '', 'field_5568d583085f0', '', '', '2015-05-29 15:09:33', '2015-05-29 21:09:33', '', '251', 'http://www.agildata.com/?post_type=acf-field&p=255', '3', 'acf-field', '', '0');
INSERT INTO `wpag_posts` VALUES('256', '1', '2015-05-29 15:16:19', '2015-05-29 21:16:19', 'a:6:{s:8:\"location\";a:1:{i:0;a:1:{i:0;a:3:{s:5:\"param\";s:13:\"page_template\";s:8:\"operator\";s:2:\"==\";s:5:\"value\";s:21:\"template-homepage.php\";}}}s:8:\"position\";s:6:\"normal\";s:5:\"style\";s:7:\"default\";s:15:\"label_placement\";s:3:\"top\";s:21:\"instruction_placement\";s:5:\"label\";s:14:\"hide_on_screen\";s:0:\"\";}', 'Homepage Fields', 'homepage-fields', 'publish', 'closed', 'closed', '', 'group_5568d6c108306', '', '', '2015-06-03 13:58:00', '2015-06-03 19:58:00', '', '0', 'http://www.agildata.com/?post_type=acf-field-group&#038;p=256', '0', 'acf-field-group', '', '0');
INSERT INTO `wpag_posts` VALUES('257', '1', '2015-05-29 15:16:19', '2015-05-29 21:16:19', 'a:12:{s:4:\"type\";s:4:\"text\";s:12:\"instructions\";s:0:\"\";s:8:\"required\";i:0;s:17:\"conditional_logic\";i:0;s:7:\"wrapper\";a:3:{s:5:\"width\";s:0:\"\";s:5:\"class\";s:0:\"\";s:2:\"id\";s:0:\"\";}s:13:\"default_value\";s:0:\"\";s:11:\"placeholder\";s:0:\"\";s:7:\"prepend\";s:0:\"\";s:6:\"append\";s:0:\"\";s:9:\"maxlength\";s:0:\"\";s:8:\"readonly\";i:0;s:8:\"disabled\";i:0;}', 'Banner Title', 'banner_title', 'publish', 'open', 'open', '', 'field_5568d6cf238ec', '', '', '2015-05-29 15:18:50', '2015-05-29 21:18:50', '', '256', 'http://www.agildata.com/?post_type=acf-field&#038;p=257', '0', 'acf-field', '', '0');
INSERT INTO `wpag_posts` VALUES('258', '1', '2015-05-29 15:16:19', '2015-05-29 21:16:19', 'a:9:{s:4:\"type\";s:7:\"wysiwyg\";s:12:\"instructions\";s:0:\"\";s:8:\"required\";i:0;s:17:\"conditional_logic\";i:0;s:7:\"wrapper\";a:3:{s:5:\"width\";s:0:\"\";s:5:\"class\";s:0:\"\";s:2:\"id\";s:0:\"\";}s:13:\"default_value\";s:0:\"\";s:4:\"tabs\";s:3:\"all\";s:7:\"toolbar\";s:4:\"full\";s:12:\"media_upload\";i:1;}', 'Banner Text', 'banner_text', 'publish', 'open', 'open', '', 'field_5568d6da238ed', '', '', '2015-05-29 15:18:50', '2015-05-29 21:18:50', '', '256', 'http://www.agildata.com/?post_type=acf-field&#038;p=258', '1', 'acf-field', '', '0');
INSERT INTO `wpag_posts` VALUES('260', '1', '2015-05-29 15:17:51', '2015-05-29 21:17:51', '', 'Home', '', 'inherit', 'open', 'open', '', '38-revision-v1', '', '', '2015-05-29 15:17:51', '2015-05-29 21:17:51', '', '38', 'http://www.agildata.com/38-revision-v1/', '0', 'revision', '', '0');
INSERT INTO `wpag_posts` VALUES('259', '1', '2015-05-29 15:17:18', '2015-05-29 21:17:18', '', 'Home', '', 'inherit', 'open', 'open', '', '38-revision-v1', '', '', '2015-05-29 15:17:18', '2015-05-29 21:17:18', '', '38', 'http://www.agildata.com/38-revision-v1/', '0', 'revision', '', '0');
INSERT INTO `wpag_posts` VALUES('261', '1', '2015-05-29 15:18:27', '2015-05-29 21:18:27', '', 'Home', '', 'inherit', 'open', 'open', '', '38-revision-v1', '', '', '2015-05-29 15:18:27', '2015-05-29 21:18:27', '', '38', 'http://www.agildata.com/38-revision-v1/', '0', 'revision', '', '0');
INSERT INTO `wpag_posts` VALUES('262', '1', '2015-05-29 15:19:01', '2015-05-29 21:19:01', '', 'Home', '', 'inherit', 'open', 'open', '', '38-revision-v1', '', '', '2015-05-29 15:19:01', '2015-05-29 21:19:01', '', '38', 'http://www.agildata.com/38-revision-v1/', '0', 'revision', '', '0');
INSERT INTO `wpag_posts` VALUES('263', '1', '2015-05-29 15:21:35', '2015-05-29 21:21:35', 'a:12:{s:4:\"type\";s:4:\"text\";s:12:\"instructions\";s:0:\"\";s:8:\"required\";i:0;s:17:\"conditional_logic\";i:0;s:7:\"wrapper\";a:3:{s:5:\"width\";s:0:\"\";s:5:\"class\";s:0:\"\";s:2:\"id\";s:0:\"\";}s:13:\"default_value\";s:0:\"\";s:11:\"placeholder\";s:0:\"\";s:7:\"prepend\";s:0:\"\";s:6:\"append\";s:0:\"\";s:9:\"maxlength\";s:0:\"\";s:8:\"readonly\";i:0;s:8:\"disabled\";i:0;}', 'Section 1 Title', 'section_1_title', 'publish', 'open', 'open', '', 'field_5568d7f6840ac', '', '', '2015-06-02 16:51:37', '2015-06-02 22:51:37', '', '256', 'http://www.agildata.com/?post_type=acf-field&#038;p=263', '2', 'acf-field', '', '0');
INSERT INTO `wpag_posts` VALUES('264', '1', '2015-05-29 15:21:35', '2015-05-29 21:21:35', 'a:9:{s:4:\"type\";s:7:\"wysiwyg\";s:12:\"instructions\";s:0:\"\";s:8:\"required\";i:0;s:17:\"conditional_logic\";i:0;s:7:\"wrapper\";a:3:{s:5:\"width\";s:0:\"\";s:5:\"class\";s:0:\"\";s:2:\"id\";s:0:\"\";}s:13:\"default_value\";s:0:\"\";s:4:\"tabs\";s:3:\"all\";s:7:\"toolbar\";s:4:\"full\";s:12:\"media_upload\";i:1;}', 'Section 1 content', 'section_1_content', 'publish', 'open', 'open', '', 'field_5568d850840ad', '', '', '2015-06-02 16:51:37', '2015-06-02 22:51:37', '', '256', 'http://www.agildata.com/?post_type=acf-field&#038;p=264', '3', 'acf-field', '', '0');
INSERT INTO `wpag_posts` VALUES('265', '1', '2015-05-29 15:24:04', '2015-05-29 21:24:04', '', 'Home', '', 'inherit', 'open', 'open', '', '38-revision-v1', '', '', '2015-05-29 15:24:04', '2015-05-29 21:24:04', '', '38', 'http://www.agildata.com/38-revision-v1/', '0', 'revision', '', '0');
INSERT INTO `wpag_posts` VALUES('341', '5', '2015-06-03 11:30:39', '2015-06-03 17:30:39', '', 'SCALABLE AgildataWPcolor', '', 'inherit', 'open', 'open', '', 'scalable-agildatawpcolor', '', '', '2015-06-03 11:30:39', '2015-06-03 17:30:39', '', '0', 'http://www.agildata.com/wp-content/uploads/2015/06/SCALABLE-AgildataWPcolor.svg', '0', 'attachment', 'image/svg+xml', '0');
INSERT INTO `wpag_posts` VALUES('342', '5', '2015-06-03 11:30:41', '2015-06-03 17:30:41', '', 'SIMPLE Agildata WPcolor', '', 'inherit', 'open', 'open', '', 'simple-agildata-wpcolor', '', '', '2015-06-03 11:30:41', '2015-06-03 17:30:41', '', '0', 'http://www.agildata.com/wp-content/uploads/2015/06/SIMPLE-Agildata-WPcolor.svg', '0', 'attachment', 'image/svg+xml', '0');
INSERT INTO `wpag_posts` VALUES('333', '5', '2015-06-02 19:09:49', '2015-06-03 01:09:49', '', 'STREAMING Agildata', '', 'inherit', 'open', 'open', '', 'streaming-agildata', '', '', '2015-06-02 19:09:49', '2015-06-03 01:09:49', '', '0', 'http://www.agildata.com/wp-content/uploads/2015/06/STREAMING-Agildata.svg', '0', 'attachment', 'image/svg+xml', '0');
INSERT INTO `wpag_posts` VALUES('268', '1', '2015-05-29 15:32:42', '2015-05-29 21:32:42', 'a:12:{s:4:\"type\";s:4:\"text\";s:12:\"instructions\";s:0:\"\";s:8:\"required\";i:0;s:17:\"conditional_logic\";i:0;s:7:\"wrapper\";a:3:{s:5:\"width\";s:0:\"\";s:5:\"class\";s:0:\"\";s:2:\"id\";s:0:\"\";}s:13:\"default_value\";s:0:\"\";s:11:\"placeholder\";s:0:\"\";s:7:\"prepend\";s:0:\"\";s:6:\"append\";s:0:\"\";s:9:\"maxlength\";s:0:\"\";s:8:\"readonly\";i:0;s:8:\"disabled\";i:0;}', 'Section 3 Title', 'section_3_title', 'publish', 'open', 'open', '', 'field_5568daef37908', '', '', '2015-06-02 16:51:37', '2015-06-02 22:51:37', '', '256', 'http://www.agildata.com/?post_type=acf-field&#038;p=268', '8', 'acf-field', '', '0');
INSERT INTO `wpag_posts` VALUES('269', '1', '2015-05-29 15:32:42', '2015-05-29 21:32:42', 'a:9:{s:4:\"type\";s:7:\"wysiwyg\";s:12:\"instructions\";s:0:\"\";s:8:\"required\";i:0;s:17:\"conditional_logic\";i:0;s:7:\"wrapper\";a:3:{s:5:\"width\";s:0:\"\";s:5:\"class\";s:0:\"\";s:2:\"id\";s:0:\"\";}s:13:\"default_value\";s:0:\"\";s:4:\"tabs\";s:3:\"all\";s:7:\"toolbar\";s:4:\"full\";s:12:\"media_upload\";i:1;}', 'Section 3 Content', 'section_3_content', 'publish', 'open', 'open', '', 'field_5568daf537909', '', '', '2015-06-02 16:51:37', '2015-06-02 22:51:37', '', '256', 'http://www.agildata.com/?post_type=acf-field&#038;p=269', '9', 'acf-field', '', '0');
INSERT INTO `wpag_posts` VALUES('270', '1', '2015-05-29 15:33:07', '2015-05-29 21:33:07', 'a:15:{s:4:\"type\";s:5:\"image\";s:12:\"instructions\";s:0:\"\";s:8:\"required\";i:0;s:17:\"conditional_logic\";i:0;s:7:\"wrapper\";a:3:{s:5:\"width\";s:0:\"\";s:5:\"class\";s:0:\"\";s:2:\"id\";s:0:\"\";}s:13:\"return_format\";s:3:\"url\";s:12:\"preview_size\";s:9:\"thumbnail\";s:7:\"library\";s:3:\"all\";s:9:\"min_width\";s:0:\"\";s:10:\"min_height\";s:0:\"\";s:8:\"min_size\";s:0:\"\";s:9:\"max_width\";s:0:\"\";s:10:\"max_height\";s:0:\"\";s:8:\"max_size\";s:0:\"\";s:10:\"mime_types\";s:0:\"\";}', 'Section 3 Background', 'section_3_background', 'publish', 'open', 'open', '', 'field_5568db08388b7', '', '', '2015-06-02 16:51:37', '2015-06-02 22:51:37', '', '256', 'http://www.agildata.com/?post_type=acf-field&#038;p=270', '10', 'acf-field', '', '0');
INSERT INTO `wpag_posts` VALUES('271', '1', '2015-05-29 15:35:14', '2015-05-29 21:35:14', '', 'Home', '', 'inherit', 'open', 'open', '', '38-revision-v1', '', '', '2015-05-29 15:35:14', '2015-05-29 21:35:14', '', '38', 'http://www.agildata.com/38-revision-v1/', '0', 'revision', '', '0');
INSERT INTO `wpag_posts` VALUES('272', '1', '2015-05-29 15:36:43', '2015-05-29 21:36:43', '', 'Home', '', 'inherit', 'open', 'open', '', '38-revision-v1', '', '', '2015-05-29 15:36:43', '2015-05-29 21:36:43', '', '38', 'http://www.agildata.com/38-revision-v1/', '0', 'revision', '', '0');
INSERT INTO `wpag_posts` VALUES('273', '1', '2015-05-29 15:39:18', '2015-05-29 21:39:18', 'a:7:{s:4:\"type\";s:10:\"true_false\";s:12:\"instructions\";s:49:\"Check this to invert text color for more contrast\";s:8:\"required\";i:0;s:17:\"conditional_logic\";i:0;s:7:\"wrapper\";a:3:{s:5:\"width\";s:0:\"\";s:5:\"class\";s:0:\"\";s:2:\"id\";s:0:\"\";}s:7:\"message\";s:0:\"\";s:13:\"default_value\";i:0;}', 'White Text?', 'section_3_white', 'publish', 'open', 'open', '', 'field_5568dc474422a', '', '', '2015-06-02 16:51:37', '2015-06-02 22:51:37', '', '256', 'http://www.agildata.com/?post_type=acf-field&#038;p=273', '11', 'acf-field', '', '0');
INSERT INTO `wpag_posts` VALUES('274', '1', '2015-05-29 15:41:22', '2015-05-29 21:41:22', '', 'Home', '', 'inherit', 'open', 'open', '', '38-revision-v1', '', '', '2015-05-29 15:41:22', '2015-05-29 21:41:22', '', '38', 'http://www.agildata.com/38-revision-v1/', '0', 'revision', '', '0');
INSERT INTO `wpag_posts` VALUES('275', '1', '2015-05-29 15:43:36', '2015-05-29 21:43:36', '', 'home-bg1', '', 'inherit', 'open', 'open', '', 'home-bg1', '', '', '2015-05-29 15:43:36', '2015-05-29 21:43:36', '', '38', 'http://www.agildata.com/wp-content/uploads/2014/07/home-bg1.jpg', '0', 'attachment', 'image/jpeg', '0');
INSERT INTO `wpag_posts` VALUES('276', '1', '2015-05-29 15:46:38', '2015-05-29 21:46:38', '', 'Home', '', 'inherit', 'open', 'open', '', '38-revision-v1', '', '', '2015-05-29 15:46:38', '2015-05-29 21:46:38', '', '38', 'http://www.agildata.com/38-revision-v1/', '0', 'revision', '', '0');
INSERT INTO `wpag_posts` VALUES('331', '5', '2015-06-02 19:09:33', '2015-06-03 01:09:33', '', 'SCALABLE Agildata', '', 'inherit', 'open', 'open', '', 'scalable-agildata', '', '', '2015-06-02 19:09:33', '2015-06-03 01:09:33', '', '0', 'http://www.agildata.com/wp-content/uploads/2015/06/SCALABLE-Agildata.svg', '0', 'attachment', 'image/svg+xml', '0');
INSERT INTO `wpag_posts` VALUES('332', '5', '2015-06-02 19:09:39', '2015-06-03 01:09:39', '', 'SIMPLE Agildata', '', 'inherit', 'open', 'open', '', 'simple-agildata', '', '', '2015-06-02 19:09:39', '2015-06-03 01:09:39', '', '0', 'http://www.agildata.com/wp-content/uploads/2015/06/SIMPLE-Agildata.svg', '0', 'attachment', 'image/svg+xml', '0');
INSERT INTO `wpag_posts` VALUES('278', '1', '2015-05-29 15:49:02', '2015-05-29 21:49:02', 'a:12:{s:4:\"type\";s:4:\"text\";s:12:\"instructions\";s:0:\"\";s:8:\"required\";i:0;s:17:\"conditional_logic\";i:0;s:7:\"wrapper\";a:3:{s:5:\"width\";s:0:\"\";s:5:\"class\";s:0:\"\";s:2:\"id\";s:0:\"\";}s:13:\"default_value\";s:0:\"\";s:11:\"placeholder\";s:0:\"\";s:7:\"prepend\";s:0:\"\";s:6:\"append\";s:0:\"\";s:9:\"maxlength\";s:0:\"\";s:8:\"readonly\";i:0;s:8:\"disabled\";i:0;}', 'Section 2 Title', 'section_2_title', 'publish', 'open', 'open', '', 'field_5568de84a684e', '', '', '2015-06-02 16:51:37', '2015-06-02 22:51:37', '', '256', 'http://www.agildata.com/?post_type=acf-field&#038;p=278', '4', 'acf-field', '', '0');
INSERT INTO `wpag_posts` VALUES('279', '1', '2015-05-29 15:49:02', '2015-05-29 21:49:02', 'a:9:{s:4:\"type\";s:7:\"wysiwyg\";s:12:\"instructions\";s:0:\"\";s:8:\"required\";i:0;s:17:\"conditional_logic\";i:0;s:7:\"wrapper\";a:3:{s:5:\"width\";s:0:\"\";s:5:\"class\";s:0:\"\";s:2:\"id\";s:0:\"\";}s:13:\"default_value\";s:0:\"\";s:4:\"tabs\";s:3:\"all\";s:7:\"toolbar\";s:4:\"full\";s:12:\"media_upload\";i:1;}', 'Section 2 Content', 'section_2_content', 'publish', 'open', 'open', '', 'field_5568de96a684f', '', '', '2015-06-02 16:51:37', '2015-06-02 22:51:37', '', '256', 'http://www.agildata.com/?post_type=acf-field&#038;p=279', '5', 'acf-field', '', '0');
INSERT INTO `wpag_posts` VALUES('280', '1', '2015-05-29 15:49:03', '2015-05-29 21:49:03', 'a:15:{s:4:\"type\";s:5:\"image\";s:12:\"instructions\";s:0:\"\";s:8:\"required\";i:0;s:17:\"conditional_logic\";i:0;s:7:\"wrapper\";a:3:{s:5:\"width\";s:0:\"\";s:5:\"class\";s:0:\"\";s:2:\"id\";s:0:\"\";}s:13:\"return_format\";s:3:\"url\";s:12:\"preview_size\";s:9:\"thumbnail\";s:7:\"library\";s:3:\"all\";s:9:\"min_width\";s:0:\"\";s:10:\"min_height\";s:0:\"\";s:8:\"min_size\";s:0:\"\";s:9:\"max_width\";s:0:\"\";s:10:\"max_height\";s:0:\"\";s:8:\"max_size\";s:0:\"\";s:10:\"mime_types\";s:0:\"\";}', 'Section 2 Background', 'section_2_background', 'publish', 'open', 'open', '', 'field_5568dea5a6850', '', '', '2015-06-02 16:51:37', '2015-06-02 22:51:37', '', '256', 'http://www.agildata.com/?post_type=acf-field&#038;p=280', '6', 'acf-field', '', '0');
INSERT INTO `wpag_posts` VALUES('281', '1', '2015-05-29 15:49:03', '2015-05-29 21:49:03', 'a:7:{s:4:\"type\";s:10:\"true_false\";s:12:\"instructions\";s:49:\"Check this to invert text color for more contrast\";s:8:\"required\";i:0;s:17:\"conditional_logic\";i:0;s:7:\"wrapper\";a:3:{s:5:\"width\";s:0:\"\";s:5:\"class\";s:0:\"\";s:2:\"id\";s:0:\"\";}s:7:\"message\";s:0:\"\";s:13:\"default_value\";i:0;}', 'White Text?', 'section_2_white', 'publish', 'open', 'open', '', 'field_5568debda6851', '', '', '2015-06-02 16:51:37', '2015-06-02 22:51:37', '', '256', 'http://www.agildata.com/?post_type=acf-field&#038;p=281', '7', 'acf-field', '', '0');
INSERT INTO `wpag_posts` VALUES('282', '1', '2015-05-29 15:51:17', '2015-05-29 21:51:17', '', 'Home', '', 'inherit', 'open', 'open', '', '38-revision-v1', '', '', '2015-05-29 15:51:17', '2015-05-29 21:51:17', '', '38', 'http://www.agildata.com/38-revision-v1/', '0', 'revision', '', '0');
INSERT INTO `wpag_posts` VALUES('283', '1', '2015-05-29 15:51:35', '2015-05-29 21:51:35', '', 'home-bg2', '', 'inherit', 'open', 'open', '', 'home-bg2', '', '', '2015-05-29 15:51:35', '2015-05-29 21:51:35', '', '38', 'http://www.agildata.com/wp-content/uploads/2014/07/home-bg2.jpg', '0', 'attachment', 'image/jpeg', '0');
INSERT INTO `wpag_posts` VALUES('284', '1', '2015-05-29 15:51:42', '2015-05-29 21:51:42', '', 'Home', '', 'inherit', 'open', 'open', '', '38-revision-v1', '', '', '2015-05-29 15:51:42', '2015-05-29 21:51:42', '', '38', 'http://www.agildata.com/38-revision-v1/', '0', 'revision', '', '0');
INSERT INTO `wpag_posts` VALUES('329', '5', '2015-06-02 19:08:12', '2015-06-03 01:08:12', '', 'AgilData-SimpleTransBckgrnd1', '', 'inherit', 'open', 'open', '', 'agildata-simpletransbckgrnd1-4', '', '', '2015-06-02 19:08:12', '2015-06-03 01:08:12', '', '0', 'http://www.agildata.com/wp-content/uploads/2015/06/AgilData-SimpleTransBckgrnd13.jpg', '0', 'attachment', 'image/jpeg', '0');
INSERT INTO `wpag_posts` VALUES('330', '5', '2015-06-02 19:09:25', '2015-06-03 01:09:25', '', 'SQL Agildata', '', 'inherit', 'open', 'open', '', 'sql-agildata', '', '', '2015-06-02 19:09:25', '2015-06-03 01:09:25', '', '0', 'http://www.agildata.com/wp-content/uploads/2015/06/SQL-Agildata.svg', '0', 'attachment', 'image/svg+xml', '0');
INSERT INTO `wpag_posts` VALUES('286', '1', '2015-05-29 15:53:55', '2015-05-29 21:53:55', 'a:12:{s:4:\"type\";s:4:\"text\";s:12:\"instructions\";s:0:\"\";s:8:\"required\";i:0;s:17:\"conditional_logic\";i:0;s:7:\"wrapper\";a:3:{s:5:\"width\";s:0:\"\";s:5:\"class\";s:0:\"\";s:2:\"id\";s:0:\"\";}s:13:\"default_value\";s:0:\"\";s:11:\"placeholder\";s:0:\"\";s:7:\"prepend\";s:0:\"\";s:6:\"append\";s:0:\"\";s:9:\"maxlength\";s:0:\"\";s:8:\"readonly\";i:0;s:8:\"disabled\";i:0;}', 'Section 4 Title', 'section_4_title', 'publish', 'open', 'open', '', 'field_5568df9ccd1e0', '', '', '2015-06-02 16:51:37', '2015-06-02 22:51:37', '', '256', 'http://www.agildata.com/?post_type=acf-field&#038;p=286', '12', 'acf-field', '', '0');
INSERT INTO `wpag_posts` VALUES('287', '1', '2015-05-29 15:53:55', '2015-05-29 21:53:55', 'a:9:{s:4:\"type\";s:7:\"wysiwyg\";s:12:\"instructions\";s:0:\"\";s:8:\"required\";i:0;s:17:\"conditional_logic\";i:0;s:7:\"wrapper\";a:3:{s:5:\"width\";s:0:\"\";s:5:\"class\";s:0:\"\";s:2:\"id\";s:0:\"\";}s:13:\"default_value\";s:0:\"\";s:4:\"tabs\";s:3:\"all\";s:7:\"toolbar\";s:4:\"full\";s:12:\"media_upload\";i:1;}', 'Section 4 Content', 'section_4_content', 'publish', 'open', 'open', '', 'field_5568dfb4cd1e1', '', '', '2015-06-02 16:51:37', '2015-06-02 22:51:37', '', '256', 'http://www.agildata.com/?post_type=acf-field&#038;p=287', '13', 'acf-field', '', '0');
INSERT INTO `wpag_posts` VALUES('288', '1', '2015-05-29 15:53:55', '2015-05-29 21:53:55', 'a:15:{s:4:\"type\";s:5:\"image\";s:12:\"instructions\";s:0:\"\";s:8:\"required\";i:0;s:17:\"conditional_logic\";i:0;s:7:\"wrapper\";a:3:{s:5:\"width\";s:0:\"\";s:5:\"class\";s:0:\"\";s:2:\"id\";s:0:\"\";}s:13:\"return_format\";s:3:\"url\";s:12:\"preview_size\";s:9:\"thumbnail\";s:7:\"library\";s:3:\"all\";s:9:\"min_width\";s:0:\"\";s:10:\"min_height\";s:0:\"\";s:8:\"min_size\";s:0:\"\";s:9:\"max_width\";s:0:\"\";s:10:\"max_height\";s:0:\"\";s:8:\"max_size\";s:0:\"\";s:10:\"mime_types\";s:0:\"\";}', 'Section 4 Background', 'section_4_background', 'publish', 'open', 'open', '', 'field_5568dfd2cd1e2', '', '', '2015-06-02 16:51:37', '2015-06-02 22:51:37', '', '256', 'http://www.agildata.com/?post_type=acf-field&#038;p=288', '14', 'acf-field', '', '0');
INSERT INTO `wpag_posts` VALUES('289', '1', '2015-05-29 15:53:55', '2015-05-29 21:53:55', 'a:7:{s:4:\"type\";s:10:\"true_false\";s:12:\"instructions\";s:49:\"Check this to invert text color for more contrast\";s:8:\"required\";i:0;s:17:\"conditional_logic\";i:0;s:7:\"wrapper\";a:3:{s:5:\"width\";s:0:\"\";s:5:\"class\";s:0:\"\";s:2:\"id\";s:0:\"\";}s:7:\"message\";s:0:\"\";s:13:\"default_value\";i:0;}', 'White Text?', 'section_4_white', 'publish', 'open', 'open', '', 'field_5568dfe3cd1e3', '', '', '2015-06-02 16:51:37', '2015-06-02 22:51:37', '', '256', 'http://www.agildata.com/?post_type=acf-field&#038;p=289', '15', 'acf-field', '', '0');
INSERT INTO `wpag_posts` VALUES('290', '1', '2015-05-29 15:55:46', '2015-05-29 21:55:46', '', 'home-bg3', '', 'inherit', 'open', 'open', '', 'home-bg3', '', '', '2015-05-29 15:55:46', '2015-05-29 21:55:46', '', '38', 'http://www.agildata.com/wp-content/uploads/2014/07/home-bg3.jpg', '0', 'attachment', 'image/jpeg', '0');
INSERT INTO `wpag_posts` VALUES('291', '1', '2015-05-29 15:55:52', '2015-05-29 21:55:52', '', 'Home', '', 'inherit', 'open', 'open', '', '38-revision-v1', '', '', '2015-05-29 15:55:52', '2015-05-29 21:55:52', '', '38', 'http://www.agildata.com/38-revision-v1/', '0', 'revision', '', '0');
INSERT INTO `wpag_posts` VALUES('340', '5', '2015-06-03 11:29:21', '2015-06-03 17:29:21', '', 'AgilData-StreamingBckgrnd1', '', 'inherit', 'open', 'open', '', 'agildata-streamingbckgrnd1', '', '', '2015-06-03 11:29:21', '2015-06-03 17:29:21', '', '0', 'http://www.agildata.com/wp-content/uploads/2015/06/AgilData-StreamingBckgrnd1.jpg', '0', 'attachment', 'image/jpeg', '0');
INSERT INTO `wpag_posts` VALUES('339', '5', '2015-06-02 20:22:39', '2015-06-03 02:22:39', '', 'Home', '', 'inherit', 'open', 'open', '', '38-revision-v1', '', '', '2015-06-02 20:22:39', '2015-06-03 02:22:39', '', '38', 'http://www.agildata.com/38-revision-v1/', '0', 'revision', '', '0');
INSERT INTO `wpag_posts` VALUES('293', '1', '2015-05-29 15:57:08', '2015-05-29 21:57:08', 'a:12:{s:4:\"type\";s:4:\"text\";s:12:\"instructions\";s:0:\"\";s:8:\"required\";i:0;s:17:\"conditional_logic\";i:0;s:7:\"wrapper\";a:3:{s:5:\"width\";s:0:\"\";s:5:\"class\";s:0:\"\";s:2:\"id\";s:0:\"\";}s:13:\"default_value\";s:0:\"\";s:11:\"placeholder\";s:0:\"\";s:7:\"prepend\";s:0:\"\";s:6:\"append\";s:0:\"\";s:9:\"maxlength\";s:0:\"\";s:8:\"readonly\";i:0;s:8:\"disabled\";i:0;}', 'Section Title', 'section_title', 'publish', 'open', 'open', '', 'field_5568e0982eaf1', '', '', '2015-06-02 16:51:37', '2015-06-02 22:51:37', '', '256', 'http://www.agildata.com/?post_type=acf-field&#038;p=293', '16', 'acf-field', '', '0');
INSERT INTO `wpag_posts` VALUES('294', '1', '2015-05-29 15:57:24', '2015-05-29 21:57:24', '', 'Home', '', 'inherit', 'open', 'open', '', '38-revision-v1', '', '', '2015-05-29 15:57:24', '2015-05-29 21:57:24', '', '38', 'http://www.agildata.com/38-revision-v1/', '0', 'revision', '', '0');
INSERT INTO `wpag_posts` VALUES('295', '1', '2015-05-29 16:01:52', '2015-05-29 22:01:52', 'a:9:{s:4:\"type\";s:8:\"repeater\";s:12:\"instructions\";s:0:\"\";s:8:\"required\";i:0;s:17:\"conditional_logic\";i:0;s:7:\"wrapper\";a:3:{s:5:\"width\";s:0:\"\";s:5:\"class\";s:0:\"\";s:2:\"id\";s:0:\"\";}s:3:\"min\";s:0:\"\";s:3:\"max\";s:0:\"\";s:6:\"layout\";s:5:\"table\";s:12:\"button_label\";s:11:\"Add Feature\";}', 'Features', 'features', 'publish', 'open', 'open', '', 'field_5568e183c2b0f', '', '', '2015-06-02 16:51:37', '2015-06-02 22:51:37', '', '256', 'http://www.agildata.com/?post_type=acf-field&#038;p=295', '17', 'acf-field', '', '0');
INSERT INTO `wpag_posts` VALUES('296', '1', '2015-05-29 16:01:52', '2015-05-29 22:01:52', 'a:15:{s:4:\"type\";s:5:\"image\";s:12:\"instructions\";s:0:\"\";s:8:\"required\";i:0;s:17:\"conditional_logic\";i:0;s:7:\"wrapper\";a:3:{s:5:\"width\";s:0:\"\";s:5:\"class\";s:0:\"\";s:2:\"id\";s:0:\"\";}s:13:\"return_format\";s:3:\"url\";s:12:\"preview_size\";s:9:\"thumbnail\";s:7:\"library\";s:3:\"all\";s:9:\"min_width\";s:0:\"\";s:10:\"min_height\";s:0:\"\";s:8:\"min_size\";s:0:\"\";s:9:\"max_width\";i:200;s:10:\"max_height\";i:200;s:8:\"max_size\";s:0:\"\";s:10:\"mime_types\";s:0:\"\";}', 'Icon', 'icon', 'publish', 'open', 'open', '', 'field_5568e198c2b10', '', '', '2015-05-29 16:01:52', '2015-05-29 22:01:52', '', '295', 'http://www.agildata.com/?post_type=acf-field&p=296', '0', 'acf-field', '', '0');
INSERT INTO `wpag_posts` VALUES('297', '1', '2015-05-29 16:01:52', '2015-05-29 22:01:52', 'a:12:{s:4:\"type\";s:4:\"text\";s:12:\"instructions\";s:0:\"\";s:8:\"required\";i:0;s:17:\"conditional_logic\";i:0;s:7:\"wrapper\";a:3:{s:5:\"width\";s:0:\"\";s:5:\"class\";s:0:\"\";s:2:\"id\";s:0:\"\";}s:13:\"default_value\";s:0:\"\";s:11:\"placeholder\";s:0:\"\";s:7:\"prepend\";s:0:\"\";s:6:\"append\";s:0:\"\";s:9:\"maxlength\";s:0:\"\";s:8:\"readonly\";i:0;s:8:\"disabled\";i:0;}', 'Title', 'title', 'publish', 'open', 'open', '', 'field_5568e1b0c2b11', '', '', '2015-05-29 16:01:52', '2015-05-29 22:01:52', '', '295', 'http://www.agildata.com/?post_type=acf-field&p=297', '1', 'acf-field', '', '0');
INSERT INTO `wpag_posts` VALUES('298', '1', '2015-05-29 16:01:52', '2015-05-29 22:01:52', 'a:12:{s:4:\"type\";s:8:\"textarea\";s:12:\"instructions\";s:0:\"\";s:8:\"required\";i:0;s:17:\"conditional_logic\";i:0;s:7:\"wrapper\";a:3:{s:5:\"width\";s:0:\"\";s:5:\"class\";s:0:\"\";s:2:\"id\";s:0:\"\";}s:13:\"default_value\";s:0:\"\";s:11:\"placeholder\";s:0:\"\";s:9:\"maxlength\";s:0:\"\";s:4:\"rows\";s:0:\"\";s:9:\"new_lines\";s:7:\"wpautop\";s:8:\"readonly\";i:0;s:8:\"disabled\";i:0;}', 'Description', 'description', 'publish', 'open', 'open', '', 'field_5568e1b7c2b12', '', '', '2015-05-29 16:01:52', '2015-05-29 22:01:52', '', '295', 'http://www.agildata.com/?post_type=acf-field&p=298', '2', 'acf-field', '', '0');
INSERT INTO `wpag_posts` VALUES('300', '1', '2015-05-29 16:04:24', '2015-05-29 22:04:24', '', 'Home', '', 'inherit', 'open', 'open', '', '38-revision-v1', '', '', '2015-05-29 16:04:24', '2015-05-29 22:04:24', '', '38', 'http://www.agildata.com/38-revision-v1/', '0', 'revision', '', '0');
INSERT INTO `wpag_posts` VALUES('301', '1', '2015-05-29 16:07:54', '2015-05-29 22:07:54', '', 'Home', '', 'inherit', 'open', 'open', '', '38-revision-v1', '', '', '2015-05-29 16:07:54', '2015-05-29 22:07:54', '', '38', 'http://www.agildata.com/38-revision-v1/', '0', 'revision', '', '0');
INSERT INTO `wpag_posts` VALUES('334', '5', '2015-06-02 19:23:30', '2015-06-03 01:23:30', '', 'Home', '', 'inherit', 'open', 'open', '', '38-revision-v1', '', '', '2015-06-02 19:23:30', '2015-06-03 01:23:30', '', '38', 'http://www.agildata.com/38-revision-v1/', '0', 'revision', '', '0');
INSERT INTO `wpag_posts` VALUES('346', '5', '2015-06-03 11:58:52', '2015-06-03 17:58:52', '', 'Home', '', 'inherit', 'open', 'open', '', '38-revision-v1', '', '', '2015-06-03 11:58:52', '2015-06-03 17:58:52', '', '38', 'http://www.agildata.com/38-revision-v1/', '0', 'revision', '', '0');
INSERT INTO `wpag_posts` VALUES('337', '5', '2015-06-02 20:20:00', '2015-06-03 02:20:00', '', 'Home', '', 'inherit', 'open', 'open', '', '38-revision-v1', '', '', '2015-06-02 20:20:00', '2015-06-03 02:20:00', '', '38', 'http://www.agildata.com/38-revision-v1/', '0', 'revision', '', '0');
INSERT INTO `wpag_posts` VALUES('307', '1', '2015-05-29 16:12:25', '2015-05-29 22:12:25', '', 'Home', '', 'inherit', 'open', 'open', '', '38-revision-v1', '', '', '2015-05-29 16:12:25', '2015-05-29 22:12:25', '', '38', 'http://www.agildata.com/38-revision-v1/', '0', 'revision', '', '0');
INSERT INTO `wpag_posts` VALUES('365', '5', '2015-06-04 13:51:31', '2015-06-04 19:51:31', 'Thank you for your request. You should receive an email within the next 5 minutes to the email address you used when submitted this form. If you do not receive it, please check your SPAM folder, or contact us at <a href=\"mailto:info@agildata.com\">info@agildata.com</a> to request it to be re-sent. Also, please add us to your address book to increase the success of our emails arriving to you.\r\n\r\n<a href=\"http://www.agildata.com/\">Return to the AgilData website now</a>', 'Thank You', '', 'inherit', 'open', 'open', '', '363-revision-v1', '', '', '2015-06-04 13:51:31', '2015-06-04 19:51:31', '', '363', 'http://www.agildata.com/363-revision-v1/', '0', 'revision', '', '0');
INSERT INTO `wpag_posts` VALUES('366', '5', '2015-06-04 14:09:11', '2015-06-04 20:09:11', 'Thank you for your request. You should receive an email within the next 5 minutes to the email address you used when submitting your form. If you do not receive it, please check your SPAM folder, or contact us at <a href=\"mailto:info@agildata.com\">info@agildata.com</a> to request it to be re-sent. Also, please add us to your address book to increase the success of our emails arriving to you.\r\n\r\n<a href=\"http://www.agildata.com/\">Return to the AgilData website now</a>', 'Thank You', '', 'inherit', 'open', 'open', '', '363-revision-v1', '', '', '2015-06-04 14:09:11', '2015-06-04 20:09:11', '', '363', 'http://www.agildata.com/363-revision-v1/', '0', 'revision', '', '0');
INSERT INTO `wpag_posts` VALUES('367', '5', '2015-06-04 14:12:09', '2015-06-04 20:12:09', 'Please fill out the simple form below, and we will send the AgilData Whitepaper to you immediately. Thanks for your interest in AgilData.\r\n\r\n[gravityform id=\"2\" title=\"false\" description=\"false\"]', 'Get The AgilData Whitepaper Here', '', 'publish', 'open', 'open', '', 'get-the-agildata-whitepaper-here', '', '', '2015-06-04 14:12:09', '2015-06-04 20:12:09', '', '0', 'http://www.agildata.com/?page_id=367', '0', 'page', '', '0');
INSERT INTO `wpag_posts` VALUES('368', '5', '2015-06-04 14:11:39', '2015-06-04 20:11:39', 'Please fill out the simple form below, and we will send the AgilData Whitepaper to you immediately. Thanks for your interest in AgilData.\r\n\r\n[gravityform id=\"2\" title=\"false\" description=\"false\"]', 'Get The AgilData Whitepaper Here', '', 'inherit', 'open', 'open', '', '367-revision-v1', '', '', '2015-06-04 14:11:39', '2015-06-04 20:11:39', '', '367', 'http://www.agildata.com/367-revision-v1/', '0', 'revision', '', '0');
INSERT INTO `wpag_posts` VALUES('369', '5', '2015-06-04 14:15:21', '2015-06-04 20:15:21', 'Please fill out the simple form below, and you will be included in the exclusive AgilData Beta group immediately. Thanks for your interest in AgilData.\r\n\r\n[gravityform id=\"3\" title=\"false\" description=\"false\" ajax=\"true\"]', 'Join The AgilData Beta Here', '', 'publish', 'open', 'open', '', 'join-the-agildata-beta-here', '', '', '2015-10-29 15:03:53', '2015-10-29 21:03:53', '', '0', 'http://www.agildata.com/?page_id=369', '0', 'page', '', '0');
INSERT INTO `wpag_posts` VALUES('370', '5', '2015-06-04 14:15:09', '2015-06-04 20:15:09', 'Please fill out the simple form below, and you will be included in the exclusive AgilData Beta group immediately. Thanks for your interest in AgilData.\r\n\r\n[gravityform id=\"3\" title=\"false\" description=\"false\"]', 'Join The AgilData Beta Here', '', 'inherit', 'open', 'open', '', '369-revision-v1', '', '', '2015-06-04 14:15:09', '2015-06-04 20:15:09', '', '369', 'http://www.agildata.com/369-revision-v1/', '0', 'revision', '', '0');
INSERT INTO `wpag_posts` VALUES('398', '5', '2015-07-06 12:57:38', '2015-07-06 18:57:38', 'AgilData, formerly CodeFutures, a provider of Agile <strong>Streaming Big Data</strong> technologies, announced Dan Lynn as CEO. Lynn assumes the role from Founder Cory Isaacson, who has joined RMS and will now serve as chairman of AgilData. Lynn brings more than 14 years of advanced technology and business success experience, and will help AgilData Code build on its industry leadership advancing Agile Big Data initiatives. His technical and product expertise will be invaluable to achieving the AgilData platform goals of simplifying streaming fast data at scale using SQL helping companies be more competitive by getting more value from their ever growing volumes of mission-critical data.\r\n\r\nIsaacson states, “Dan Lynn has the experience and passion to lead AgilData into the next chapter of its growth, and to help organizations simplify the increasingly complex set of challenges that bog Big Data initiatives down. Dan’s mix of business experience and deep technology leadership is a perfect fit for AgilData as it delivers new innovation to the Big Data market space.”\r\n\r\n“The opportunity to join AgilData is very exciting as we work to radically change the way organizations stream, organize, and gain value from Big Data,” said Lynn. “Today’s large IT departments are quickly adopting Agile-based approaches that are iterative and meet the real-time needs of the organization. Our mission is to bring the same agility to data retrieval through new approaches that are streamlined to empower developers to more quickly achieve the goals of the business.”\r\n\r\nAgilData is a leading supplier of database performance tools.  Its Big Data platform AgilData is designed to remove the complexity and limitations of current data management approaches. AgilData provides high-performance stream processing that supports the real-time, data-driven enterprise enabling organizations to quickly and efficiently gather meaningful insights from fast data. AgilData’s vision is to enable an agile approach to Big Data processing and data modeling – transforming static database repositories into a flexible data infrastructure and disrupting traditional industry practices with its forward-thinking approaches to database architecture.', 'AgilData to Advance Streaming Big Data', '', 'inherit', 'open', 'open', '', '358-revision-v1', '', '', '2015-07-06 12:57:38', '2015-07-06 18:57:38', '', '358', 'http://www.agildata.com/358-revision-v1/', '0', 'revision', '', '0');
INSERT INTO `wpag_posts` VALUES('377', '5', '2015-06-04 19:00:36', '2015-06-05 01:00:36', 'AgilData, formerly CodeFutures, a provider of Agile Big Data technologies, announced Dan Lynn as CEO. Lynn assumes the role from Founder Cory Isaacson, who has joined RMS and will now serve as chairman of AgilData. Lynn brings more than 14 years of advanced technology and business success experience, and will help AgilData Code build on its industry leadership advancing Agile Big Data initiatives. His technical and product expertise will be invaluable to achieving the AgilData platform goals of simplifying streaming fast data at scale using SQL helping companies be more competitive by getting more value from their ever growing volumes of mission-critical data.\r\n\r\nIsaacson states, “Dan Lynn has the experience and passion to lead AgilData into the next chapter of its growth, and to help organizations simplify the increasingly complex set of challenges that bog Big Data initiatives down. Dan’s mix of business experience and deep technology leadership is a perfect fit for AgilData as it delivers new innovation to the Big Data market space.”\r\n\r\n“The opportunity to join AgilData is very exciting as we work to radically change the way organizations stream, organize, and gain value from Big Data,” said Lynn. “Today’s large IT departments are quickly adopting Agile-based approaches that are iterative and meet the real-time needs of the organization. Our mission is to bring the same agility to data retrieval through new approaches that are streamlined to empower developers to more quickly achieve the goals of the business.”\r\n\r\nAgilData is a leading supplier of database performance tools.  Its Big Data platform AgilData is designed to remove the complexity and limitations of current data management approaches. AgilData provides high-performance stream processing that supports the real-time, data-driven enterprise enabling organizations to quickly and efficiently gather meaningful insights from fast data. AgilData’s vision is to enable an agile approach to Big Data processing and data modeling – transforming static database repositories into a flexible data infrastructure and disrupting traditional industry practices with its forward-thinking approaches to database architecture.', 'AgilData to Advance Streaming Big Data', '', 'inherit', 'open', 'open', '', '358-revision-v1', '', '', '2015-06-04 19:00:36', '2015-06-05 01:00:36', '', '358', 'http://www.agildata.com/358-revision-v1/', '0', 'revision', '', '0');
INSERT INTO `wpag_posts` VALUES('378', '5', '2015-06-04 23:41:35', '2015-06-05 05:41:35', '', 'Home', '', 'inherit', 'open', 'open', '', '38-revision-v1', '', '', '2015-06-04 23:41:35', '2015-06-05 05:41:35', '', '38', 'http://www.agildata.com/38-revision-v1/', '0', 'revision', '', '0');
INSERT INTO `wpag_posts` VALUES('379', '5', '2015-06-04 23:42:21', '2015-06-05 05:42:21', '', 'Home', '', 'inherit', 'open', 'open', '', '38-revision-v1', '', '', '2015-06-04 23:42:21', '2015-06-05 05:42:21', '', '38', 'http://www.agildata.com/38-revision-v1/', '0', 'revision', '', '0');
INSERT INTO `wpag_posts` VALUES('380', '5', '2015-06-04 23:45:00', '2015-06-05 05:45:00', '', 'Home', '', 'inherit', 'open', 'open', '', '38-revision-v1', '', '', '2015-06-04 23:45:00', '2015-06-05 05:45:00', '', '38', 'http://www.agildata.com/38-revision-v1/', '0', 'revision', '', '0');
INSERT INTO `wpag_posts` VALUES('381', '5', '2015-06-04 23:46:43', '2015-06-05 05:46:43', '', 'Home', '', 'inherit', 'open', 'open', '', '38-revision-v1', '', '', '2015-06-04 23:46:43', '2015-06-05 05:46:43', '', '38', 'http://www.agildata.com/38-revision-v1/', '0', 'revision', '', '0');
INSERT INTO `wpag_posts` VALUES('382', '5', '2015-06-04 23:50:09', '2015-06-05 05:50:09', '', 'Home', '', 'inherit', 'open', 'open', '', '38-revision-v1', '', '', '2015-06-04 23:50:09', '2015-06-05 05:50:09', '', '38', 'http://www.agildata.com/38-revision-v1/', '0', 'revision', '', '0');
INSERT INTO `wpag_posts` VALUES('383', '5', '2015-06-04 23:56:13', '2015-06-05 05:56:13', '', 'Home', '', 'inherit', 'open', 'open', '', '38-revision-v1', '', '', '2015-06-04 23:56:13', '2015-06-05 05:56:13', '', '38', 'http://www.agildata.com/38-revision-v1/', '0', 'revision', '', '0');
INSERT INTO `wpag_posts` VALUES('385', '5', '2015-06-06 17:03:24', '2015-06-06 23:03:24', '', 'Home', '', 'inherit', 'open', 'open', '', '38-revision-v1', '', '', '2015-06-06 17:03:24', '2015-06-06 23:03:24', '', '38', 'http://www.agildata.com/38-revision-v1/', '0', 'revision', '', '0');
INSERT INTO `wpag_posts` VALUES('404', '5', '2015-07-13 21:31:05', '2015-07-14 03:31:05', '', 'AgilDataAgileApproachtoStreamingFastData (1)', '', 'inherit', 'open', 'open', '', 'agildataagileapproachtostreamingfastdata-1', '', '', '2015-07-13 21:31:05', '2015-07-14 03:31:05', '', '0', 'http://www.agildata.com/wp-content/uploads/2015/07/AgilDataAgileApproachtoStreamingFastData-1.pdf', '0', 'attachment', 'application/pdf', '0');
INSERT INTO `wpag_posts` VALUES('393', '5', '2015-06-24 16:38:50', '2015-06-24 22:38:50', '', 'AgilData Real-Time Streaming Database', '', 'inherit', 'open', 'open', '', '38-revision-v1', '', '', '2015-06-24 16:38:50', '2015-06-24 22:38:50', '', '38', 'http://www.agildata.com/38-revision-v1/', '0', 'revision', '', '0');
INSERT INTO `wpag_posts` VALUES('394', '5', '2015-06-24 16:41:36', '2015-06-24 22:41:36', '', 'AgilData Real-Time Streaming Database', '', 'inherit', 'open', 'open', '', '38-revision-v1', '', '', '2015-06-24 16:41:36', '2015-06-24 22:41:36', '', '38', 'http://www.agildata.com/38-revision-v1/', '0', 'revision', '', '0');
INSERT INTO `wpag_posts` VALUES('395', '5', '2015-06-24 16:44:31', '2015-06-24 22:44:31', '', 'AgilData Real-Time Streaming Database', '', 'inherit', 'open', 'open', '', '38-revision-v1', '', '', '2015-06-24 16:44:31', '2015-06-24 22:44:31', '', '38', 'http://www.agildata.com/38-revision-v1/', '0', 'revision', '', '0');
INSERT INTO `wpag_posts` VALUES('396', '5', '2015-06-24 16:45:40', '2015-06-24 22:45:40', '', 'Real-Time Streaming Database', '', 'inherit', 'open', 'open', '', '38-revision-v1', '', '', '2015-06-24 16:45:40', '2015-06-24 22:45:40', '', '38', 'http://www.agildata.com/38-revision-v1/', '0', 'revision', '', '0');
INSERT INTO `wpag_posts` VALUES('406', '5', '2015-10-14 21:23:10', '2015-10-15 03:23:10', '<h2>AgilData | Real-Time Big Data Platform</h2>\r\nAgilData is more than “just another database” – it is an entirely new way of looking at, and working with your data. We have developed an innovative new Big Data platform, designed to remove the complexity and limitations of current data management approaches. AgilData features real-time high-performance stream processing to support data-driven enterprises who crave real-time results.\r\n\r\nAgilData allows quick and proficient accumulation of meaningful data that is increasingly difficult to access for large-enterprise, online gaming, interactive-mobile and other high-volume, Web 2.0 applications.\r\n\r\n<a href=\"http://www.agildata.com/\" target=\"_blank\">Read more about AgilData</a>\r\n\r\n<a href=\"http://www.agildata.com/get-the-agildata-whitepaper-here/\" target=\"_blank\"> Get AgilData Whitepaper</a>\r\n\r\n<a href=\"http://www.agildata.com/join-the-agildata-beta-here/\" target=\"_blank\">Apply to be a private beta tester of AgilData</a>\r\n<h2>dbShards | Database Products</h2>\r\n<h3>dbShards: MySQL Database Scalability and Performance with<a href=\"http://dbshards.com/database-sharding/\" target=\"_blank\"> <em>Database Sharding</em></a></h3>\r\ndbShards helps companies to scale large, high-volume databases using <a href=\"http://dbshards.com/database-sharding/\" target=\"_blank\">Database Sharding</a>, the database scalability architecture made famous by high volume Web sites such as Flickr, YouTube, and Google. Going beyond traditional Data Warehouse Appliances, dbShards dramatically improves response times and scalability of OLTP databases, Software as a Service, and any other systems with many concurrent users – all using cost-effective commodity hardware.\r\n\r\n<a href=\"http://dbshards.com/database-sharding/\" target=\"_blank\">Read more about dbShards</a>\r\n\r\n<a href=\"http://dbshards.com/dbshards/database-sharding-white-paper/\" target=\"_blank\">Request Database Sharding White Paper</a>', 'Database Products', '', 'publish', 'closed', 'closed', '', 'database-products', '', '', '2015-10-14 21:23:10', '2015-10-15 03:23:10', '', '0', 'http://www.agildata.com/?page_id=406', '0', 'page', '', '0');
INSERT INTO `wpag_posts` VALUES('407', '5', '2015-10-14 21:23:10', '2015-10-15 03:23:10', '<h2>AgilData | Real-Time Big Data Platform</h2>\r\nAgilData is more than “just another database” – it is an entirely new way of looking at, and working with your data. We have developed an innovative new Big Data platform, designed to remove the complexity and limitations of current data management approaches. AgilData features real-time high-performance stream processing to support data-driven enterprises who crave real-time results.\r\n\r\nAgilData allows quick and proficient accumulation of meaningful data that is increasingly difficult to access for large-enterprise, online gaming, interactive-mobile and other high-volume, Web 2.0 applications.\r\n\r\n<a href=\"http://www.agildata.com/\" target=\"_blank\">Read more about AgilData</a>\r\n\r\n<a href=\"http://www.agildata.com/get-the-agildata-whitepaper-here/\" target=\"_blank\"> Get AgilData Whitepaper</a>\r\n\r\n<a href=\"http://www.agildata.com/join-the-agildata-beta-here/\" target=\"_blank\">Apply to be a private beta tester of AgilData</a>\r\n<h2>dbShards | Database Products</h2>\r\n<h3>dbShards: MySQL Database Scalability and Performance with<a href=\"http://dbshards.com/database-sharding/\" target=\"_blank\"> <em>Database Sharding</em></a></h3>\r\ndbShards helps companies to scale large, high-volume databases using <a href=\"http://dbshards.com/database-sharding/\" target=\"_blank\">Database Sharding</a>, the database scalability architecture made famous by high volume Web sites such as Flickr, YouTube, and Google. Going beyond traditional Data Warehouse Appliances, dbShards dramatically improves response times and scalability of OLTP databases, Software as a Service, and any other systems with many concurrent users – all using cost-effective commodity hardware.\r\n\r\n<a href=\"http://dbshards.com/database-sharding/\" target=\"_blank\">Read more about dbShards</a>\r\n\r\n<a href=\"http://dbshards.com/dbshards/database-sharding-white-paper/\" target=\"_blank\">Request Database Sharding White Paper</a>', 'Database Products', '', 'inherit', 'closed', 'closed', '', '406-revision-v1', '', '', '2015-10-14 21:23:10', '2015-10-15 03:23:10', '', '406', 'http://www.agildata.com/406-revision-v1/', '0', 'revision', '', '0');
INSERT INTO `wpag_posts` VALUES('409', '5', '2015-10-22 12:39:58', '2015-10-22 18:39:58', '<h3>AgilData is the new CodeFutures!</h3>\r\nWhile start-ups come and go, success may be measured in many ways.  For numerous customers, one that powered their mission critical apps over eight years, tops their list.  CodeFutures was started in 2007 by longtime database technology developers Cory Isaacson and Andy Grove.\r\n\r\nSoon, CodeFutures had 5 of the top 50 Facebook apps using our dbShards product and we became the leader in scaling multi-terabyte MySQL databases. CodeFutures was also a great company to work for, built on a core set of values that we continue to expand on today. We continue to obsess about building a distributed culture that starts with honesty and integrity as a team and with our customers.\r\n\r\nSince the CodeFutures name will no longer be in use, we have shut down the www.codefutures.com website. <a href=\"http://www.dbshards.com/\">dbShards.com</a> will continue to be used as a product portal for dbShards ongoing. <a href=\"http://www.agildata.com/\">www.AgilData.com</a> will be our primary website.\r\n\r\nWe have also made some changes to our product roadmap. We will be focusing primarily on the AgilData platform which will include dbShards as part of our mission to develop industry leading data infrastructure solutions. However, Firestorm and MapDB are no longer supported.\r\n\r\nThe stage is set for AgilData to continue to innovate and expand the value we bring to customers building new value streams from their data, shortening development cycles and ultimately reduce their operational load.\r\n\r\nTo say that we are the same company, with a new name, couldn’t be more true.  With our new mission, and an expanded team, we’re excited to carry the CodeFutures torch, still burning brightly.\r\n\r\nIf you are a developer trying to get more out of your data <a href=\"http://www.agildata.com/join-the-agildata-beta-here/\">join the beta</a> or give us a shout to see how we can make it happen.', 'AgilData is the new CodeFutures!', '', 'publish', 'open', 'open', '', 'agildata-is-the-new-codefutures', '', '', '2015-10-23 17:07:07', '2015-10-23 23:07:07', '', '0', 'http://www.agildata.com/?p=409', '0', 'post', '', '0');
INSERT INTO `wpag_posts` VALUES('410', '5', '2015-10-22 12:25:55', '2015-10-22 18:25:55', 'AgilData is the new CodeFutures! To say that we are the same company with a new name couldn’t be more true and with our new mission and an expanded team we are excited to carry the CodeFutures torch that still burns bright.\r\n\r\nStart-ups come and go and success can be measured in many ways but most would agree that longevity and powering mission critical apps for your customers are at the top of the list. CodeFutures was started in 2007 by Cory Isaacson and Andy Grove who had been working on developing new database technologies for a long time. Soon, CodeFutures had 5 of the top 50 Facebook apps using our dbShards product and we became the leader in scaling multi-terabyte MySQL databases. CodeFutures was also a great company to work for, built on a core set of values that we continue to expand on today. We obsess about building our distributed culture that starts with honesty and integrity for both our own team and our customers.\r\n\r\nSince the CodeFutures name will no longer be in use, we have shut down the <a href=\"http://codefutures.com/\" target=\"_blank\">www.codefutures.com</a> website. <a href=\"http://www.dbShards.com\" target=\"_blank\">dbShards.com</a> will continue to be used as a product portal for dbShards ongoing. AgilData.com will be our primary website.\r\n\r\nWe have also made some changes to our product roadmap. We will be focusing primarily on the AgilData platform which will include dbShards as part of our mission to develop industry leading data infrastructure solutions. However, Firestorm and MapDB are no longer supported.\r\n\r\nThe stage is set for AgilData to continue to innovate and expand the value we bring to customers to help them to build new value stream from their data, shorten development cycles and ultimately reduce their operational load. If you are a developer trying to get more out of your data <a href=\"http://www.agildata.com/join-the-agildata-beta-here/\">join the beta</a> or give us a shout to see how we can make it happen.', 'AgilData is the new CodeFutures!', '', 'inherit', 'closed', 'closed', '', '409-revision-v1', '', '', '2015-10-22 12:25:55', '2015-10-22 18:25:55', '', '409', 'http://www.agildata.com/409-revision-v1/', '0', 'revision', '', '0');
INSERT INTO `wpag_posts` VALUES('411', '5', '2015-10-22 12:30:30', '2015-10-22 18:30:30', '', 'codefutures_agildata_banner04', '', 'inherit', 'open', 'closed', '', 'codefutures_agildata_banner04', '', '', '2015-10-22 12:30:30', '2015-10-22 18:30:30', '', '409', 'http://www.agildata.com/wp-content/uploads/2015/10/codefutures_agildata_banner04.png', '0', 'attachment', 'image/png', '0');
INSERT INTO `wpag_posts` VALUES('413', '5', '2015-10-22 12:36:58', '2015-10-22 18:36:58', '', 'AgilDataNowCodeFutures', '', 'inherit', 'open', 'closed', '', 'agildatanowcodefutures', '', '', '2015-10-22 12:36:58', '2015-10-22 18:36:58', '', '409', 'http://www.agildata.com/wp-content/uploads/2015/10/AgilDataNowCodeFutures.jpg', '0', 'attachment', 'image/jpeg', '0');
INSERT INTO `wpag_posts` VALUES('427', '5', '2015-10-23 17:07:07', '2015-10-23 23:07:07', '<h3>AgilData is the new CodeFutures!</h3>\r\nWhile start-ups come and go, success may be measured in many ways.  For numerous customers, one that powered their mission critical apps over eight years, tops their list.  CodeFutures was started in 2007 by longtime database technology developers Cory Isaacson and Andy Grove.\r\n\r\nSoon, CodeFutures had 5 of the top 50 Facebook apps using our dbShards product and we became the leader in scaling multi-terabyte MySQL databases. CodeFutures was also a great company to work for, built on a core set of values that we continue to expand on today. We continue to obsess about building a distributed culture that starts with honesty and integrity as a team and with our customers.\r\n\r\nSince the CodeFutures name will no longer be in use, we have shut down the www.codefutures.com website. <a href=\"http://www.dbshards.com/\">dbShards.com</a> will continue to be used as a product portal for dbShards ongoing. <a href=\"http://www.agildata.com/\">www.AgilData.com</a> will be our primary website.\r\n\r\nWe have also made some changes to our product roadmap. We will be focusing primarily on the AgilData platform which will include dbShards as part of our mission to develop industry leading data infrastructure solutions. However, Firestorm and MapDB are no longer supported.\r\n\r\nThe stage is set for AgilData to continue to innovate and expand the value we bring to customers building new value streams from their data, shortening development cycles and ultimately reduce their operational load.\r\n\r\nTo say that we are the same company, with a new name, couldn’t be more true.  With our new mission, and an expanded team, we’re excited to carry the CodeFutures torch, still burning brightly.\r\n\r\nIf you are a developer trying to get more out of your data <a href=\"http://www.agildata.com/join-the-agildata-beta-here/\">join the beta</a> or give us a shout to see how we can make it happen.', 'AgilData is the new CodeFutures!', '', 'inherit', 'closed', 'closed', '', '409-revision-v1', '', '', '2015-10-23 17:07:07', '2015-10-23 23:07:07', '', '409', 'http://www.agildata.com/409-revision-v1/', '0', 'revision', '', '0');
INSERT INTO `wpag_posts` VALUES('414', '5', '2015-10-22 12:55:43', '2015-10-22 18:55:43', 'AgilData is the new codeFutures! To say that we are the same company with a new name couldn’t be more true and with our new mission and an expanded team we are excited to carry the codeFutures torch that still burns bright.\r\n\r\nStart-ups come and go and success can be measured in many ways but most would agree that longevity and powering mission critical apps for your customers are at the top of the list. codeFutures was started in 2007 by Cory Isaacson and Andy Grove who had been working on developing new database technologies for a long time. Soon, codeFutures had 5 of the top 50 Facebook apps using our dbShards product and we became the leader in scaling multi-terabyte MySQL databases. codeFutures was also a great company to work for, built on a core set of values that we continue to expand on today. We obsess about building our distributed culture that starts with honesty and integrity for both our own team and our customers.\r\n\r\nSince the codeFutures name will no longer be in use, we have shut down the <a href=\"http://codefutures.com/\" target=\"_blank\">www.codefutures.com</a> website. <a href=\"http://www.dbShards.com\" target=\"_blank\">dbShards.com</a> will continue to be used as a product portal for dbShards ongoing. AgilData.com will be our primary website.\r\n\r\nWe have also made some changes to our product roadmap. We will be focusing primarily on the AgilData platform which will include dbShards as part of our mission to develop industry leading data infrastructure solutions. However, Firestorm and MapDB are no longer supported.\r\n\r\nThe stage is set for AgilData to continue to innovate and expand the value we bring to customers to help them to build new value stream from their data, shorten development cycles and ultimately reduce their operational load. If you are a developer trying to get more out of your data <a href=\"http://www.agildata.com/join-the-agildata-beta-here/\">join the beta</a> or give us a shout to see how we can make it happen.', 'AgilData is the new CodeFutures!', '', 'inherit', 'closed', 'closed', '', '409-revision-v1', '', '', '2015-10-22 12:55:43', '2015-10-22 18:55:43', '', '409', 'http://www.agildata.com/409-revision-v1/', '0', 'revision', '', '0');
INSERT INTO `wpag_posts` VALUES('415', '5', '2015-10-23 17:06:00', '2015-10-23 23:06:00', '<h3>AgilData is the new CodeFutures!</h3>\r\nWhile start-ups come and go, success may be measured in many ways.  For numerous customers, one that powered their mission critical apps over eight years, tops their list.  CodeFutures was started in 2007 by longtime database technology developers Cory Isaacson and Andy Grove.\r\n\r\nSoon, CodeFutures had 5 of the top 50 Facebook apps using our dbShards product and we became the leader in scaling multi-terabyte MySQL databases. CodeFutures was also a great company to work for, built on a core set of values that we continue to expand on today. We continue to obsess about building a distributed culture that starts with honesty and integrity as a team and with our customers.\r\n\r\nSince the CodeFutures name will no longer be in use, we have shut down the <a href=\"http://www.codefutures.com/\">www.codefutures.com</a> website. <a href=\"http://www.dbshards.com/\">dbShards.com</a> will continue to be used as a product portal for dbShards ongoing. <a href=\"http://www.agildata.com/\">www.AgilData.com</a> will be our primary website.\r\n\r\nWe have also made some changes to our product roadmap. We will be focusing primarily on the AgilData platform which will include dbShards as part of our mission to develop industry leading data infrastructure solutions. However, Firestorm and MapDB are no longer supported.\r\n\r\nThe stage is set for AgilData to continue to innovate and expand the value we bring to customers building new value streams from their data, shortening development cycles and ultimately reduce their operational load.\r\n\r\nTo say that we are the same company, with a new name, couldn’t be more true.  With our new mission, and an expanded team, we’re excited to carry the CodeFutures torch, still burning brightly.\r\n\r\nIf you are a developer trying to get more out of your data <a href=\"http://www.agildata.com/join-the-agildata-beta-here/\">join the beta</a> or give us a shout to see how we can make it happen.\r\n\r\n&nbsp;', 'AgilData is the new CodeFutures!', '', 'inherit', 'closed', 'closed', '', '409-autosave-v1', '', '', '2015-10-23 17:06:00', '2015-10-23 23:06:00', '', '409', 'http://www.agildata.com/409-autosave-v1/', '0', 'revision', '', '0');
INSERT INTO `wpag_posts` VALUES('416', '5', '2015-10-22 13:08:28', '2015-10-22 19:08:28', 'AgilData\r\n\r\n... is the new codeFutures! To say that we are the same company with a new name couldn’t be more true and with our new mission and an expanded team we are excited to carry the codeFutures torch that still burns bright.\r\n\r\nStart-ups come and go and success can be measured in many ways but most would agree that longevity and powering mission critical apps for your customers are at the top of the list. codeFutures was started in 2007 by Cory Isaacson and Andy Grove who had been working on developing new database technologies for a long time. Soon, codeFutures had 5 of the top 50 Facebook apps using our dbShards product and we became the leader in scaling multi-terabyte MySQL databases. codeFutures was also a great company to work for, built on a core set of values that we continue to expand on today. We obsess about building our distributed culture that starts with honesty and integrity as a team and with our customers.\r\n\r\nSince the codeFutures name will no longer be in use, we have shut down the <a href=\"http://codefutures.com/\" target=\"_blank\">www.codefutures.com</a> website. <a href=\"http://www.dbShards.com\" target=\"_blank\">dbShards.com</a> will continue to be used as a product portal for dbShards ongoing. AgilData.com will be our primary website.\r\n\r\nWe have also made some changes to our product roadmap. We will be focusing primarily on the AgilData platform which will include dbShards as part of our mission to develop industry leading data infrastructure solutions. However, Firestorm and MapDB are no longer supported.\r\n\r\nThe stage is set for AgilData to continue to innovate and expand the value we bring to customers to help them to build new value stream from their data, shorten development cycles and ultimately reduce their operational load. If you are a developer trying to get more out of your data <a href=\"http://www.agildata.com/join-the-agildata-beta-here/\">join the beta</a> or give us a shout to see how we can make it happen.', 'AgilData is the new CodeFutures!', '', 'inherit', 'closed', 'closed', '', '409-revision-v1', '', '', '2015-10-22 13:08:28', '2015-10-22 19:08:28', '', '409', 'http://www.agildata.com/409-revision-v1/', '0', 'revision', '', '0');
INSERT INTO `wpag_posts` VALUES('417', '5', '2015-10-22 13:09:04', '2015-10-22 19:09:04', '<h3>AgilData</h3>\r\n... is the new codeFutures! To say that we are the same company with a new name couldn’t be more true and with our new mission and an expanded team we are excited to carry the codeFutures torch that still burns bright.\r\n\r\nStart-ups come and go and success can be measured in many ways but most would agree that longevity and powering mission critical apps for your customers are at the top of the list. codeFutures was started in 2007 by Cory Isaacson and Andy Grove who had been working on developing new database technologies for a long time. Soon, codeFutures had 5 of the top 50 Facebook apps using our dbShards product and we became the leader in scaling multi-terabyte MySQL databases. codeFutures was also a great company to work for, built on a core set of values that we continue to expand on today. We obsess about building our distributed culture that starts with honesty and integrity as a team and with our customers.\r\n\r\nSince the codeFutures name will no longer be in use, we have shut down the <a href=\"http://codefutures.com/\" target=\"_blank\">www.codefutures.com</a> website. <a href=\"http://www.dbShards.com\" target=\"_blank\">dbShards.com</a> will continue to be used as a product portal for dbShards ongoing. AgilData.com will be our primary website.\r\n\r\nWe have also made some changes to our product roadmap. We will be focusing primarily on the AgilData platform which will include dbShards as part of our mission to develop industry leading data infrastructure solutions. However, Firestorm and MapDB are no longer supported.\r\n\r\nThe stage is set for AgilData to continue to innovate and expand the value we bring to customers to help them to build new value stream from their data, shorten development cycles and ultimately reduce their operational load. If you are a developer trying to get more out of your data <a href=\"http://www.agildata.com/join-the-agildata-beta-here/\">join the beta</a> or give us a shout to see how we can make it happen.', 'AgilData is the new CodeFutures!', '', 'inherit', 'closed', 'closed', '', '409-revision-v1', '', '', '2015-10-22 13:09:04', '2015-10-22 19:09:04', '', '409', 'http://www.agildata.com/409-revision-v1/', '0', 'revision', '', '0');
INSERT INTO `wpag_posts` VALUES('421', '5', '2015-10-22 13:20:58', '2015-10-22 19:20:58', '<h3>AgilData is the new codeFutures!</h3>\r\nTo say that we are the same company with a new name couldn’t be more true and with our new mission and an expanded team we are excited to carry the codeFutures torch that still burns bright.\r\n\r\nStart-ups come and go and success can be measured in many ways but most would agree that longevity and powering mission critical apps for your customers are at the top of the list. codeFutures was started in 2007 by Cory Isaacson and Andy Grove who had been working on developing new database technologies for a long time. Soon, codeFutures had 5 of the top 50 Facebook apps using our dbShards product and we became the leader in scaling multi-terabyte MySQL databases. codeFutures was also a great company to work for, built on a core set of values that we continue to expand on today. We obsess about building our distributed culture that starts with honesty and integrity as a team and with our customers.\r\n\r\nSince the codeFutures name will no longer be in use, we have shut down the www.codefutures.com website. <a href=\"http://www.dbShards.com\" target=\"_blank\">dbShards.com</a> will continue to be used as a product portal for dbShards ongoing. AgilData.com will be our primary website.\r\n\r\nWe have also made some changes to our product roadmap. We will be focusing primarily on the AgilData platform which will include dbShards as part of our mission to develop industry leading data infrastructure solutions. However, Firestorm and MapDB are no longer supported.\r\n\r\n<span class=\"message_content\">The stage is set for AgilData to continue to innovate and expand the value we bring to customers building new value streams from their data, shortening development cycles and ultimately reduce their operational load. </span>\r\n\r\n<span class=\"message_content\">If you are a developer trying to get more out of your data <a href=\"http://www.agildata.com/join-the-agildata-beta-here/\">join the beta</a> or give us a shout to see how we can make it happen.</span>', 'AgilData is the new CodeFutures!', '', 'inherit', 'closed', 'closed', '', '409-revision-v1', '', '', '2015-10-22 13:20:58', '2015-10-22 19:20:58', '', '409', 'http://www.agildata.com/409-revision-v1/', '0', 'revision', '', '0');
INSERT INTO `wpag_posts` VALUES('419', '5', '2015-10-22 13:17:43', '2015-10-22 19:17:43', '<h3>AgilData</h3>\r\n... is the new codeFutures! To say that we are the same company with a new name couldn’t be more true and with our new mission and an expanded team we are excited to carry the codeFutures torch that still burns bright.\r\n\r\nStart-ups come and go and success can be measured in many ways but most would agree that longevity and powering mission critical apps for your customers are at the top of the list. codeFutures was started in 2007 by Cory Isaacson and Andy Grove who had been working on developing new database technologies for a long time. Soon, codeFutures had 5 of the top 50 Facebook apps using our dbShards product and we became the leader in scaling multi-terabyte MySQL databases. codeFutures was also a great company to work for, built on a core set of values that we continue to expand on today. We obsess about building our distributed culture that starts with honesty and integrity as a team and with our customers.\r\n\r\nSince the codeFutures name will no longer be in use, we have shut down the www.codefutures.com website. <a href=\"http://www.dbShards.com\" target=\"_blank\">dbShards.com</a> will continue to be used as a product portal for dbShards ongoing. AgilData.com will be our primary website.\r\n\r\nWe have also made some changes to our product roadmap. We will be focusing primarily on the AgilData platform which will include dbShards as part of our mission to develop industry leading data infrastructure solutions. However, Firestorm and MapDB are no longer supported.\r\n\r\n<span class=\"message_content\">The stage is set for AgilData to continue to innovate and expand the value we bring to customers building new value streams from their data, shortening development cycles and ultimately reduce their operational load. </span>\r\n\r\n<span class=\"message_content\">If you are a developer trying to get more out of your data <a href=\"http://www.agildata.com/join-the-agildata-beta-here/\">join the beta</a> or give us a shout to see how we can make it happen.</span>', 'AgilData is the new CodeFutures!', '', 'inherit', 'closed', 'closed', '', '409-revision-v1', '', '', '2015-10-22 13:17:43', '2015-10-22 19:17:43', '', '409', 'http://www.agildata.com/409-revision-v1/', '0', 'revision', '', '0');
INSERT INTO `wpag_posts` VALUES('418', '5', '2015-10-22 13:14:32', '2015-10-22 19:14:32', '<h3>AgilData</h3>\r\n... is the new codeFutures! To say that we are the same company with a new name couldn’t be more true and with our new mission and an expanded team we are excited to carry the codeFutures torch that still burns bright.\r\n\r\nStart-ups come and go and success can be measured in many ways but most would agree that longevity and powering mission critical apps for your customers are at the top of the list. codeFutures was started in 2007 by Cory Isaacson and Andy Grove who had been working on developing new database technologies for a long time. Soon, codeFutures had 5 of the top 50 Facebook apps using our dbShards product and we became the leader in scaling multi-terabyte MySQL databases. codeFutures was also a great company to work for, built on a core set of values that we continue to expand on today. We obsess about building our distributed culture that starts with honesty and integrity as a team and with our customers.\r\n\r\nSince the codeFutures name will no longer be in use, we have shut down the <a href=\"http://codefutures.com/\" target=\"_blank\">www.codefutures.com</a> website. <a href=\"http://www.dbShards.com\" target=\"_blank\">dbShards.com</a> will continue to be used as a product portal for dbShards ongoing. AgilData.com will be our primary website.\r\n\r\nWe have also made some changes to our product roadmap. We will be focusing primarily on the AgilData platform which will include dbShards as part of our mission to develop industry leading data infrastructure solutions. However, Firestorm and MapDB are no longer supported.\r\n\r\n<span class=\"message_content\">The stage is set for AgilData to continue to innovate and expand the value we bring to customers building new value streams from their data, shortening development cycles and ultimately reduce their operational load. If you are a developer trying to get more out of your data <a href=\"http://www.agildata.com/join-the-agildata-beta-here/\">join the beta</a> or give us a shout to see how we can make it happen.</span>', 'AgilData is the new CodeFutures!', '', 'inherit', 'closed', 'closed', '', '409-revision-v1', '', '', '2015-10-22 13:14:32', '2015-10-22 19:14:32', '', '409', 'http://www.agildata.com/409-revision-v1/', '0', 'revision', '', '0');
INSERT INTO `wpag_posts` VALUES('420', '5', '2015-10-22 13:19:03', '2015-10-22 19:19:03', 'AgilData\r\n\r\n... is the new codeFutures! To say that we are the same company with a new name couldn’t be more true and with our new mission and an expanded team we are excited to carry the codeFutures torch that still burns bright.\r\n\r\nStart-ups come and go and success can be measured in many ways but most would agree that longevity and powering mission critical apps for your customers are at the top of the list. codeFutures was started in 2007 by Cory Isaacson and Andy Grove who had been working on developing new database technologies for a long time. Soon, codeFutures had 5 of the top 50 Facebook apps using our dbShards product and we became the leader in scaling multi-terabyte MySQL databases. codeFutures was also a great company to work for, built on a core set of values that we continue to expand on today. We obsess about building our distributed culture that starts with honesty and integrity as a team and with our customers.\r\n\r\nSince the codeFutures name will no longer be in use, we have shut down the www.codefutures.com website. <a href=\"http://www.dbShards.com\" target=\"_blank\">dbShards.com</a> will continue to be used as a product portal for dbShards ongoing. AgilData.com will be our primary website.\r\n\r\nWe have also made some changes to our product roadmap. We will be focusing primarily on the AgilData platform which will include dbShards as part of our mission to develop industry leading data infrastructure solutions. However, Firestorm and MapDB are no longer supported.\r\n\r\n<span class=\"message_content\">The stage is set for AgilData to continue to innovate and expand the value we bring to customers building new value streams from their data, shortening development cycles and ultimately reduce their operational load. </span>\r\n\r\n<span class=\"message_content\">If you are a developer trying to get more out of your data <a href=\"http://www.agildata.com/join-the-agildata-beta-here/\">join the beta</a> or give us a shout to see how we can make it happen.</span>', 'AgilData is the new CodeFutures!', '', 'inherit', 'closed', 'closed', '', '409-revision-v1', '', '', '2015-10-22 13:19:03', '2015-10-22 19:19:03', '', '409', 'http://www.agildata.com/409-revision-v1/', '0', 'revision', '', '0');
INSERT INTO `wpag_posts` VALUES('423', '7', '2015-10-23 12:10:28', '2015-10-23 18:10:28', '<h3>AgilData is the new CodeFutures!</h3>\r\nTo say that we are the same company with a new name couldn’t be more true and with our new mission and an expanded team we are excited to carry the CodeFutures torch that still burns bright.\r\n\r\nStart-ups come and go and success can be measured in many ways but most would agree that longevity and powering mission critical apps for your customers are at the top of the list. codeFutures was started in 2007 by Cory Isaacson and Andy Grove who had been working on developing new database technologies for a long time. Soon, codeFutures had 5 of the top 50 Facebook apps using our dbShards product and we became the leader in scaling multi-terabyte MySQL databases. codeFutures was also a great company to work for, built on a core set of values that we continue to expand on today. We obsess about building our distributed culture that starts with honesty and integrity as a team and with our customers.\r\n\r\nSince the CodeFutures name will no longer be in use, we have shut down the www.codefutures.com website. <a href=\"http://www.dbShards.com\" target=\"_blank\">dbShards.com</a> will continue to be used as a product portal for dbShards ongoing. www.AgilData.com will be our primary website.\r\n\r\nWe have also made some changes to our product roadmap. We will be focusing primarily on the AgilData platform which will include dbShards as part of our mission to develop industry leading data infrastructure solutions. However, Firestorm and MapDB are no longer supported.\r\n\r\n<span class=\"message_content\">The stage is set for AgilData to continue to innovate and expand the value we bring to customers building new value streams from their data, shortening development cycles and ultimately reduce their operational load. </span>\r\n\r\n<span class=\"message_content\">If you are a developer trying to get more out of your data <a href=\"http://www.agildata.com/join-the-agildata-beta-here/\">join the beta</a> or give us a shout to see how we can make it happen.</span>', 'AgilData is the new CodeFutures!', '', 'inherit', 'closed', 'closed', '', '409-revision-v1', '', '', '2015-10-23 12:10:28', '2015-10-23 18:10:28', '', '409', 'http://www.agildata.com/409-revision-v1/', '0', 'revision', '', '0');
INSERT INTO `wpag_posts` VALUES('424', '7', '2015-10-23 12:10:55', '2015-10-23 18:10:55', '<h3>AgilData is the new CodeFutures!</h3>\r\nTo say that we are the same company with a new name couldn’t be more true and with our new mission and an expanded team we are excited to carry the CodeFutures torch that still burns bright.\r\n\r\nStart-ups come and go and success can be measured in many ways but most would agree that longevity and powering mission critical apps for your customers are at the top of the list. CodeFutures was started in 2007 by Cory Isaacson and Andy Grove who had been working on developing new database technologies for a long time. Soon, CodeFutures had 5 of the top 50 Facebook apps using our dbShards product and we became the leader in scaling multi-terabyte MySQL databases. CodeFutures was also a great company to work for, built on a core set of values that we continue to expand on today. We obsess about building our distributed culture that starts with honesty and integrity as a team and with our customers.\r\n\r\nSince the CodeFutures name will no longer be in use, we have shut down the www.codefutures.com website. <a href=\"http://www.dbShards.com\" target=\"_blank\">dbShards.com</a> will continue to be used as a product portal for dbShards ongoing. www.AgilData.com will be our primary website.\r\n\r\nWe have also made some changes to our product roadmap. We will be focusing primarily on the AgilData platform which will include dbShards as part of our mission to develop industry leading data infrastructure solutions. However, Firestorm and MapDB are no longer supported.\r\n\r\n<span class=\"message_content\">The stage is set for AgilData to continue to innovate and expand the value we bring to customers building new value streams from their data, shortening development cycles and ultimately reduce their operational load. </span>\r\n\r\n<span class=\"message_content\">If you are a developer trying to get more out of your data <a href=\"http://www.agildata.com/join-the-agildata-beta-here/\">join the beta</a> or give us a shout to see how we can make it happen.</span>', 'AgilData is the new CodeFutures!', '', 'inherit', 'closed', 'closed', '', '409-revision-v1', '', '', '2015-10-23 12:10:55', '2015-10-23 18:10:55', '', '409', 'http://www.agildata.com/409-revision-v1/', '0', 'revision', '', '0');
INSERT INTO `wpag_posts` VALUES('426', '5', '2015-10-23 17:05:53', '2015-10-23 23:05:53', '<h3>AgilData is the new CodeFutures!</h3>\r\nWhile start-ups come and go, success may be measured in many ways.  For numerous customers, one that powered their mission critical apps over eight years, tops their list.  CodeFutures was started in 2007 by longtime database technology developers Cory Isaacson and Andy Grove.\r\n\r\nSoon, CodeFutures had 5 of the top 50 Facebook apps using our dbShards product and we became the leader in scaling multi-terabyte MySQL databases. CodeFutures was also a great company to work for, built on a core set of values that we continue to expand on today. We continue to obsess about building a distributed culture that starts with honesty and integrity as a team and with our customers.\r\n\r\nSince the CodeFutures name will no longer be in use, we have shut down the <a href=\"http://www.codefutures.com/\">www.codefutures.com</a> website. <a href=\"http://www.dbshards.com/\">dbShards.com</a> will continue to be used as a product portal for dbShards ongoing. <a href=\"http://www.agildata.com/\">www.AgilData.com</a> will be our primary website.\r\n\r\nWe have also made some changes to our product roadmap. We will be focusing primarily on the AgilData platform which will include dbShards as part of our mission to develop industry leading data infrastructure solutions. However, Firestorm and MapDB are no longer supported.\r\n\r\nThe stage is set for AgilData to continue to innovate and expand the value we bring to customers building new value streams from their data, shortening development cycles and ultimately reduce their operational load.\r\n\r\nTo say that we are the same company, with a new name, couldn’t be more true.  With our new mission, and an expanded team, we’re excited to carry the CodeFutures torch, still burning brightly.\r\n\r\nIf you are a developer trying to get more out of your data <a href=\"http://www.agildata.com/join-the-agildata-beta-here/\">join the beta</a> or give us a shout to see how we can make it happen.\r\n\r\n&nbsp;', 'AgilData is the new CodeFutures!', '', 'inherit', 'closed', 'closed', '', '409-revision-v1', '', '', '2015-10-23 17:05:53', '2015-10-23 23:05:53', '', '409', 'http://www.agildata.com/409-revision-v1/', '0', 'revision', '', '0');
INSERT INTO `wpag_posts` VALUES('425', '5', '2015-10-23 12:19:56', '2015-10-23 18:19:56', '<h3>AgilData is the new CodeFutures!</h3>\r\nTo say that we are the same company with a new name couldn’t be more true and with our new mission and an expanded team we are excited to carry the CodeFutures torch that still burns bright.\r\n\r\nStart-ups come and go and success can be measured in many ways but most would agree that longevity and powering mission critical apps for your customers are at the top of the list. CodeFutures was started in 2007 by Cory Isaacson and Andy Grove who had been working on developing new database technologies for a long time. Soon, CodeFutures had 5 of the top 50 Facebook apps using our dbShards product and we became the leader in scaling multi-terabyte MySQL databases. CodeFutures was also a great company to work for, built on a core set of values that we continue to expand on today. <span class=\"message_content\">We continue to obsess about building a distributed culture that starts with honesty and integrity as a team and with our customers. </span>\r\n\r\nSince the CodeFutures name will no longer be in use, we have shut down the www.codefutures.com website. <a href=\"http://www.dbShards.com\" target=\"_blank\">dbShards.com</a> will continue to be used as a product portal for dbShards ongoing. www.AgilData.com will be our primary website.\r\n\r\nWe have also made some changes to our product roadmap. We will be focusing primarily on the AgilData platform which will include dbShards as part of our mission to develop industry leading data infrastructure solutions. However, Firestorm and MapDB are no longer supported.\r\n\r\n<span class=\"message_content\">The stage is set for AgilData to continue to innovate and expand the value we bring to customers building new value streams from their data, shortening development cycles and ultimately reduce their operational load. </span>\r\n\r\n<span class=\"message_content\">If you are a developer trying to get more out of your data <a href=\"http://www.agildata.com/join-the-agildata-beta-here/\">join the beta</a> or give us a shout to see how we can make it happen.</span>', 'AgilData is the new CodeFutures!', '', 'inherit', 'closed', 'closed', '', '409-revision-v1', '', '', '2015-10-23 12:19:56', '2015-10-23 18:19:56', '', '409', 'http://www.agildata.com/409-revision-v1/', '0', 'revision', '', '0');
INSERT INTO `wpag_posts` VALUES('429', '5', '2015-10-29 12:39:43', '2015-10-29 18:39:43', '<strong>AgilData featured at Cloud Expo West for second consecutive year.</strong>\r\n\r\n<a href=\"http://www.cloudcomputingexpo.com/\" target=\"_blank\">Cloud Expo West</a> is happening at the Santa Clara Convention Center November 3-5, 2015. In addition to our AgilData booth (#423), you can catch Dan Lynn, CEO, speaking at two sessions.\r\n<h3 class=\"size-15\"><strong>AgilData Sneak Peek: How I Learned to Stop Worrying and Evolve with OnDemand Schemas</strong></h3>\r\n<p class=\"size-15\"><strong>Tuesday, November 3rd: 1:55-2:35pm</strong></p>\r\nThe web app is Agile. The REST API is Agile. The testing and planning are Agile. But alas,Data infrastructures certainly are not. Once an application matures, changing the shape or indexing scheme of data often forces at best a topdown planning exercise and at worst includes schema changes which force downtime. The time has come for a new approach that fundamentally advances the agility of distributed data infrastructures.\r\n\r\nCome learn about a new solution to the problems faced by software organizations as their products become successful and the data grows beyond the initial scope of the database,whether it starts out as relational SQL, NoSQL, or somewhere inbetween.\r\n\r\nAs the user base of a software system grows, the data infrastructure is forced to evolve to meet the needs of new features, increasing the variety of data with ever larger data volumes and higher query velocity. One thing we know about evolution is that it doesn’t always take the simple path or produce simple results. Data systems often grow by adding technology: a little NoSQL here, a message queue there, a Hadoop cluster hiding in the corner. This growing complexity slows down product development and challenges technology teams to ramp up entirely new skillsets reactively.\r\n\r\nIs this your future or is this your today? Learn how you can use AgilData to address these challenges, with a truly agile infrastructure that allows your organization to store, scale and access the data it needs. AgilData is a real time computation engine and distributed data storage platform with an emphasis on a fantastic developer experience.\r\n\r\nWe will show you how an “Agile data infrastructure\", should handle everything from OLTP to realtime analytics to historical reporting. A truly Agile approach allows data to be accessed as an exact match to application requirements. As application needs change, the AgilData platform can respond rapidly and dynamically evolve the schema, data distribution and access patterns to support high scalability with high performance — while easing the burden of the application developer and database administrators by versioning data structures as well as code.\r\n\r\nWe will also highlight real a realworld use case from a large enterprise organization that was able to leverage the AgilData approach to rapidly accelerate the pace of product development while actually simplifying operations. We’ll make you a believer in the fundamental tenants of an AgilData infrastructure, namely that it must be Simple, it must be Scaleable, it must be Streaming, and, most importantly, it must be SQL.\r\n<h3 class=\"size-15\"><strong>Get your Flow On. Building Data Flows Simply with AgilData</strong></h3>\r\n<p class=\"size-15\"><strong>Tuesday, November 3rd: 4:00-4:35pm</strong></p>\r\nLearn how to design and diagram and stream processing data flow. Using AgilData we will demonstrate how easy it is to build a data processing flow and track it across the query execution layer. It\'s kind of like seeing code in the Matrix but cooler.\r\n<h2>Get a FREE VIP Gold Pass to Cloud Expo</h2>\r\n1. <a href=\"http://agildata.cmail20.com/t/i-l-thjhjuy-jlykakdk-i/\" target=\"_blank\">Go to this registration page</a>\r\n2. Fill out the Attendee Information form\r\n3. Select the VIP Gold Pass Registration Option (located on page 3 - “Registration Plan”)\r\n4. Enter the Discount Code: <strong>agildataVIPgold</strong>\r\n5. The price will re-set to $0\r\n\r\nThe VIP Gold registration gives you Full Conference Access for all 3 days – November 3-5. You can choose from 125+ breakout sessions, general sessions, industry keynotes, and \"Power Panels\" and of course attend the Expo Floor. <em>(pass does not include lunch or conference bag.)</em>', 'AgilData Featured at Cloud Expo West 2015', '', 'publish', 'open', 'open', '', 'agildata-featured-at-cloud-expo-west-2015', '', '', '2015-10-29 12:49:28', '2015-10-29 18:49:28', '', '0', 'http://www.agildata.com/?p=429', '0', 'post', '', '0');
INSERT INTO `wpag_posts` VALUES('430', '5', '2015-10-29 12:14:03', '2015-10-29 18:14:03', '', 'Cloud Expo Logo', '', 'inherit', 'open', 'closed', '', 'cloud-expo-logo', '', '', '2015-10-29 12:14:03', '2015-10-29 18:14:03', '', '429', 'http://www.agildata.com/wp-content/uploads/2015/10/Cloud-Expo-Logo.jpg', '0', 'attachment', 'image/jpeg', '0');
INSERT INTO `wpag_posts` VALUES('431', '5', '2015-10-29 12:17:31', '2015-10-29 18:17:31', '<a href=\"http://www.agildata.com/wp-content/uploads/2015/10/Cloud-Expo-Logo.jpg\"><img class=\"size-full wp-image-430 aligncenter\" src=\"http://www.agildata.com/wp-content/uploads/2015/10/Cloud-Expo-Logo.jpg\" alt=\"Cloud Expo Logo\" width=\"417\" height=\"174\" /></a>\r\n\r\n<a href=\"http://agildata.cmail2.com/t/i-i-thjhjuy-l-y/\">AgilData </a>will be featured at Cloud Expo West at the Santa Clara Convention Center November 3-5, 2015. In addition to our booth (#423), you can catch Dan Lynn, CEO, speaking at two sessions.\r\n<p class=\"size-15\"><strong>Tuesday, November 3rd: 1:55-2:35pm</strong>\r\nAgilData Sneak Peek: How I Learned to Stop Worrying and Evolve with OnDemand Schemas  <a href=\"http://agildata.cmail20.com/t/i-l-thjhjuy-jlykakdk-j/\">Click for full session description</a></p>\r\n<p class=\"size-15\"><strong>Tuesday, November 3rd: 4:00-4:35pm</strong>\r\nGet your Flow On. Building Data Flows Simply with AgilData\r\n<a href=\"http://agildata.cmail20.com/t/i-l-thjhjuy-jlykakdk-t/\">Click for full session description</a></p>\r\n<p class=\"size-15\">This is the</p>\r\n<p class=\"size-15\"></p>', 'AgilData Featured at Cloud Expo West 2015', '', 'inherit', 'closed', 'closed', '', '429-revision-v1', '', '', '2015-10-29 12:17:31', '2015-10-29 18:17:31', '', '429', 'http://www.agildata.com/429-revision-v1/', '0', 'revision', '', '0');
INSERT INTO `wpag_posts` VALUES('435', '5', '2015-10-29 12:31:59', '2015-10-29 18:31:59', '<a href=\"http://agildata.cmail2.com/t/i-i-thjhjuy-l-y/\">AgilData </a>will be featured at Cloud Expo West at the Santa Clara Convention Center November 3-5, 2015. In addition to our booth (#423), you can catch Dan Lynn, CEO, speaking at two sessions.\r\n<p class=\"size-15\"><strong>Tuesday, November 3rd: 1:55-2:35pm</strong>\r\n<em>AgilData Sneak Peek: How I Learned to Stop Worrying and Evolve with OnDemand Schemas</em></p>\r\nThe web app is Agile. The REST API is Agile. The testing and planning are Agile. But alas,Data infrastructures certainly are not. Once an application matures, changing the shape or indexing scheme of data often forces at best a topdown planning exercise and at worst includes schema changes which force downtime. The time has come for a new approach that fundamentally advances the agility of distributed data infrastructures.\r\n\r\nCome learn about a new solution to the problems faced by software organizations as their products become successful and the data grows beyond the initial scope of the database,whether it starts out as relational SQL, NoSQL, or somewhere inbetween.\r\n\r\nAs the user base of a software system grows, the data infrastructure is forced to evolve to meet the needs of new features, increasing the variety of data with ever larger data volumes and higher query velocity. One thing we know about evolution is that it doesn’t always take the simple path or produce simple results. Data systems often grow by adding technology: a little NoSQL here, a message queue there, a Hadoop cluster hiding in the corner. This growing complexity slows down product development and challenges technology teams to ramp up entirely new skillsets reactively.\r\n\r\nIs this your future or is this your today? Learn how you can use AgilData to address these challenges, with a truly agile infrastructure that allows your organization to store, scale and access the data it needs. AgilData is a real time computation engine and distributed data storage platform with an emphasis on a fantastic developer experience.\r\n\r\nWe will show you how an “Agile data infrastructure\", should handle everything from OLTP to realtime analytics to historical reporting. A truly Agile approach allows data to be accessed as an exact match to application requirements. As application needs change, the AgilData platform can respond rapidly and dynamically evolve the schema, data distribution and access patterns to support high scalability with high performance — while easing the burden of the application developer and database administrators by versioning data structures as well as code.\r\n\r\nWe will also highlight real a realworld use case from a large enterprise organization that was able to leverage the AgilData approach to rapidly accelerate the pace of product development while actually simplifying operations. We’ll make you a believer in the fundamental tenants of an AgilData infrastructure, namely that it must be Simple, it must be Scaleable, it must be Streaming, and, most importantly, it must be SQL.\r\n<p class=\"size-15\"><strong>Tuesday, November 3rd: 4:00-4:35pm</strong>\r\n<em> Get your Flow On. Building Data Flows Simply with AgilData</em></p>\r\nLearn how to design and diagram and stream processing data flow. Using AgilData we will demonstrate how easy it is to build a data processing flow and track it across the query execution layer. It\'s kind of like seeing code in the Matrix but cooler.\r\n<p class=\"size-15\">This is the</p>\r\n<p class=\"size-15\"></p>', 'AgilData Featured at Cloud Expo West 2015', '', 'inherit', 'closed', 'closed', '', '429-revision-v1', '', '', '2015-10-29 12:31:59', '2015-10-29 18:31:59', '', '429', 'http://www.agildata.com/429-revision-v1/', '0', 'revision', '', '0');
INSERT INTO `wpag_posts` VALUES('432', '5', '2015-10-29 12:21:36', '2015-10-29 18:21:36', '<a href=\"http://www.agildata.com/wp-content/uploads/2015/10/Cloud-Expo-Logo.jpg\"><img class=\"size-full wp-image-430 aligncenter\" src=\"http://www.agildata.com/wp-content/uploads/2015/10/Cloud-Expo-Logo.jpg\" alt=\"Cloud Expo Logo\" width=\"417\" height=\"174\" /></a>\r\n\r\n<a href=\"http://agildata.cmail2.com/t/i-i-thjhjuy-l-y/\">AgilData </a>will be featured at Cloud Expo West at the Santa Clara Convention Center November 3-5, 2015. In addition to our booth (#423), you can catch Dan Lynn, CEO, speaking at two sessions.\r\n<p class=\"size-15\"><strong>Tuesday, November 3rd: 1:55-2:35pm</strong>\r\n<em>AgilData Sneak Peek:How I Learned to Stop Worrying and Evolve with OnDemand Schemas</em>\r\n\r\nThe web app is Agile. The REST API is Agile. The testing and planning are Agile. But alas,Data infrastructures certainly are not. Once an application matures, changing the shape or indexing scheme of data often forces at best a topdown planning exercise and at worst includes schema changes which force downtime. The time has come for a new approach that fundamentally advances the agility of distributed data infrastructures.\r\n\r\nCome learn about a new solution to the problems faced by software organizations as their products become successful and the data grows beyond the initial scope of the database,whether it starts out as relational SQL, NoSQL, or somewhere inbetween.\r\n\r\nAs the user base of a software system grows, the data infrastructure is forced to evolve to meet the needs of new features, increasing the variety of data with ever larger data volumes and higher query velocity. One thing we know about evolution is that it doesn’t always take the simple path or produce simple results. Data systems often grow by adding technology: a little NoSQL here, a message queue there, a Hadoop cluster hiding in the corner. This growing complexity slows down product development and challenges technology teams to ramp up entirely new skillsets reactively.\r\n\r\nIs this your future or is this your today? Learn how you can use AgilData to address these challenges, with a truly agile infrastructure that allows your organization to store, scale and access the data it needs. AgilData is a real time computation engine and distributed data storage platform with an emphasis on a fantastic developer experience.\r\n\r\nWe will show you how an “Agile data infrastructure\", should handle everything from OLTP to realtime analytics to historical reporting. A truly Agile approach allows data to be accessed as an exact match to application requirements. As application needs change, the AgilData platform can respond rapidly and dynamically evolve the schema, data distribution and access patterns to support high scalability with high performance — while easing the burden of the application developer and database administrators by versioning data structures as well as code.\r\n\r\nWe will also highlight real a realworld use case from a large enterprise organization that was able to leverage the AgilData approach to rapidly accelerate the pace of product development while actually simplifying operations. We’ll make you a believer in the fundamental tenants of an AgilData infrastructure, namely that it must be Simple, it must be Scaleable, it must be Streaming, and, most importantly, it must be SQL.</p>\r\n<p class=\"size-15\"><strong>Tuesday, November 3rd: 4:00-4:35pm</strong>\r\n<em> Get your Flow On. Building Data Flows Simply with AgilData</em>\r\n\r\nLearn how to design and diagram and stream processing data flow. Using AgilData we will demonstrate how easy it is to build a data processing flow and track it across the query execution layer. It\'s kind of like seeing code in the Matrix but cooler.</p>\r\n<p class=\"size-15\">This is the</p>\r\n<p class=\"size-15\"></p>', 'AgilData Featured at Cloud Expo West 2015', '', 'inherit', 'closed', 'closed', '', '429-revision-v1', '', '', '2015-10-29 12:21:36', '2015-10-29 18:21:36', '', '429', 'http://www.agildata.com/429-revision-v1/', '0', 'revision', '', '0');
INSERT INTO `wpag_posts` VALUES('433', '5', '2015-10-29 12:21:44', '2015-10-29 18:21:44', '<a href=\"http://www.agildata.com/wp-content/uploads/2015/10/Cloud-Expo-Logo.jpg\"><img class=\"size-full wp-image-430 aligncenter\" src=\"http://www.agildata.com/wp-content/uploads/2015/10/Cloud-Expo-Logo.jpg\" alt=\"Cloud Expo Logo\" width=\"417\" height=\"174\" /></a>\r\n\r\n<a href=\"http://agildata.cmail2.com/t/i-i-thjhjuy-l-y/\">AgilData </a>will be featured at Cloud Expo West at the Santa Clara Convention Center November 3-5, 2015. In addition to our booth (#423), you can catch Dan Lynn, CEO, speaking at two sessions.\r\n<p class=\"size-15\"><strong>Tuesday, November 3rd: 1:55-2:35pm</strong>\r\n<em>AgilData Sneak Peek:How I Learned to Stop Worrying and Evolve with OnDemand Schemas</em></p>\r\nThe web app is Agile. The REST API is Agile. The testing and planning are Agile. But alas,Data infrastructures certainly are not. Once an application matures, changing the shape or indexing scheme of data often forces at best a topdown planning exercise and at worst includes schema changes which force downtime. The time has come for a new approach that fundamentally advances the agility of distributed data infrastructures.\r\n\r\nCome learn about a new solution to the problems faced by software organizations as their products become successful and the data grows beyond the initial scope of the database,whether it starts out as relational SQL, NoSQL, or somewhere inbetween.\r\n\r\nAs the user base of a software system grows, the data infrastructure is forced to evolve to meet the needs of new features, increasing the variety of data with ever larger data volumes and higher query velocity. One thing we know about evolution is that it doesn’t always take the simple path or produce simple results. Data systems often grow by adding technology: a little NoSQL here, a message queue there, a Hadoop cluster hiding in the corner. This growing complexity slows down product development and challenges technology teams to ramp up entirely new skillsets reactively.\r\n\r\nIs this your future or is this your today? Learn how you can use AgilData to address these challenges, with a truly agile infrastructure that allows your organization to store, scale and access the data it needs. AgilData is a real time computation engine and distributed data storage platform with an emphasis on a fantastic developer experience.\r\n\r\nWe will show you how an “Agile data infrastructure\", should handle everything from OLTP to realtime analytics to historical reporting. A truly Agile approach allows data to be accessed as an exact match to application requirements. As application needs change, the AgilData platform can respond rapidly and dynamically evolve the schema, data distribution and access patterns to support high scalability with high performance — while easing the burden of the application developer and database administrators by versioning data structures as well as code.\r\n\r\nWe will also highlight real a realworld use case from a large enterprise organization that was able to leverage the AgilData approach to rapidly accelerate the pace of product development while actually simplifying operations. We’ll make you a believer in the fundamental tenants of an AgilData infrastructure, namely that it must be Simple, it must be Scaleable, it must be Streaming, and, most importantly, it must be SQL.\r\n<p class=\"size-15\"><strong>Tuesday, November 3rd: 4:00-4:35pm</strong>\r\n<em> Get your Flow On. Building Data Flows Simply with AgilData</em></p>\r\nLearn how to design and diagram and stream processing data flow. Using AgilData we will demonstrate how easy it is to build a data processing flow and track it across the query execution layer. It\'s kind of like seeing code in the Matrix but cooler.\r\n<p class=\"size-15\">This is the</p>\r\n<p class=\"size-15\"></p>', 'AgilData Featured at Cloud Expo West 2015', '', 'inherit', 'closed', 'closed', '', '429-revision-v1', '', '', '2015-10-29 12:21:44', '2015-10-29 18:21:44', '', '429', 'http://www.agildata.com/429-revision-v1/', '0', 'revision', '', '0');
INSERT INTO `wpag_posts` VALUES('434', '5', '2015-10-29 12:31:26', '2015-10-29 18:31:26', '<a href=\"http://www.agildata.com/wp-content/uploads/2015/10/Cloud-Expo-Logo.jpg\"><img class=\"size-full wp-image-430 aligncenter\" src=\"http://www.agildata.com/wp-content/uploads/2015/10/Cloud-Expo-Logo.jpg\" alt=\"Cloud Expo Logo\" width=\"417\" height=\"174\" /></a>\r\n\r\n<a href=\"http://agildata.cmail2.com/t/i-i-thjhjuy-l-y/\">AgilData </a>will be featured at Cloud Expo West at the Santa Clara Convention Center November 3-5, 2015. In addition to our booth (#423), you can catch Dan Lynn, CEO, speaking at two sessions.\r\n<p class=\"size-15\"><strong>Tuesday, November 3rd: 1:55-2:35pm</strong>\r\n<em>AgilData Sneak Peek: How I Learned to Stop Worrying and Evolve with OnDemand Schemas</em></p>\r\nThe web app is Agile. The REST API is Agile. The testing and planning are Agile. But alas,Data infrastructures certainly are not. Once an application matures, changing the shape or indexing scheme of data often forces at best a topdown planning exercise and at worst includes schema changes which force downtime. The time has come for a new approach that fundamentally advances the agility of distributed data infrastructures.\r\n\r\nCome learn about a new solution to the problems faced by software organizations as their products become successful and the data grows beyond the initial scope of the database,whether it starts out as relational SQL, NoSQL, or somewhere inbetween.\r\n\r\nAs the user base of a software system grows, the data infrastructure is forced to evolve to meet the needs of new features, increasing the variety of data with ever larger data volumes and higher query velocity. One thing we know about evolution is that it doesn’t always take the simple path or produce simple results. Data systems often grow by adding technology: a little NoSQL here, a message queue there, a Hadoop cluster hiding in the corner. This growing complexity slows down product development and challenges technology teams to ramp up entirely new skillsets reactively.\r\n\r\nIs this your future or is this your today? Learn how you can use AgilData to address these challenges, with a truly agile infrastructure that allows your organization to store, scale and access the data it needs. AgilData is a real time computation engine and distributed data storage platform with an emphasis on a fantastic developer experience.\r\n\r\nWe will show you how an “Agile data infrastructure\", should handle everything from OLTP to realtime analytics to historical reporting. A truly Agile approach allows data to be accessed as an exact match to application requirements. As application needs change, the AgilData platform can respond rapidly and dynamically evolve the schema, data distribution and access patterns to support high scalability with high performance — while easing the burden of the application developer and database administrators by versioning data structures as well as code.\r\n\r\nWe will also highlight real a realworld use case from a large enterprise organization that was able to leverage the AgilData approach to rapidly accelerate the pace of product development while actually simplifying operations. We’ll make you a believer in the fundamental tenants of an AgilData infrastructure, namely that it must be Simple, it must be Scaleable, it must be Streaming, and, most importantly, it must be SQL.\r\n<p class=\"size-15\"><strong>Tuesday, November 3rd: 4:00-4:35pm</strong>\r\n<em> Get your Flow On. Building Data Flows Simply with AgilData</em></p>\r\nLearn how to design and diagram and stream processing data flow. Using AgilData we will demonstrate how easy it is to build a data processing flow and track it across the query execution layer. It\'s kind of like seeing code in the Matrix but cooler.\r\n<p class=\"size-15\">This is the</p>\r\n<p class=\"size-15\"></p>', 'AgilData Featured at Cloud Expo West 2015', '', 'inherit', 'closed', 'closed', '', '429-revision-v1', '', '', '2015-10-29 12:31:26', '2015-10-29 18:31:26', '', '429', 'http://www.agildata.com/429-revision-v1/', '0', 'revision', '', '0');
INSERT INTO `wpag_posts` VALUES('436', '5', '2015-10-29 12:32:29', '2015-10-29 18:32:29', '<a href=\"http://agildata.cmail2.com/t/i-i-thjhjuy-l-y/\">AgilData </a>will be featured at Cloud Expo West at the Santa Clara Convention Center November 3-5, 2015. In addition to our booth (#423), you can catch Dan Lynn, CEO, speaking at two sessions.\r\n<h3 class=\"size-15\"><strong>Tuesday, November 3rd: 1:55-2:35pm</strong></h3>\r\n<p class=\"size-15\"><em>AgilData Sneak Peek: How I Learned to Stop Worrying and Evolve with OnDemand Schemas</em></p>\r\nThe web app is Agile. The REST API is Agile. The testing and planning are Agile. But alas,Data infrastructures certainly are not. Once an application matures, changing the shape or indexing scheme of data often forces at best a topdown planning exercise and at worst includes schema changes which force downtime. The time has come for a new approach that fundamentally advances the agility of distributed data infrastructures.\r\n\r\nCome learn about a new solution to the problems faced by software organizations as their products become successful and the data grows beyond the initial scope of the database,whether it starts out as relational SQL, NoSQL, or somewhere inbetween.\r\n\r\nAs the user base of a software system grows, the data infrastructure is forced to evolve to meet the needs of new features, increasing the variety of data with ever larger data volumes and higher query velocity. One thing we know about evolution is that it doesn’t always take the simple path or produce simple results. Data systems often grow by adding technology: a little NoSQL here, a message queue there, a Hadoop cluster hiding in the corner. This growing complexity slows down product development and challenges technology teams to ramp up entirely new skillsets reactively.\r\n\r\nIs this your future or is this your today? Learn how you can use AgilData to address these challenges, with a truly agile infrastructure that allows your organization to store, scale and access the data it needs. AgilData is a real time computation engine and distributed data storage platform with an emphasis on a fantastic developer experience.\r\n\r\nWe will show you how an “Agile data infrastructure\", should handle everything from OLTP to realtime analytics to historical reporting. A truly Agile approach allows data to be accessed as an exact match to application requirements. As application needs change, the AgilData platform can respond rapidly and dynamically evolve the schema, data distribution and access patterns to support high scalability with high performance — while easing the burden of the application developer and database administrators by versioning data structures as well as code.\r\n\r\nWe will also highlight real a realworld use case from a large enterprise organization that was able to leverage the AgilData approach to rapidly accelerate the pace of product development while actually simplifying operations. We’ll make you a believer in the fundamental tenants of an AgilData infrastructure, namely that it must be Simple, it must be Scaleable, it must be Streaming, and, most importantly, it must be SQL.\r\n<p class=\"size-15\"><strong>Tuesday, November 3rd: 4:00-4:35pm</strong>\r\n<em> Get your Flow On. Building Data Flows Simply with AgilData</em></p>\r\nLearn how to design and diagram and stream processing data flow. Using AgilData we will demonstrate how easy it is to build a data processing flow and track it across the query execution layer. It\'s kind of like seeing code in the Matrix but cooler.\r\n<p class=\"size-15\">This is the</p>\r\n<p class=\"size-15\"></p>', 'AgilData Featured at Cloud Expo West 2015', '', 'inherit', 'closed', 'closed', '', '429-revision-v1', '', '', '2015-10-29 12:32:29', '2015-10-29 18:32:29', '', '429', 'http://www.agildata.com/429-revision-v1/', '0', 'revision', '', '0');
INSERT INTO `wpag_posts` VALUES('437', '5', '2015-10-29 12:32:56', '2015-10-29 18:32:56', '<a href=\"http://agildata.cmail2.com/t/i-i-thjhjuy-l-y/\">AgilData </a>will be featured at Cloud Expo West at the Santa Clara Convention Center November 3-5, 2015. In addition to our booth (#423), you can catch Dan Lynn, CEO, speaking at two sessions.\r\n<h3 class=\"size-15\"><strong>Tuesday, November 3rd: 1:55-2:35pm</strong></h3>\r\n<p class=\"size-15\"><strong>AgilData Sneak Peek: How I Learned to Stop Worrying and Evolve with OnDemand Schemas</strong></p>\r\nThe web app is Agile. The REST API is Agile. The testing and planning are Agile. But alas,Data infrastructures certainly are not. Once an application matures, changing the shape or indexing scheme of data often forces at best a topdown planning exercise and at worst includes schema changes which force downtime. The time has come for a new approach that fundamentally advances the agility of distributed data infrastructures.\r\n\r\nCome learn about a new solution to the problems faced by software organizations as their products become successful and the data grows beyond the initial scope of the database,whether it starts out as relational SQL, NoSQL, or somewhere inbetween.\r\n\r\nAs the user base of a software system grows, the data infrastructure is forced to evolve to meet the needs of new features, increasing the variety of data with ever larger data volumes and higher query velocity. One thing we know about evolution is that it doesn’t always take the simple path or produce simple results. Data systems often grow by adding technology: a little NoSQL here, a message queue there, a Hadoop cluster hiding in the corner. This growing complexity slows down product development and challenges technology teams to ramp up entirely new skillsets reactively.\r\n\r\nIs this your future or is this your today? Learn how you can use AgilData to address these challenges, with a truly agile infrastructure that allows your organization to store, scale and access the data it needs. AgilData is a real time computation engine and distributed data storage platform with an emphasis on a fantastic developer experience.\r\n\r\nWe will show you how an “Agile data infrastructure\", should handle everything from OLTP to realtime analytics to historical reporting. A truly Agile approach allows data to be accessed as an exact match to application requirements. As application needs change, the AgilData platform can respond rapidly and dynamically evolve the schema, data distribution and access patterns to support high scalability with high performance — while easing the burden of the application developer and database administrators by versioning data structures as well as code.\r\n\r\nWe will also highlight real a realworld use case from a large enterprise organization that was able to leverage the AgilData approach to rapidly accelerate the pace of product development while actually simplifying operations. We’ll make you a believer in the fundamental tenants of an AgilData infrastructure, namely that it must be Simple, it must be Scaleable, it must be Streaming, and, most importantly, it must be SQL.\r\n<p class=\"size-15\"><strong>Tuesday, November 3rd: 4:00-4:35pm</strong>\r\n<em> Get your Flow On. Building Data Flows Simply with AgilData</em></p>\r\nLearn how to design and diagram and stream processing data flow. Using AgilData we will demonstrate how easy it is to build a data processing flow and track it across the query execution layer. It\'s kind of like seeing code in the Matrix but cooler.\r\n<p class=\"size-15\">This is the</p>\r\n<p class=\"size-15\"></p>', 'AgilData Featured at Cloud Expo West 2015', '', 'inherit', 'closed', 'closed', '', '429-revision-v1', '', '', '2015-10-29 12:32:56', '2015-10-29 18:32:56', '', '429', 'http://www.agildata.com/429-revision-v1/', '0', 'revision', '', '0');
INSERT INTO `wpag_posts` VALUES('439', '5', '2015-10-29 12:34:50', '2015-10-29 18:34:50', '<a href=\"http://agildata.cmail2.com/t/i-i-thjhjuy-l-y/\">AgilData </a>will be featured at Cloud Expo West at the Santa Clara Convention Center November 3-5, 2015. In addition to our booth (#423), you can catch Dan Lynn, CEO, speaking at two sessions.\r\n<h3 class=\"size-15\"><strong>Tuesday, November 3rd: 1:55-2:35pm</strong></h3>\r\n<p class=\"size-15\"><strong>AgilData Sneak Peek: How I Learned to Stop Worrying and Evolve with OnDemand Schemas</strong></p>\r\nThe web app is Agile. The REST API is Agile. The testing and planning are Agile. But alas,Data infrastructures certainly are not. Once an application matures, changing the shape or indexing scheme of data often forces at best a topdown planning exercise and at worst includes schema changes which force downtime. The time has come for a new approach that fundamentally advances the agility of distributed data infrastructures.\r\n\r\nCome learn about a new solution to the problems faced by software organizations as their products become successful and the data grows beyond the initial scope of the database,whether it starts out as relational SQL, NoSQL, or somewhere inbetween.\r\n\r\nAs the user base of a software system grows, the data infrastructure is forced to evolve to meet the needs of new features, increasing the variety of data with ever larger data volumes and higher query velocity. One thing we know about evolution is that it doesn’t always take the simple path or produce simple results. Data systems often grow by adding technology: a little NoSQL here, a message queue there, a Hadoop cluster hiding in the corner. This growing complexity slows down product development and challenges technology teams to ramp up entirely new skillsets reactively.\r\n\r\nIs this your future or is this your today? Learn how you can use AgilData to address these challenges, with a truly agile infrastructure that allows your organization to store, scale and access the data it needs. AgilData is a real time computation engine and distributed data storage platform with an emphasis on a fantastic developer experience.\r\n\r\nWe will show you how an “Agile data infrastructure\", should handle everything from OLTP to realtime analytics to historical reporting. A truly Agile approach allows data to be accessed as an exact match to application requirements. As application needs change, the AgilData platform can respond rapidly and dynamically evolve the schema, data distribution and access patterns to support high scalability with high performance — while easing the burden of the application developer and database administrators by versioning data structures as well as code.\r\n\r\nWe will also highlight real a realworld use case from a large enterprise organization that was able to leverage the AgilData approach to rapidly accelerate the pace of product development while actually simplifying operations. We’ll make you a believer in the fundamental tenants of an AgilData infrastructure, namely that it must be Simple, it must be Scaleable, it must be Streaming, and, most importantly, it must be SQL.\r\n<h3 class=\"size-15\"><strong>Tuesday, November 3rd: 4:00-4:35pm</strong></h3>\r\n<p class=\"size-15\"><strong>Get your Flow On. Building Data Flows Simply with AgilData</strong></p>\r\nLearn how to design and diagram and stream processing data flow. Using AgilData we will demonstrate how easy it is to build a data processing flow and track it across the query execution layer. It\'s kind of like seeing code in the Matrix but cooler.\r\n<h2 class=\"size-15\">Get A FREE Pass on us!</h2>\r\n<p class=\"size-15\"></p>', 'AgilData Featured at Cloud Expo West 2015', '', 'inherit', 'closed', 'closed', '', '429-revision-v1', '', '', '2015-10-29 12:34:50', '2015-10-29 18:34:50', '', '429', 'http://www.agildata.com/429-revision-v1/', '0', 'revision', '', '0');
INSERT INTO `wpag_posts` VALUES('438', '5', '2015-10-29 12:34:23', '2015-10-29 18:34:23', '<a href=\"http://agildata.cmail2.com/t/i-i-thjhjuy-l-y/\">AgilData </a>will be featured at Cloud Expo West at the Santa Clara Convention Center November 3-5, 2015. In addition to our booth (#423), you can catch Dan Lynn, CEO, speaking at two sessions.\r\n<h3 class=\"size-15\"><strong>Tuesday, November 3rd: 1:55-2:35pm</strong></h3>\r\n<p class=\"size-15\"><strong>AgilData Sneak Peek: How I Learned to Stop Worrying and Evolve with OnDemand Schemas</strong></p>\r\nThe web app is Agile. The REST API is Agile. The testing and planning are Agile. But alas,Data infrastructures certainly are not. Once an application matures, changing the shape or indexing scheme of data often forces at best a topdown planning exercise and at worst includes schema changes which force downtime. The time has come for a new approach that fundamentally advances the agility of distributed data infrastructures.\r\n\r\nCome learn about a new solution to the problems faced by software organizations as their products become successful and the data grows beyond the initial scope of the database,whether it starts out as relational SQL, NoSQL, or somewhere inbetween.\r\n\r\nAs the user base of a software system grows, the data infrastructure is forced to evolve to meet the needs of new features, increasing the variety of data with ever larger data volumes and higher query velocity. One thing we know about evolution is that it doesn’t always take the simple path or produce simple results. Data systems often grow by adding technology: a little NoSQL here, a message queue there, a Hadoop cluster hiding in the corner. This growing complexity slows down product development and challenges technology teams to ramp up entirely new skillsets reactively.\r\n\r\nIs this your future or is this your today? Learn how you can use AgilData to address these challenges, with a truly agile infrastructure that allows your organization to store, scale and access the data it needs. AgilData is a real time computation engine and distributed data storage platform with an emphasis on a fantastic developer experience.\r\n\r\nWe will show you how an “Agile data infrastructure\", should handle everything from OLTP to realtime analytics to historical reporting. A truly Agile approach allows data to be accessed as an exact match to application requirements. As application needs change, the AgilData platform can respond rapidly and dynamically evolve the schema, data distribution and access patterns to support high scalability with high performance — while easing the burden of the application developer and database administrators by versioning data structures as well as code.\r\n\r\nWe will also highlight real a realworld use case from a large enterprise organization that was able to leverage the AgilData approach to rapidly accelerate the pace of product development while actually simplifying operations. We’ll make you a believer in the fundamental tenants of an AgilData infrastructure, namely that it must be Simple, it must be Scaleable, it must be Streaming, and, most importantly, it must be SQL.\r\n<h3 class=\"size-15\"><strong>Tuesday, November 3rd: 4:00-4:35pm</strong></h3>\r\n<p class=\"size-15\"><strong>Get your Flow On. Building Data Flows Simply with AgilData</strong></p>\r\nLearn how to design and diagram and stream processing data flow. Using AgilData we will demonstrate how easy it is to build a data processing flow and track it across the query execution layer. It\'s kind of like seeing code in the Matrix but cooler.\r\n<h2 class=\"size-15\">Get A FREE Pass on us!</h2>\r\n<p class=\"size-15\"></p>\r\n<p class=\"size-15\"></p>\r\n<p class=\"size-15\"></p>', 'AgilData Featured at Cloud Expo West 2015', '', 'inherit', 'closed', 'closed', '', '429-revision-v1', '', '', '2015-10-29 12:34:23', '2015-10-29 18:34:23', '', '429', 'http://www.agildata.com/429-revision-v1/', '0', 'revision', '', '0');
INSERT INTO `wpag_posts` VALUES('440', '5', '2015-10-29 12:37:05', '2015-10-29 18:37:05', '<a href=\"http://agildata.cmail2.com/t/i-i-thjhjuy-l-y/\">AgilData </a>will be featured at Cloud Expo West at the Santa Clara Convention Center November 3-5, 2015. In addition to our booth (#423), you can catch Dan Lynn, CEO, speaking at two sessions.\r\n<h3 class=\"size-15\"><strong>Tuesday, November 3rd: 1:55-2:35pm</strong></h3>\r\n<p class=\"size-15\"><strong>AgilData Sneak Peek: How I Learned to Stop Worrying and Evolve with OnDemand Schemas</strong></p>\r\nThe web app is Agile. The REST API is Agile. The testing and planning are Agile. But alas,Data infrastructures certainly are not. Once an application matures, changing the shape or indexing scheme of data often forces at best a topdown planning exercise and at worst includes schema changes which force downtime. The time has come for a new approach that fundamentally advances the agility of distributed data infrastructures.\r\n\r\nCome learn about a new solution to the problems faced by software organizations as their products become successful and the data grows beyond the initial scope of the database,whether it starts out as relational SQL, NoSQL, or somewhere inbetween.\r\n\r\nAs the user base of a software system grows, the data infrastructure is forced to evolve to meet the needs of new features, increasing the variety of data with ever larger data volumes and higher query velocity. One thing we know about evolution is that it doesn’t always take the simple path or produce simple results. Data systems often grow by adding technology: a little NoSQL here, a message queue there, a Hadoop cluster hiding in the corner. This growing complexity slows down product development and challenges technology teams to ramp up entirely new skillsets reactively.\r\n\r\nIs this your future or is this your today? Learn how you can use AgilData to address these challenges, with a truly agile infrastructure that allows your organization to store, scale and access the data it needs. AgilData is a real time computation engine and distributed data storage platform with an emphasis on a fantastic developer experience.\r\n\r\nWe will show you how an “Agile data infrastructure\", should handle everything from OLTP to realtime analytics to historical reporting. A truly Agile approach allows data to be accessed as an exact match to application requirements. As application needs change, the AgilData platform can respond rapidly and dynamically evolve the schema, data distribution and access patterns to support high scalability with high performance — while easing the burden of the application developer and database administrators by versioning data structures as well as code.\r\n\r\nWe will also highlight real a realworld use case from a large enterprise organization that was able to leverage the AgilData approach to rapidly accelerate the pace of product development while actually simplifying operations. We’ll make you a believer in the fundamental tenants of an AgilData infrastructure, namely that it must be Simple, it must be Scaleable, it must be Streaming, and, most importantly, it must be SQL.\r\n<h3 class=\"size-15\"><strong>Tuesday, November 3rd: 4:00-4:35pm</strong></h3>\r\n<p class=\"size-15\"><strong>Get your Flow On. Building Data Flows Simply with AgilData</strong></p>\r\nLearn how to design and diagram and stream processing data flow. Using AgilData we will demonstrate how easy it is to build a data processing flow and track it across the query execution layer. It\'s kind of like seeing code in the Matrix but cooler.\r\n<h2>Get a FREE VIP Gold Pass to Cloud Expo</h2>\r\n1. <a href=\"http://agildata.cmail20.com/t/i-l-thjhjuy-jlykakdk-i/\" target=\"_blank\">Go to this registration page</a>\r\n2. Fill out the Attendee Information form\r\n3. Select the VIP Gold Pass Registration Option (located on page 3 - “Registration Plan”)\r\n4. Enter the Discount Code: <strong>agildataVIPgold</strong>\r\n5. The price will re-set to $0\r\n\r\nThe VIP Gold registration gives you Full Conference Access for all 3 days – November 3-5. You can choose from 125+ breakout sessions, general sessions, industry keynotes, and \"Power Panels\" and of course attend the Expo Floor. <em>(pass does not include lunch or conference bag.)</em>', 'AgilData Featured at Cloud Expo West 2015', '', 'inherit', 'closed', 'closed', '', '429-revision-v1', '', '', '2015-10-29 12:37:05', '2015-10-29 18:37:05', '', '429', 'http://www.agildata.com/429-revision-v1/', '0', 'revision', '', '0');
INSERT INTO `wpag_posts` VALUES('441', '5', '2015-10-29 12:49:38', '2015-10-29 18:49:38', '<strong>AgilData featured at Cloud Expo West for second consecutive year.</strong>\r\n\r\n<a href=\"http://www.cloudcomputingexpo.com/\" target=\"_blank\">Cloud Expo West</a> is happening at the Santa Clara Convention Center November 3-5, 2015. In addition to our AgilData booth (#423), you can catch Dan Lynn, CEO, speaking at two sessions.\r\n<h3 class=\"size-15\"><strong>AgilData Sneak Peek: How I Learned to Stop Worrying and Evolve with OnDemand Schemas</strong></h3>\r\n<p class=\"size-15\"><strong>Tuesday, November 3rd: 1:55-2:35pm</strong></p>\r\nThe web app is Agile. The REST API is Agile. The testing and planning are Agile. But alas,Data infrastructures certainly are not. Once an application matures, changing the shape or indexing scheme of data often forces at best a topdown planning exercise and at worst includes schema changes which force downtime. The time has come for a new approach that fundamentally advances the agility of distributed data infrastructures.\r\n\r\nCome learn about a new solution to the problems faced by software organizations as their products become successful and the data grows beyond the initial scope of the database,whether it starts out as relational SQL, NoSQL, or somewhere inbetween.\r\n\r\nAs the user base of a software system grows, the data infrastructure is forced to evolve to meet the needs of new features, increasing the variety of data with ever larger data volumes and higher query velocity. One thing we know about evolution is that it doesn’t always take the simple path or produce simple results. Data systems often grow by adding technology: a little NoSQL here, a message queue there, a Hadoop cluster hiding in the corner. This growing complexity slows down product development and challenges technology teams to ramp up entirely new skillsets reactively.\r\n\r\nIs this your future or is this your today? Learn how you can use AgilData to address these challenges, with a truly agile infrastructure that allows your organization to store, scale and access the data it needs. AgilData is a real time computation engine and distributed data storage platform with an emphasis on a fantastic developer experience.\r\n\r\nWe will show you how an “Agile data infrastructure\", should handle everything from OLTP to realtime analytics to historical reporting. A truly Agile approach allows data to be accessed as an exact match to application requirements. As application needs change, the AgilData platform can respond rapidly and dynamically evolve the schema, data distribution and access patterns to support high scalability with high performance — while easing the burden of the application developer and database administrators by versioning data structures as well as code.\r\n\r\nWe will also highlight real a realworld use case from a large enterprise organization that was able to leverage the AgilData approach to rapidly accelerate the pace of product development while actually simplifying operations. We’ll make you a believer in the fundamental tenants of an AgilData infrastructure, namely that it must be Simple, it must be Scaleable, it must be Streaming, and, most importantly, it must be SQL.\r\n<h3 class=\"size-15\"><strong>Get your Flow On. Building Data Flows Simply with AgilData</strong></h3>\r\n<p class=\"size-15\"><strong>Tuesday, November 3rd: 4:00-4:35pm</strong></p>\r\nLearn how to design and diagram and stream processing data flow. Using AgilData we will demonstrate how easy it is to build a data processing flow and track it across the query execution layer. It\'s kind of like seeing code in the Matrix but cooler.\r\n<h2>Get a FREE VIP Gold Pass to Cloud Expo</h2>\r\n1. <a href=\"http://agildata.cmail20.com/t/i-l-thjhjuy-jlykakdk-i/\" target=\"_blank\">Go to this registration page</a>\r\n2. Fill out the Attendee Information form\r\n3. Select the VIP Gold Pass Registration Option (located on page 3 - “Registration Plan”)\r\n4. Enter the Discount Code: <strong>agildataVIPgold</strong>\r\n5. The price will re-set to $0\r\n\r\nThe VIP Gold registration gives you Full Conference Access for all 3 days – November 3-5. You can choose from 125+ breakout sessions, general sessions, industry keynotes, and \"Power Panels\" and of course attend the Expo Floor. <em>(pass does not include lunch or conference bag.)</em>', 'AgilData Featured at Cloud Expo West 2015', '', 'inherit', 'closed', 'closed', '', '429-autosave-v1', '', '', '2015-10-29 12:49:38', '2015-10-29 18:49:38', '', '429', 'http://www.agildata.com/429-autosave-v1/', '0', 'revision', '', '0');
INSERT INTO `wpag_posts` VALUES('442', '5', '2015-10-29 12:42:03', '2015-10-29 18:42:03', '<h4>AgilData featured at Cloud Expo West for second consecutive year.</h4>\r\nCloud Expo is happening at the Santa Clara Convention Center November 3-5, 2015. In addition to our AgilData booth (#423), you can catch Dan Lynn, CEO, speaking at two sessions.\r\n<h3 class=\"size-15\"><strong>Tuesday, November 3rd: 1:55-2:35pm</strong></h3>\r\n<p class=\"size-15\"><strong>AgilData Sneak Peek: How I Learned to Stop Worrying and Evolve with OnDemand Schemas</strong></p>\r\nThe web app is Agile. The REST API is Agile. The testing and planning are Agile. But alas,Data infrastructures certainly are not. Once an application matures, changing the shape or indexing scheme of data often forces at best a topdown planning exercise and at worst includes schema changes which force downtime. The time has come for a new approach that fundamentally advances the agility of distributed data infrastructures.\r\n\r\nCome learn about a new solution to the problems faced by software organizations as their products become successful and the data grows beyond the initial scope of the database,whether it starts out as relational SQL, NoSQL, or somewhere inbetween.\r\n\r\nAs the user base of a software system grows, the data infrastructure is forced to evolve to meet the needs of new features, increasing the variety of data with ever larger data volumes and higher query velocity. One thing we know about evolution is that it doesn’t always take the simple path or produce simple results. Data systems often grow by adding technology: a little NoSQL here, a message queue there, a Hadoop cluster hiding in the corner. This growing complexity slows down product development and challenges technology teams to ramp up entirely new skillsets reactively.\r\n\r\nIs this your future or is this your today? Learn how you can use AgilData to address these challenges, with a truly agile infrastructure that allows your organization to store, scale and access the data it needs. AgilData is a real time computation engine and distributed data storage platform with an emphasis on a fantastic developer experience.\r\n\r\nWe will show you how an “Agile data infrastructure\", should handle everything from OLTP to realtime analytics to historical reporting. A truly Agile approach allows data to be accessed as an exact match to application requirements. As application needs change, the AgilData platform can respond rapidly and dynamically evolve the schema, data distribution and access patterns to support high scalability with high performance — while easing the burden of the application developer and database administrators by versioning data structures as well as code.\r\n\r\nWe will also highlight real a realworld use case from a large enterprise organization that was able to leverage the AgilData approach to rapidly accelerate the pace of product development while actually simplifying operations. We’ll make you a believer in the fundamental tenants of an AgilData infrastructure, namely that it must be Simple, it must be Scaleable, it must be Streaming, and, most importantly, it must be SQL.\r\n<h3 class=\"size-15\"><strong>Tuesday, November 3rd: 4:00-4:35pm</strong></h3>\r\n<p class=\"size-15\"><strong>Get your Flow On. Building Data Flows Simply with AgilData</strong></p>\r\nLearn how to design and diagram and stream processing data flow. Using AgilData we will demonstrate how easy it is to build a data processing flow and track it across the query execution layer. It\'s kind of like seeing code in the Matrix but cooler.\r\n<h2>Get a FREE VIP Gold Pass to Cloud Expo</h2>\r\n1. <a href=\"http://agildata.cmail20.com/t/i-l-thjhjuy-jlykakdk-i/\" target=\"_blank\">Go to this registration page</a>\r\n2. Fill out the Attendee Information form\r\n3. Select the VIP Gold Pass Registration Option (located on page 3 - “Registration Plan”)\r\n4. Enter the Discount Code: <strong>agildataVIPgold</strong>\r\n5. The price will re-set to $0\r\n\r\nThe VIP Gold registration gives you Full Conference Access for all 3 days – November 3-5. You can choose from 125+ breakout sessions, general sessions, industry keynotes, and \"Power Panels\" and of course attend the Expo Floor. <em>(pass does not include lunch or conference bag.)</em>', 'AgilData Featured at Cloud Expo West 2015', '', 'inherit', 'closed', 'closed', '', '429-revision-v1', '', '', '2015-10-29 12:42:03', '2015-10-29 18:42:03', '', '429', 'http://www.agildata.com/429-revision-v1/', '0', 'revision', '', '0');
INSERT INTO `wpag_posts` VALUES('443', '5', '2015-10-29 12:43:42', '2015-10-29 18:43:42', '<h4>AgilData featured at Cloud Expo West for second consecutive year.</h4>\r\nCloud Expo is happening at the Santa Clara Convention Center November 3-5, 2015. In addition to our AgilData booth (#423), you can catch Dan Lynn, CEO, speaking at two sessions.\r\n<h3 class=\"size-15\"><strong>AgilData Sneak Peek: How I Learned to Stop Worrying and Evolve with OnDemand Schemas</strong></h3>\r\n<p class=\"size-15\"><strong>Tuesday, November 3rd: 1:55-2:35pm</strong></p>\r\nThe web app is Agile. The REST API is Agile. The testing and planning are Agile. But alas,Data infrastructures certainly are not. Once an application matures, changing the shape or indexing scheme of data often forces at best a topdown planning exercise and at worst includes schema changes which force downtime. The time has come for a new approach that fundamentally advances the agility of distributed data infrastructures.\r\n\r\nCome learn about a new solution to the problems faced by software organizations as their products become successful and the data grows beyond the initial scope of the database,whether it starts out as relational SQL, NoSQL, or somewhere inbetween.\r\n\r\nAs the user base of a software system grows, the data infrastructure is forced to evolve to meet the needs of new features, increasing the variety of data with ever larger data volumes and higher query velocity. One thing we know about evolution is that it doesn’t always take the simple path or produce simple results. Data systems often grow by adding technology: a little NoSQL here, a message queue there, a Hadoop cluster hiding in the corner. This growing complexity slows down product development and challenges technology teams to ramp up entirely new skillsets reactively.\r\n\r\nIs this your future or is this your today? Learn how you can use AgilData to address these challenges, with a truly agile infrastructure that allows your organization to store, scale and access the data it needs. AgilData is a real time computation engine and distributed data storage platform with an emphasis on a fantastic developer experience.\r\n\r\nWe will show you how an “Agile data infrastructure\", should handle everything from OLTP to realtime analytics to historical reporting. A truly Agile approach allows data to be accessed as an exact match to application requirements. As application needs change, the AgilData platform can respond rapidly and dynamically evolve the schema, data distribution and access patterns to support high scalability with high performance — while easing the burden of the application developer and database administrators by versioning data structures as well as code.\r\n\r\nWe will also highlight real a realworld use case from a large enterprise organization that was able to leverage the AgilData approach to rapidly accelerate the pace of product development while actually simplifying operations. We’ll make you a believer in the fundamental tenants of an AgilData infrastructure, namely that it must be Simple, it must be Scaleable, it must be Streaming, and, most importantly, it must be SQL.\r\n<h3 class=\"size-15\"><strong>Tuesday, November 3rd: 4:00-4:35pm</strong></h3>\r\n<p class=\"size-15\"><strong>Get your Flow On. Building Data Flows Simply with AgilData</strong></p>\r\nLearn how to design and diagram and stream processing data flow. Using AgilData we will demonstrate how easy it is to build a data processing flow and track it across the query execution layer. It\'s kind of like seeing code in the Matrix but cooler.\r\n<h2>Get a FREE VIP Gold Pass to Cloud Expo</h2>\r\n1. <a href=\"http://agildata.cmail20.com/t/i-l-thjhjuy-jlykakdk-i/\" target=\"_blank\">Go to this registration page</a>\r\n2. Fill out the Attendee Information form\r\n3. Select the VIP Gold Pass Registration Option (located on page 3 - “Registration Plan”)\r\n4. Enter the Discount Code: <strong>agildataVIPgold</strong>\r\n5. The price will re-set to $0\r\n\r\nThe VIP Gold registration gives you Full Conference Access for all 3 days – November 3-5. You can choose from 125+ breakout sessions, general sessions, industry keynotes, and \"Power Panels\" and of course attend the Expo Floor. <em>(pass does not include lunch or conference bag.)</em>', 'AgilData Featured at Cloud Expo West 2015', '', 'inherit', 'closed', 'closed', '', '429-revision-v1', '', '', '2015-10-29 12:43:42', '2015-10-29 18:43:42', '', '429', 'http://www.agildata.com/429-revision-v1/', '0', 'revision', '', '0');
INSERT INTO `wpag_posts` VALUES('444', '5', '2015-10-29 12:48:22', '2015-10-29 18:48:22', '<strong>AgilData featured at Cloud Expo West for second consecutive year.</strong>\r\n\r\nCloud Expo is happening at the Santa Clara Convention Center November 3-5, 2015. In addition to our AgilData booth (#423), you can catch Dan Lynn, CEO, speaking at two sessions.\r\n<h3 class=\"size-15\"><strong>AgilData Sneak Peek: How I Learned to Stop Worrying and Evolve with OnDemand Schemas</strong></h3>\r\n<p class=\"size-15\"><strong>Tuesday, November 3rd: 1:55-2:35pm</strong></p>\r\nThe web app is Agile. The REST API is Agile. The testing and planning are Agile. But alas,Data infrastructures certainly are not. Once an application matures, changing the shape or indexing scheme of data often forces at best a topdown planning exercise and at worst includes schema changes which force downtime. The time has come for a new approach that fundamentally advances the agility of distributed data infrastructures.\r\n\r\nCome learn about a new solution to the problems faced by software organizations as their products become successful and the data grows beyond the initial scope of the database,whether it starts out as relational SQL, NoSQL, or somewhere inbetween.\r\n\r\nAs the user base of a software system grows, the data infrastructure is forced to evolve to meet the needs of new features, increasing the variety of data with ever larger data volumes and higher query velocity. One thing we know about evolution is that it doesn’t always take the simple path or produce simple results. Data systems often grow by adding technology: a little NoSQL here, a message queue there, a Hadoop cluster hiding in the corner. This growing complexity slows down product development and challenges technology teams to ramp up entirely new skillsets reactively.\r\n\r\nIs this your future or is this your today? Learn how you can use AgilData to address these challenges, with a truly agile infrastructure that allows your organization to store, scale and access the data it needs. AgilData is a real time computation engine and distributed data storage platform with an emphasis on a fantastic developer experience.\r\n\r\nWe will show you how an “Agile data infrastructure\", should handle everything from OLTP to realtime analytics to historical reporting. A truly Agile approach allows data to be accessed as an exact match to application requirements. As application needs change, the AgilData platform can respond rapidly and dynamically evolve the schema, data distribution and access patterns to support high scalability with high performance — while easing the burden of the application developer and database administrators by versioning data structures as well as code.\r\n\r\nWe will also highlight real a realworld use case from a large enterprise organization that was able to leverage the AgilData approach to rapidly accelerate the pace of product development while actually simplifying operations. We’ll make you a believer in the fundamental tenants of an AgilData infrastructure, namely that it must be Simple, it must be Scaleable, it must be Streaming, and, most importantly, it must be SQL.\r\n<h3 class=\"size-15\"><strong>Get your Flow On. Building Data Flows Simply with AgilData</strong></h3>\r\n<p class=\"size-15\"><strong>Tuesday, November 3rd: 4:00-4:35pm</strong></p>\r\nLearn how to design and diagram and stream processing data flow. Using AgilData we will demonstrate how easy it is to build a data processing flow and track it across the query execution layer. It\'s kind of like seeing code in the Matrix but cooler.\r\n<h2>Get a FREE VIP Gold Pass to Cloud Expo</h2>\r\n1. <a href=\"http://agildata.cmail20.com/t/i-l-thjhjuy-jlykakdk-i/\" target=\"_blank\">Go to this registration page</a>\r\n2. Fill out the Attendee Information form\r\n3. Select the VIP Gold Pass Registration Option (located on page 3 - “Registration Plan”)\r\n4. Enter the Discount Code: <strong>agildataVIPgold</strong>\r\n5. The price will re-set to $0\r\n\r\nThe VIP Gold registration gives you Full Conference Access for all 3 days – November 3-5. You can choose from 125+ breakout sessions, general sessions, industry keynotes, and \"Power Panels\" and of course attend the Expo Floor. <em>(pass does not include lunch or conference bag.)</em>', 'AgilData Featured at Cloud Expo West 2015', '', 'inherit', 'closed', 'closed', '', '429-revision-v1', '', '', '2015-10-29 12:48:22', '2015-10-29 18:48:22', '', '429', 'http://www.agildata.com/429-revision-v1/', '0', 'revision', '', '0');
INSERT INTO `wpag_posts` VALUES('445', '5', '2015-10-29 12:49:28', '2015-10-29 18:49:28', '<strong>AgilData featured at Cloud Expo West for second consecutive year.</strong>\r\n\r\n<a href=\"http://www.cloudcomputingexpo.com/\" target=\"_blank\">Cloud Expo West</a> is happening at the Santa Clara Convention Center November 3-5, 2015. In addition to our AgilData booth (#423), you can catch Dan Lynn, CEO, speaking at two sessions.\r\n<h3 class=\"size-15\"><strong>AgilData Sneak Peek: How I Learned to Stop Worrying and Evolve with OnDemand Schemas</strong></h3>\r\n<p class=\"size-15\"><strong>Tuesday, November 3rd: 1:55-2:35pm</strong></p>\r\nThe web app is Agile. The REST API is Agile. The testing and planning are Agile. But alas,Data infrastructures certainly are not. Once an application matures, changing the shape or indexing scheme of data often forces at best a topdown planning exercise and at worst includes schema changes which force downtime. The time has come for a new approach that fundamentally advances the agility of distributed data infrastructures.\r\n\r\nCome learn about a new solution to the problems faced by software organizations as their products become successful and the data grows beyond the initial scope of the database,whether it starts out as relational SQL, NoSQL, or somewhere inbetween.\r\n\r\nAs the user base of a software system grows, the data infrastructure is forced to evolve to meet the needs of new features, increasing the variety of data with ever larger data volumes and higher query velocity. One thing we know about evolution is that it doesn’t always take the simple path or produce simple results. Data systems often grow by adding technology: a little NoSQL here, a message queue there, a Hadoop cluster hiding in the corner. This growing complexity slows down product development and challenges technology teams to ramp up entirely new skillsets reactively.\r\n\r\nIs this your future or is this your today? Learn how you can use AgilData to address these challenges, with a truly agile infrastructure that allows your organization to store, scale and access the data it needs. AgilData is a real time computation engine and distributed data storage platform with an emphasis on a fantastic developer experience.\r\n\r\nWe will show you how an “Agile data infrastructure\", should handle everything from OLTP to realtime analytics to historical reporting. A truly Agile approach allows data to be accessed as an exact match to application requirements. As application needs change, the AgilData platform can respond rapidly and dynamically evolve the schema, data distribution and access patterns to support high scalability with high performance — while easing the burden of the application developer and database administrators by versioning data structures as well as code.\r\n\r\nWe will also highlight real a realworld use case from a large enterprise organization that was able to leverage the AgilData approach to rapidly accelerate the pace of product development while actually simplifying operations. We’ll make you a believer in the fundamental tenants of an AgilData infrastructure, namely that it must be Simple, it must be Scaleable, it must be Streaming, and, most importantly, it must be SQL.\r\n<h3 class=\"size-15\"><strong>Get your Flow On. Building Data Flows Simply with AgilData</strong></h3>\r\n<p class=\"size-15\"><strong>Tuesday, November 3rd: 4:00-4:35pm</strong></p>\r\nLearn how to design and diagram and stream processing data flow. Using AgilData we will demonstrate how easy it is to build a data processing flow and track it across the query execution layer. It\'s kind of like seeing code in the Matrix but cooler.\r\n<h2>Get a FREE VIP Gold Pass to Cloud Expo</h2>\r\n1. <a href=\"http://agildata.cmail20.com/t/i-l-thjhjuy-jlykakdk-i/\" target=\"_blank\">Go to this registration page</a>\r\n2. Fill out the Attendee Information form\r\n3. Select the VIP Gold Pass Registration Option (located on page 3 - “Registration Plan”)\r\n4. Enter the Discount Code: <strong>agildataVIPgold</strong>\r\n5. The price will re-set to $0\r\n\r\nThe VIP Gold registration gives you Full Conference Access for all 3 days – November 3-5. You can choose from 125+ breakout sessions, general sessions, industry keynotes, and \"Power Panels\" and of course attend the Expo Floor. <em>(pass does not include lunch or conference bag.)</em>', 'AgilData Featured at Cloud Expo West 2015', '', 'inherit', 'closed', 'closed', '', '429-revision-v1', '', '', '2015-10-29 12:49:28', '2015-10-29 18:49:28', '', '429', 'http://www.agildata.com/429-revision-v1/', '0', 'revision', '', '0');
INSERT INTO `wpag_posts` VALUES('448', '1', '2015-10-29 15:03:53', '2015-10-29 21:03:53', 'Please fill out the simple form below, and you will be included in the exclusive AgilData Beta group immediately. Thanks for your interest in AgilData.\r\n\r\n[gravityform id=\"3\" title=\"false\" description=\"false\" ajax=\"true\"]', 'Join The AgilData Beta Here', '', 'inherit', 'closed', 'closed', '', '369-revision-v1', '', '', '2015-10-29 15:03:53', '2015-10-29 21:03:53', '', '369', 'http://www.agildata.com/369-revision-v1/', '0', 'revision', '', '0');
INSERT INTO `wpag_posts` VALUES('498', '5', '2015-12-05 17:58:48', '2015-12-06 00:58:48', '<h2><strong>BIG DATA TECHNICAL CONSULTING</strong></h2>\r\n<h3>| PLANNING |</h3>\r\nJust getting started or about to commit to a plan?  Let AgilData provide early phase planning services spanning architecture review to development approach.  We have the expertise to ensure your plan-of-record utilizes the best practices of modern data infrastructure deployments with a strong focus on transforming your team’s development practice in time to ensure a successful project.\r\n<p style=\"padding-left: 30px;\">• Solution architecture evaluation and review\r\n• Technology selection\r\n• Engineering transformation\r\n• Data Architecture\r\n• Data Modeling\r\n• Data Format Translation\r\n• RDBMS Schema Design\r\n• Application design, development and testing</p>\r\n&nbsp;\r\n<h3>| IMPLEMENTATION |</h3>\r\nReal time stream processing and data pipeline development is complex.  AgilData has been there before and will work with your team sharing known best practices, design decisions and reveal potential pitfalls to ensure that projects are delivered on time and on budget.\r\n<p style=\"padding-left: 30px;\">• Engineering transformation\r\n• Engineering tools and processes\r\n• Software engineering\r\n• Deployment options, hardware, systems integration\r\n• Tuning, optimization, hardening and monitoring\r\n• Data continuity, normalization,\r\n• Real-time system data integration</p>\r\n&nbsp;\r\n<h3>| OPERATIONS |</h3>\r\nProduction issues keeping you up at night?  Whether you are in production now or upcoming an AgilData expert can mesh into your technical team to assess your current deployment’s ability to meet the ongoing needs of your business.\r\n<p style=\"padding-left: 30px;\">• Database Administration\r\n• DevOps Engineer\r\n• Deployment tools and processes\r\n• Performance assessment and optimization\r\n• Application Design, Development, QA, Testing\r\n• Application Development\r\n• Data Warehousing</p>', 'AgilData Consulting', '', 'inherit', 'closed', 'closed', '', '469-revision-v1', '', '', '2015-12-05 17:58:48', '2015-12-06 00:58:48', '', '469', 'http://www.agildata.com/469-revision-v1/', '0', 'revision', '', '0');
INSERT INTO `wpag_posts` VALUES('451', '5', '2015-11-18 12:18:08', '2015-11-18 19:18:08', '<h3>Why are we here?</h3>\r\nOur mission at AgilData is to make developers around the world happier and more productive by simplifying how they work with data.\r\n<h3>History</h3>\r\nAgilData started life with a different name. In 2007 Cory Isaacson and Andy Grove founded CodeFutures, bringing years of experience building high performance data pipelines for Wall Street and using it to help companies reliably scale out relational databases using a product called dbShards. Customers loved dbShards and it went on to become a commercial success.\r\n\r\nIn 2014, we noticed that databases aren\'t merely the constraining factor from a performance and operations perspective: they often impose a constraint <em>on the development process itself</em>. Agile development practices have difficulty extending into databases and can run into process roadblocks, pitting DBAs and developers against each other needlessly.\r\n\r\nWe have the experience and passion to solve this. So...\r\n\r\nWe re-oriented the company around helping companies be agile with their data as well as their software, which led to a new name: AgilData. We\'ve taken our years of experience running distributed data pipelines at scale and our passion for simplifying the developer experience and poured them into a simple-to-use product that lets developers process streaming big data at scale...using simple SQL.\r\n<h3>Who are we?</h3>\r\nWe\'re Lean Startup apostles and startup veterans who believe that the right people and the right team are the most important part of a successful company. Our roots are in Colorado, but our team is global. We build distributed systems, and <em>we are one too</em>! Our team is distributed across North America and Europe.\r\n<h3>And we are growing….</h3>\r\nWe are always looking for exceptional people to join us. If you feel that you would be a great fit, but don\'t see a job below that fits you, feel free to drop us an email at joinus@agildata.com and let\'s chat.\r\n\r\n<script src=\"//app.theresumator.com/widgets/basic/create/agildata\" type=\"text/javascript\" charset=\"utf-8\"></script>', 'About', '', 'inherit', 'closed', 'closed', '', '99-revision-v1', '', '', '2015-11-18 12:18:08', '2015-11-18 19:18:08', '', '99', 'http://www.agildata.com/99-revision-v1/', '0', 'revision', '', '0');
INSERT INTO `wpag_posts` VALUES('454', '5', '2015-12-01 14:43:50', '2015-12-01 21:43:50', '', 'Real-Time Streaming Database', '', 'inherit', 'closed', 'closed', '', '38-revision-v1', '', '', '2015-12-01 14:43:50', '2015-12-01 21:43:50', '', '38', 'http://www.agildata.com/38-revision-v1/', '0', 'revision', '', '0');
INSERT INTO `wpag_posts` VALUES('455', '5', '2015-12-01 14:44:57', '2015-12-01 21:44:57', '', 'Real-Time Streaming Database', '', 'inherit', 'closed', 'closed', '', '38-revision-v1', '', '', '2015-12-01 14:44:57', '2015-12-01 21:44:57', '', '38', 'http://www.agildata.com/38-revision-v1/', '0', 'revision', '', '0');
INSERT INTO `wpag_posts` VALUES('456', '5', '2015-12-01 21:31:12', '2015-12-02 04:31:12', '<h3>Learn how AgilData can help you become a Big Data distributed systems expert developer overnight.</h3>\r\nDan Lynn talks about the types of problems companies encounter when adding new data infrastructures - over time they create a polyglot architecture that inevitably slows down innovation. AgilData can help solve this problem by creating an Enterprise Service Bus to streamline integrations to create data flows across disparate data infrastructures, making it easy to develop new applications and features while using SQL.\r\n\r\nAgilData does this by creating micro-services to orchestrate API calls, data access and deployment to simply your data infrastructure for scaled out architectures that include Cassandra, HBase, MongoDB, Kafka and Apache Spark among others.\r\n\r\nhttps://www.youtube.com/embed/V-bABQZ5Tgk', 'AgilData Featured in Interview with Dan Lynn at Cloud Expo West 2015', '', 'publish', 'open', 'open', '', 'agildata-featured-in-interview-with-dan-lynn-at-cloud-expo-west-2015', '', '', '2015-12-02 08:27:30', '2015-12-02 15:27:30', '', '0', 'http://www.agildata.com/?p=456', '0', 'post', '', '0');
INSERT INTO `wpag_posts` VALUES('457', '5', '2015-12-01 21:09:50', '2015-12-02 04:09:50', '<span style=\"color: #000000; font-family: Arial;\">Learn howAgilData can help you become a Big Data distributed systems expert developer overnight. </span>\r\n\r\n<span style=\"color: #000000; font-family: Arial;\">Dan Lynn talks about the types of problems companies encounter when adding new data infrastructures - over time they create a polyglot architecture that inevitably slows down innovation. AgilData can help solve this problem by creating an Enterprise Service Bus to streamline integrations to create data flows across disparate data infrastructures, making it easy to develop new applications and features while using SQL. </span>\r\n\r\n<span style=\"color: #000000; font-family: Arial;\">AgilData does this by creating micro-services to orchestrate API calls, data access and deployment to simply your data infrastructure for scaled out architectures that include Cassandra, HBase, MongoDB, Kafka and Apache Spark among others.</span>\r\n\r\n&nbsp;\r\n\r\n<iframe width=\"560\" height=\"315\" src=\"https://www.youtube.com/embed/V-bABQZ5Tgk\" frameborder=\"0\" allowfullscreen></iframe>', 'AgilData Featured in Interview with Dan Lynn at Cloud Expo West 2015', '', 'inherit', 'closed', 'closed', '', '456-revision-v1', '', '', '2015-12-01 21:09:50', '2015-12-02 04:09:50', '', '456', 'http://www.agildata.com/456-revision-v1/', '0', 'revision', '', '0');
INSERT INTO `wpag_posts` VALUES('458', '5', '2015-12-01 21:11:31', '2015-12-02 04:11:31', '<h3><span style=\"color: #000000; font-family: Arial;\">Learn how AgilData can help you become a Big Data distributed systems expert developer overnight. </span></h3>\r\n<span style=\"color: #000000; font-family: Arial;\">Dan Lynn talks about the types of problems companies encounter when adding new data infrastructures - over time they create a polyglot architecture that inevitably slows down innovation. AgilData can help solve this problem by creating an Enterprise Service Bus to streamline integrations to create data flows across disparate data infrastructures, making it easy to develop new applications and features while using SQL. </span>\r\n\r\n<span style=\"color: #000000; font-family: Arial;\">AgilData does this by creating micro-services to orchestrate API calls, data access and deployment to simply your data infrastructure for scaled out architectures that include Cassandra, HBase, MongoDB, Kafka and Apache Spark among others.</span>\r\n\r\n&nbsp;\r\n\r\n<iframe src=\"https://www.youtube.com/embed/V-bABQZ5Tgk\" width=\"560\" height=\"315\" frameborder=\"0\" allowfullscreen=\"allowfullscreen\"></iframe>', 'AgilData Featured in Interview with Dan Lynn at Cloud Expo West 2015', '', 'inherit', 'closed', 'closed', '', '456-revision-v1', '', '', '2015-12-01 21:11:31', '2015-12-02 04:11:31', '', '456', 'http://www.agildata.com/456-revision-v1/', '0', 'revision', '', '0');
INSERT INTO `wpag_posts` VALUES('459', '5', '2015-12-01 21:11:59', '2015-12-02 04:11:59', '<h2><span style=\"color: #000000; font-family: Arial;\">Learn how AgilData can help you become a Big Data distributed systems expert developer overnight. </span></h2>\r\n<span style=\"color: #000000; font-family: Arial;\">Dan Lynn talks about the types of problems companies encounter when adding new data infrastructures - over time they create a polyglot architecture that inevitably slows down innovation. AgilData can help solve this problem by creating an Enterprise Service Bus to streamline integrations to create data flows across disparate data infrastructures, making it easy to develop new applications and features while using SQL. </span>\r\n\r\n<span style=\"color: #000000; font-family: Arial;\">AgilData does this by creating micro-services to orchestrate API calls, data access and deployment to simply your data infrastructure for scaled out architectures that include Cassandra, HBase, MongoDB, Kafka and Apache Spark among others.</span>\r\n\r\n&nbsp;\r\n\r\n<iframe src=\"https://www.youtube.com/embed/V-bABQZ5Tgk\" width=\"560\" height=\"315\" frameborder=\"0\" allowfullscreen=\"allowfullscreen\"></iframe>', 'AgilData Featured in Interview with Dan Lynn at Cloud Expo West 2015', '', 'inherit', 'closed', 'closed', '', '456-revision-v1', '', '', '2015-12-01 21:11:59', '2015-12-02 04:11:59', '', '456', 'http://www.agildata.com/456-revision-v1/', '0', 'revision', '', '0');
INSERT INTO `wpag_posts` VALUES('460', '5', '2015-12-01 21:12:36', '2015-12-02 04:12:36', '<h1><span style=\"color: #000000; font-family: Arial;\">Learn how AgilData can help you become a Big Data distributed systems expert developer overnight. </span></h1>\r\n<span style=\"color: #000000; font-family: Arial;\">Dan Lynn talks about the types of problems companies encounter when adding new data infrastructures - over time they create a polyglot architecture that inevitably slows down innovation. AgilData can help solve this problem by creating an Enterprise Service Bus to streamline integrations to create data flows across disparate data infrastructures, making it easy to develop new applications and features while using SQL. </span>\r\n\r\n<span style=\"color: #000000; font-family: Arial;\">AgilData does this by creating micro-services to orchestrate API calls, data access and deployment to simply your data infrastructure for scaled out architectures that include Cassandra, HBase, MongoDB, Kafka and Apache Spark among others.</span>\r\n\r\n&nbsp;\r\n\r\n<iframe src=\"https://www.youtube.com/embed/V-bABQZ5Tgk\" width=\"560\" height=\"315\" frameborder=\"0\" allowfullscreen=\"allowfullscreen\"></iframe>', 'AgilData Featured in Interview with Dan Lynn at Cloud Expo West 2015', '', 'inherit', 'closed', 'closed', '', '456-revision-v1', '', '', '2015-12-01 21:12:36', '2015-12-02 04:12:36', '', '456', 'http://www.agildata.com/456-revision-v1/', '0', 'revision', '', '0');
INSERT INTO `wpag_posts` VALUES('461', '5', '2015-12-01 21:13:07', '2015-12-02 04:13:07', '<h4><span style=\"color: #000000; font-family: Arial;\">Learn how AgilData can help you become a Big Data distributed systems expert developer overnight. </span></h4>\r\n<span style=\"color: #000000; font-family: Arial;\">Dan Lynn talks about the types of problems companies encounter when adding new data infrastructures - over time they create a polyglot architecture that inevitably slows down innovation. AgilData can help solve this problem by creating an Enterprise Service Bus to streamline integrations to create data flows across disparate data infrastructures, making it easy to develop new applications and features while using SQL. </span>\r\n\r\n<span style=\"color: #000000; font-family: Arial;\">AgilData does this by creating micro-services to orchestrate API calls, data access and deployment to simply your data infrastructure for scaled out architectures that include Cassandra, HBase, MongoDB, Kafka and Apache Spark among others.</span>\r\n\r\n&nbsp;\r\n\r\n<iframe src=\"https://www.youtube.com/embed/V-bABQZ5Tgk\" width=\"560\" height=\"315\" frameborder=\"0\" allowfullscreen=\"allowfullscreen\"></iframe>', 'AgilData Featured in Interview with Dan Lynn at Cloud Expo West 2015', '', 'inherit', 'closed', 'closed', '', '456-revision-v1', '', '', '2015-12-01 21:13:07', '2015-12-02 04:13:07', '', '456', 'http://www.agildata.com/456-revision-v1/', '0', 'revision', '', '0');
INSERT INTO `wpag_posts` VALUES('462', '5', '2015-12-01 21:19:56', '2015-12-02 04:19:56', '<h2><span style=\"color: #000000; font-family: Arial;\">Learn how AgilData can help you become a Big Data distributed systems expert developer overnight. </span></h2>\r\n<span style=\"color: #000000; font-family: Arial;\">Dan Lynn talks about the types of problems companies encounter when adding new data infrastructures - over time they create a polyglot architecture that inevitably slows down innovation. AgilData can help solve this problem by creating an Enterprise Service Bus to streamline integrations to create data flows across disparate data infrastructures, making it easy to develop new applications and features while using SQL. </span>\r\n\r\n<span style=\"color: #000000; font-family: Arial;\">AgilData does this by creating micro-services to orchestrate API calls, data access and deployment to simply your data infrastructure for scaled out architectures that include Cassandra, HBase, MongoDB, Kafka and Apache Spark among others.</span>\r\n\r\n&nbsp;\r\n\r\n<iframe src=\"https://www.youtube.com/embed/V-bABQZ5Tgk\" width=\"560\" height=\"315\" frameborder=\"0\" allowfullscreen=\"allowfullscreen\"></iframe>', 'AgilData Featured in Interview with Dan Lynn at Cloud Expo West 2015', '', 'inherit', 'closed', 'closed', '', '456-revision-v1', '', '', '2015-12-01 21:19:56', '2015-12-02 04:19:56', '', '456', 'http://www.agildata.com/456-revision-v1/', '0', 'revision', '', '0');
INSERT INTO `wpag_posts` VALUES('463', '5', '2015-12-01 21:21:10', '2015-12-02 04:21:10', '<h3><span style=\"color: #000000; font-family: Arial;\">Learn how AgilData can help you become a Big Data distributed systems expert developer overnight. </span></h3>\r\n<span style=\"color: #000000; font-family: Arial;\">Dan Lynn talks about the types of problems companies encounter when adding new data infrastructures - over time they create a polyglot architecture that inevitably slows down innovation. AgilData can help solve this problem by creating an Enterprise Service Bus to streamline integrations to create data flows across disparate data infrastructures, making it easy to develop new applications and features while using SQL. </span>\r\n\r\n<span style=\"color: #000000; font-family: Arial;\">AgilData does this by creating micro-services to orchestrate API calls, data access and deployment to simply your data infrastructure for scaled out architectures that include Cassandra, HBase, MongoDB, Kafka and Apache Spark among others.</span>\r\n\r\n&nbsp;\r\n\r\n<iframe src=\"https://www.youtube.com/embed/V-bABQZ5Tgk\" width=\"560\" height=\"315\" frameborder=\"0\" allowfullscreen=\"allowfullscreen\"></iframe>', 'AgilData Featured in Interview with Dan Lynn at Cloud Expo West 2015', '', 'inherit', 'closed', 'closed', '', '456-revision-v1', '', '', '2015-12-01 21:21:10', '2015-12-02 04:21:10', '', '456', 'http://www.agildata.com/456-revision-v1/', '0', 'revision', '', '0');
INSERT INTO `wpag_posts` VALUES('466', '1', '2015-12-02 08:27:30', '2015-12-02 15:27:30', '<h3>Learn how AgilData can help you become a Big Data distributed systems expert developer overnight.</h3>\r\nDan Lynn talks about the types of problems companies encounter when adding new data infrastructures - over time they create a polyglot architecture that inevitably slows down innovation. AgilData can help solve this problem by creating an Enterprise Service Bus to streamline integrations to create data flows across disparate data infrastructures, making it easy to develop new applications and features while using SQL.\r\n\r\nAgilData does this by creating micro-services to orchestrate API calls, data access and deployment to simply your data infrastructure for scaled out architectures that include Cassandra, HBase, MongoDB, Kafka and Apache Spark among others.\r\n\r\nhttps://www.youtube.com/embed/V-bABQZ5Tgk', 'AgilData Featured in Interview with Dan Lynn at Cloud Expo West 2015', '', 'inherit', 'closed', 'closed', '', '456-revision-v1', '', '', '2015-12-02 08:27:30', '2015-12-02 15:27:30', '', '456', 'http://www.agildata.com/456-revision-v1/', '0', 'revision', '', '0');
INSERT INTO `wpag_posts` VALUES('464', '5', '2015-12-01 21:31:12', '2015-12-02 04:31:12', '<span style=\"color: #000000; font-family: Arial;\"><strong>Learn how AgilData can help you become a Big Data distributed systems expert developer overnight.</strong> </span>\r\n\r\n<span style=\"color: #000000; font-family: Arial;\">Dan Lynn talks about the types of problems companies encounter when adding new data infrastructures - over time they create a polyglot architecture that inevitably slows down innovation. AgilData can help solve this problem by creating an Enterprise Service Bus to streamline integrations to create data flows across disparate data infrastructures, making it easy to develop new applications and features while using SQL. </span>\r\n\r\n<span style=\"color: #000000; font-family: Arial;\">AgilData does this by creating micro-services to orchestrate API calls, data access and deployment to simply your data infrastructure for scaled out architectures that include Cassandra, HBase, MongoDB, Kafka and Apache Spark among others.</span>\r\n\r\n&nbsp;\r\n\r\n<iframe src=\"https://www.youtube.com/embed/V-bABQZ5Tgk\" width=\"560\" height=\"315\" frameborder=\"0\" allowfullscreen=\"allowfullscreen\"></iframe>', 'AgilData Featured in Interview with Dan Lynn at Cloud Expo West 2015', '', 'inherit', 'closed', 'closed', '', '456-revision-v1', '', '', '2015-12-01 21:31:12', '2015-12-02 04:31:12', '', '456', 'http://www.agildata.com/456-revision-v1/', '0', 'revision', '', '0');
INSERT INTO `wpag_posts` VALUES('467', '5', '2015-12-04 10:06:26', '2015-12-04 17:06:26', '', 'What Is AgilData', '', 'publish', 'closed', 'closed', '', 'what-is-agildata', '', '', '2015-12-05 20:50:59', '2015-12-06 03:50:59', '', '0', 'http://www.agildata.com/?page_id=467', '0', 'page', '', '0');
INSERT INTO `wpag_posts` VALUES('468', '5', '2015-12-04 10:06:26', '2015-12-04 17:06:26', '', 'What Is AgilData', '', 'inherit', 'closed', 'closed', '', '467-revision-v1', '', '', '2015-12-04 10:06:26', '2015-12-04 17:06:26', '', '467', 'http://www.agildata.com/467-revision-v1/', '0', 'revision', '', '0');
INSERT INTO `wpag_posts` VALUES('469', '5', '2015-12-04 14:32:51', '2015-12-04 21:32:51', '<h2>Big Data Applications, Infrastructures and Operations</h2>\r\n<h3>| PLANNING |</h3>\r\nJust getting started or about to commit to a plan?  Let AgilData provide early phase technical consulting and planning services spanning architecture review to development approach.  We have the expertise to ensure your plan-of-record utilizes the best practices of modern data infrastructure deployments with a strong focus on transforming your team’s development practice in time to ensure a successful project.\r\n<p style=\"padding-left: 30px;\">• Solution architecture evaluation and review\r\n• Technology selection\r\n• Engineering transformation\r\n• Data Architecture\r\n• Data Modeling\r\n• Data Format Translation\r\n• RDBMS Schema Design\r\n• Application design, development and testing</p>\r\n\r\n<h4><a href=\"http://www.agildata.com/big-data-technical-consulting-request/\"><img class=\"alignnone size-full wp-image-530\" src=\"http://www.agildata.com/wp-content/uploads/2015/12/AD-Need-This-Click-Here.jpg\" alt=\"AD Need This Click Here\" width=\"232\" height=\"64\" /></a></h4>\r\n&nbsp;\r\n<h3>| IMPLEMENTATION |</h3>\r\nReal time stream processing and data pipeline development is complex.  AgilData has been there before and will work with your team sharing known best practices, design decisions and reveal potential pitfalls to ensure that projects are delivered on time and on budget.\r\n<p style=\"padding-left: 30px;\">• Engineering transformation\r\n• Engineering tools and processes\r\n• Software engineering\r\n• Deployment options, hardware, systems integration\r\n• Tuning, optimization, hardening and monitoring\r\n• Data continuity, normalization,\r\n• Real-time system data integration</p>\r\n\r\n<h4><a href=\"http://www.agildata.com/big-data-technical-consulting-request/\"><img class=\"alignnone size-full wp-image-530\" src=\"http://www.agildata.com/wp-content/uploads/2015/12/AD-Need-This-Click-Here.jpg\" alt=\"AD Need This Click Here\" width=\"232\" height=\"64\" /></a></h4>\r\n&nbsp;\r\n<h3>| OPERATIONS |</h3>\r\nProduction issues keeping you up at night?  Whether you are in production now or upcoming an AgilData expert can mesh into your technical team to assess your current deployment’s ability to meet the ongoing needs of your business.\r\n<p style=\"padding-left: 30px;\">• Database Administration\r\n• DevOps Engineer\r\n• Deployment tools and processes\r\n• Performance assessment and optimization\r\n• Application Design, Development, QA, Testing\r\n• Application Development\r\n• Data Warehousing</p>\r\n\r\n<h4><a href=\"http://www.agildata.com/big-data-technical-consulting-request/\"><img class=\"alignnone size-full wp-image-530\" src=\"http://www.agildata.com/wp-content/uploads/2015/12/AD-Need-This-Click-Here.jpg\" alt=\"AD Need This Click Here\" width=\"232\" height=\"64\" /></a></h4>\r\n&nbsp;\r\n<h3>| ENGAGEMENT |</h3>\r\nProject durations vary upon your needs.  We’ve kept it simple for you to meter your cost in small increments to ensure you are getting the most out of our technical consulting services relative to your needs and timeline.  Contact us below to discover how easy it is to work with AgilData.\r\n<p style=\"padding-left: 30px;\">• Discovery Call - 1 hour (No Fee)\r\n• Let’s get to know each other and create alignment\r\n• Kickstart Session - 1 day (Fixed Fee)\r\n• Meetup at your offices to deep dive on the tech and get a report on findings\r\n• Work Cycle - 2 week units (Architect Rate, Engineer Rate)\r\n• Recurring work cycles in simple in two week intervals with exit at any time.</p>\r\n\r\n<h3></h3>\r\n<h4><a href=\"http://www.agildata.com/big-data-technical-consulting-request/\"><img class=\"alignnone size-full wp-image-530\" src=\"http://www.agildata.com/wp-content/uploads/2015/12/AD-Need-This-Click-Here.jpg\" alt=\"AD Need This Click Here\" width=\"232\" height=\"64\" /></a></h4>\r\n&nbsp;\r\n<h2>Want to chat more about how we can help?\r\nGive us a shout.</h2>\r\n[gravityform id=\"4\" title=\"false\" description=\"false\"]', 'AgilData Technical Consulting', '', 'publish', 'closed', 'closed', '', 'agildata-techinical-consulting', '', '', '2015-12-18 13:34:29', '2015-12-18 20:34:29', '', '0', 'http://www.agildata.com/?page_id=469', '0', 'page', '', '0');
INSERT INTO `wpag_posts` VALUES('470', '5', '2015-12-04 14:32:51', '2015-12-04 21:32:51', '', 'AgilData Services', '', 'inherit', 'closed', 'closed', '', '469-revision-v1', '', '', '2015-12-04 14:32:51', '2015-12-04 21:32:51', '', '469', 'http://www.agildata.com/469-revision-v1/', '0', 'revision', '', '0');
INSERT INTO `wpag_posts` VALUES('471', '5', '2015-12-04 14:35:14', '2015-12-04 21:35:14', '', 'AgilData Consulting', '', 'inherit', 'closed', 'closed', '', '469-revision-v1', '', '', '2015-12-04 14:35:14', '2015-12-04 21:35:14', '', '469', 'http://www.agildata.com/469-revision-v1/', '0', 'revision', '', '0');
INSERT INTO `wpag_posts` VALUES('473', '1', '2015-12-04 15:53:35', '2015-12-04 22:53:35', 'a:7:{s:8:\"location\";a:1:{i:0;a:1:{i:0;a:3:{s:5:\"param\";s:13:\"page_template\";s:8:\"operator\";s:2:\"==\";s:5:\"value\";s:23:\"template-what-it-is.php\";}}}s:8:\"position\";s:15:\"acf_after_title\";s:5:\"style\";s:7:\"default\";s:15:\"label_placement\";s:3:\"top\";s:21:\"instruction_placement\";s:5:\"label\";s:14:\"hide_on_screen\";s:0:\"\";s:11:\"description\";s:0:\"\";}', 'What it is Fields', 'what-it-is-fields', 'publish', 'closed', 'closed', '', 'group_5662193e1f635', '', '', '2015-12-04 15:56:00', '2015-12-04 22:56:00', '', '0', 'http://www.agildata.com/?post_type=acf-field-group&#038;p=473', '0', 'acf-field-group', '', '0');
INSERT INTO `wpag_posts` VALUES('474', '1', '2015-12-04 15:53:35', '2015-12-04 22:53:35', 'a:12:{s:4:\"type\";s:4:\"text\";s:12:\"instructions\";s:0:\"\";s:8:\"required\";i:0;s:17:\"conditional_logic\";i:0;s:7:\"wrapper\";a:3:{s:5:\"width\";s:0:\"\";s:5:\"class\";s:0:\"\";s:2:\"id\";s:0:\"\";}s:13:\"default_value\";s:0:\"\";s:11:\"placeholder\";s:0:\"\";s:7:\"prepend\";s:0:\"\";s:6:\"append\";s:0:\"\";s:9:\"maxlength\";s:0:\"\";s:8:\"readonly\";i:0;s:8:\"disabled\";i:0;}', 'Section Title', 'section_title', 'publish', 'closed', 'closed', '', 'field_56621968a88fb', '', '', '2015-12-04 15:56:00', '2015-12-04 22:56:00', '', '473', 'http://www.agildata.com/?post_type=acf-field&#038;p=474', '0', 'acf-field', '', '0');
INSERT INTO `wpag_posts` VALUES('475', '1', '2015-12-04 15:56:00', '2015-12-04 22:56:00', 'a:9:{s:4:\"type\";s:8:\"repeater\";s:12:\"instructions\";s:0:\"\";s:8:\"required\";i:0;s:17:\"conditional_logic\";i:0;s:7:\"wrapper\";a:3:{s:5:\"width\";s:0:\"\";s:5:\"class\";s:0:\"\";s:2:\"id\";s:0:\"\";}s:3:\"min\";s:0:\"\";s:3:\"max\";i:4;s:6:\"layout\";s:5:\"table\";s:12:\"button_label\";s:7:\"Add Row\";}', 'Features', 'features', 'publish', 'closed', 'closed', '', 'field_56621978286f9', '', '', '2015-12-04 15:56:00', '2015-12-04 22:56:00', '', '473', 'http://www.agildata.com/?post_type=acf-field&p=475', '1', 'acf-field', '', '0');
INSERT INTO `wpag_posts` VALUES('476', '1', '2015-12-04 15:56:00', '2015-12-04 22:56:00', 'a:15:{s:4:\"type\";s:5:\"image\";s:12:\"instructions\";s:0:\"\";s:8:\"required\";i:0;s:17:\"conditional_logic\";i:0;s:7:\"wrapper\";a:3:{s:5:\"width\";s:0:\"\";s:5:\"class\";s:0:\"\";s:2:\"id\";s:0:\"\";}s:13:\"return_format\";s:3:\"url\";s:12:\"preview_size\";s:9:\"thumbnail\";s:7:\"library\";s:3:\"all\";s:9:\"min_width\";s:0:\"\";s:10:\"min_height\";s:0:\"\";s:8:\"min_size\";s:0:\"\";s:9:\"max_width\";s:0:\"\";s:10:\"max_height\";s:0:\"\";s:8:\"max_size\";s:0:\"\";s:10:\"mime_types\";s:0:\"\";}', 'Icon', 'icon', 'publish', 'closed', 'closed', '', 'field_56621997286fa', '', '', '2015-12-04 15:56:00', '2015-12-04 22:56:00', '', '475', 'http://www.agildata.com/?post_type=acf-field&p=476', '0', 'acf-field', '', '0');
INSERT INTO `wpag_posts` VALUES('477', '1', '2015-12-04 15:56:00', '2015-12-04 22:56:00', 'a:12:{s:4:\"type\";s:4:\"text\";s:12:\"instructions\";s:0:\"\";s:8:\"required\";i:0;s:17:\"conditional_logic\";i:0;s:7:\"wrapper\";a:3:{s:5:\"width\";s:0:\"\";s:5:\"class\";s:0:\"\";s:2:\"id\";s:0:\"\";}s:13:\"default_value\";s:0:\"\";s:11:\"placeholder\";s:0:\"\";s:7:\"prepend\";s:0:\"\";s:6:\"append\";s:0:\"\";s:9:\"maxlength\";s:0:\"\";s:8:\"readonly\";i:0;s:8:\"disabled\";i:0;}', 'Title', 'title', 'publish', 'closed', 'closed', '', 'field_566219ad286fb', '', '', '2015-12-04 15:56:00', '2015-12-04 22:56:00', '', '475', 'http://www.agildata.com/?post_type=acf-field&p=477', '1', 'acf-field', '', '0');
INSERT INTO `wpag_posts` VALUES('478', '1', '2015-12-04 15:56:00', '2015-12-04 22:56:00', 'a:12:{s:4:\"type\";s:8:\"textarea\";s:12:\"instructions\";s:0:\"\";s:8:\"required\";i:0;s:17:\"conditional_logic\";i:0;s:7:\"wrapper\";a:3:{s:5:\"width\";s:0:\"\";s:5:\"class\";s:0:\"\";s:2:\"id\";s:0:\"\";}s:13:\"default_value\";s:0:\"\";s:11:\"placeholder\";s:0:\"\";s:9:\"maxlength\";s:0:\"\";s:4:\"rows\";s:0:\"\";s:9:\"new_lines\";s:7:\"wpautop\";s:8:\"readonly\";i:0;s:8:\"disabled\";i:0;}', 'Description', 'description', 'publish', 'closed', 'closed', '', 'field_566219b2286fc', '', '', '2015-12-04 15:56:00', '2015-12-04 22:56:00', '', '475', 'http://www.agildata.com/?post_type=acf-field&p=478', '2', 'acf-field', '', '0');
INSERT INTO `wpag_posts` VALUES('479', '1', '2015-12-04 15:57:37', '2015-12-04 22:57:37', '', 'What Is AgilData', '', 'inherit', 'closed', 'closed', '', '467-revision-v1', '', '', '2015-12-04 15:57:37', '2015-12-04 22:57:37', '', '467', 'http://www.agildata.com/467-revision-v1/', '0', 'revision', '', '0');
INSERT INTO `wpag_posts` VALUES('480', '1', '2015-12-04 16:07:01', '2015-12-04 23:07:01', '', 'What Is It', '', 'publish', 'closed', 'closed', '', 'what-is-it-2', '', '', '2015-12-05 20:53:03', '2015-12-06 03:53:03', '', '0', 'http://www.agildata.com/?p=480', '4', 'nav_menu_item', '', '0');
INSERT INTO `wpag_posts` VALUES('483', '5', '2015-12-05 12:48:21', '2015-12-05 19:48:21', '<h2>BIG DATA TECHNICAL CONSULTING</h2>\r\n<strong>| PLANNING |</strong>\r\n\r\nJust getting started or about to commit to a plan?  Let AgilData provide early phase planning services spanning architecture review to development approach.  We have the expertise to ensure your plan-of-record utilizes the best practices of modern data infrastructure deployments with a strong focus on transforming your team’s development practice in time to ensure a successful project.', 'AgilData Consulting', '', 'inherit', 'closed', 'closed', '', '469-revision-v1', '', '', '2015-12-05 12:48:21', '2015-12-05 19:48:21', '', '469', 'http://www.agildata.com/469-revision-v1/', '0', 'revision', '', '0');
INSERT INTO `wpag_posts` VALUES('485', '5', '2015-12-05 12:49:57', '2015-12-05 19:49:57', '<h3>BIG DATA TECHNICAL CONSULTING</h3>\r\n<strong>| PLANNING |</strong>\r\n\r\nJust getting started or about to commit to a plan?  Let AgilData provide early phase planning services spanning architecture review to development approach.  We have the expertise to ensure your plan-of-record utilizes the best practices of modern data infrastructure deployments with a strong focus on transforming your team’s development practice in time to ensure a successful project.', 'AgilData Consulting', '', 'inherit', 'closed', 'closed', '', '469-revision-v1', '', '', '2015-12-05 12:49:57', '2015-12-05 19:49:57', '', '469', 'http://www.agildata.com/469-revision-v1/', '0', 'revision', '', '0');
INSERT INTO `wpag_posts` VALUES('487', '5', '2015-12-05 12:51:07', '2015-12-05 19:51:07', '<h3>BIG DATA TECHNICAL CONSULTING</h3>\r\n<strong>| PLANNING |</strong>\r\n\r\nJust getting started or about to commit to a plan?  Let AgilData provide early phase planning services spanning architecture review to development approach.  We have the expertise to ensure your plan-of-record utilizes the best practices of modern data infrastructure deployments with a strong focus on transforming your team’s development practice in time to ensure a successful project.\r\n<p style=\"padding-left: 30px;\">• Solution architecture evaluation and review\r\n• Technology selection\r\n• Engineering transformation\r\n• Data Architecture\r\n• Data Modeling\r\n• Data Format Translation\r\n• RDBMS Schema Design\r\n• Application design, development and testing</p>', 'AgilData Consulting', '', 'inherit', 'closed', 'closed', '', '469-revision-v1', '', '', '2015-12-05 12:51:07', '2015-12-05 19:51:07', '', '469', 'http://www.agildata.com/469-revision-v1/', '0', 'revision', '', '0');
INSERT INTO `wpag_posts` VALUES('489', '5', '2015-12-05 12:52:45', '2015-12-05 19:52:45', '<h2>BIG DATA TECHNICAL CONSULTING</h2>\r\n<h3>| PLANNING |</h3>\r\nJust getting started or about to commit to a plan?  Let AgilData provide early phase planning services spanning architecture review to development approach.  We have the expertise to ensure your plan-of-record utilizes the best practices of modern data infrastructure deployments with a strong focus on transforming your team’s development practice in time to ensure a successful project.\r\n<p style=\"padding-left: 30px;\">• Solution architecture evaluation and review\r\n• Technology selection\r\n• Engineering transformation\r\n• Data Architecture\r\n• Data Modeling\r\n• Data Format Translation\r\n• RDBMS Schema Design\r\n• Application design, development and testing</p>', 'AgilData Consulting', '', 'inherit', 'closed', 'closed', '', '469-revision-v1', '', '', '2015-12-05 12:52:45', '2015-12-05 19:52:45', '', '469', 'http://www.agildata.com/469-revision-v1/', '0', 'revision', '', '0');
INSERT INTO `wpag_posts` VALUES('488', '5', '2015-12-05 12:51:53', '2015-12-05 19:51:53', '<h1>BIG DATA TECHNICAL CONSULTING</h1>\r\n<h3><strong>| PLANNING |</strong></h3>\r\nJust getting started or about to commit to a plan?  Let AgilData provide early phase planning services spanning architecture review to development approach.  We have the expertise to ensure your plan-of-record utilizes the best practices of modern data infrastructure deployments with a strong focus on transforming your team’s development practice in time to ensure a successful project.\r\n<p style=\"padding-left: 30px;\">• Solution architecture evaluation and review\r\n• Technology selection\r\n• Engineering transformation\r\n• Data Architecture\r\n• Data Modeling\r\n• Data Format Translation\r\n• RDBMS Schema Design\r\n• Application design, development and testing</p>', 'AgilData Consulting', '', 'inherit', 'closed', 'closed', '', '469-revision-v1', '', '', '2015-12-05 12:51:53', '2015-12-05 19:51:53', '', '469', 'http://www.agildata.com/469-revision-v1/', '0', 'revision', '', '0');
INSERT INTO `wpag_posts` VALUES('490', '5', '2015-12-05 12:55:01', '2015-12-05 19:55:01', '<h2>BIG DATA TECHNICAL CONSULTING</h2>\r\n<h3>| PLANNING |</h3>\r\nJust getting started or about to commit to a plan?  Let AgilData provide early phase planning services spanning architecture review to development approach.  We have the expertise to ensure your plan-of-record utilizes the best practices of modern data infrastructure deployments with a strong focus on transforming your team’s development practice in time to ensure a successful project.\r\n<p style=\"padding-left: 30px;\">• Solution architecture evaluation and review\r\n• Technology selection\r\n• Engineering transformation\r\n• Data Architecture\r\n• Data Modeling\r\n• Data Format Translation\r\n• RDBMS Schema Design\r\n• Application design, development and testing</p>\r\n<p style=\"padding-left: 30px;\"></p>\r\n\r\n<h3>| IMPLEMENTATION |</h3>\r\nReal time stream processing and data pipeline development is complex.  AgilData has been there before and will work with your team sharing known best practices, design decisions and reveal potential pitfalls to ensure that projects are delivered on time and on budget.\r\n<p style=\"padding-left: 30px;\">• Engineering transformation\r\n• Engineering tools and processes\r\n• Software engineering\r\n• Deployment options, hardware, systems integration\r\n• Tuning, optimization, hardening and monitoring\r\n• Data continuity, normalization,\r\n• Real-time system data integration</p>\r\n&nbsp;\r\n<h3>| OPERATIONS |</h3>\r\nProduction issues keeping you up at night?  Whether you are in production now or upcoming an AgilData expert can mesh into your technical team to assess your current deployment’s ability to meet the ongoing needs of your business.\r\n<p style=\"padding-left: 30px;\">• Database Administration\r\n• DevOps Engineer\r\n• Deployment tools and processes\r\n• Performance assessment and optimization\r\n• Application Design, Development, QA, Testing\r\n• Application Development\r\n• Data Warehousing</p>', 'AgilData Consulting', '', 'inherit', 'closed', 'closed', '', '469-revision-v1', '', '', '2015-12-05 12:55:01', '2015-12-05 19:55:01', '', '469', 'http://www.agildata.com/469-revision-v1/', '0', 'revision', '', '0');
INSERT INTO `wpag_posts` VALUES('491', '5', '2015-12-05 12:56:30', '2015-12-05 19:56:30', '<h2>BIG DATA TECHNICAL CONSULTING</h2>\r\n<h3>| PLANNING |</h3>\r\nJust getting started or about to commit to a plan?  Let AgilData provide early phase planning services spanning architecture review to development approach.  We have the expertise to ensure your plan-of-record utilizes the best practices of modern data infrastructure deployments with a strong focus on transforming your team’s development practice in time to ensure a successful project.\r\n<p style=\"padding-left: 30px;\">• Solution architecture evaluation and review\r\n• Technology selection\r\n• Engineering transformation\r\n• Data Architecture\r\n• Data Modeling\r\n• Data Format Translation\r\n• RDBMS Schema Design\r\n• Application design, development and testing</p>\r\n\r\n<h3></h3>\r\n<h3>| IMPLEMENTATION |</h3>\r\nReal time stream processing and data pipeline development is complex.  AgilData has been there before and will work with your team sharing known best practices, design decisions and reveal potential pitfalls to ensure that projects are delivered on time and on budget.\r\n<p style=\"padding-left: 30px;\">• Engineering transformation\r\n• Engineering tools and processes\r\n• Software engineering\r\n• Deployment options, hardware, systems integration\r\n• Tuning, optimization, hardening and monitoring\r\n• Data continuity, normalization,\r\n• Real-time system data integration</p>\r\n&nbsp;\r\n<h3>| OPERATIONS |</h3>\r\nProduction issues keeping you up at night?  Whether you are in production now or upcoming an AgilData expert can mesh into your technical team to assess your current deployment’s ability to meet the ongoing needs of your business.\r\n<p style=\"padding-left: 30px;\">• Database Administration\r\n• DevOps Engineer\r\n• Deployment tools and processes\r\n• Performance assessment and optimization\r\n• Application Design, Development, QA, Testing\r\n• Application Development\r\n• Data Warehousing</p>', 'AgilData Consulting', '', 'inherit', 'closed', 'closed', '', '469-revision-v1', '', '', '2015-12-05 12:56:30', '2015-12-05 19:56:30', '', '469', 'http://www.agildata.com/469-revision-v1/', '0', 'revision', '', '0');
INSERT INTO `wpag_posts` VALUES('492', '5', '2015-12-05 12:57:18', '2015-12-05 19:57:18', '<h2>BIG DATA TECHNICAL CONSULTING</h2>\r\n<h3>| PLANNING |</h3>\r\nJust getting started or about to commit to a plan?  Let AgilData provide early phase planning services spanning architecture review to development approach.  We have the expertise to ensure your plan-of-record utilizes the best practices of modern data infrastructure deployments with a strong focus on transforming your team’s development practice in time to ensure a successful project.\r\n<p style=\"padding-left: 30px;\">• Solution architecture evaluation and review\r\n• Technology selection\r\n• Engineering transformation\r\n• Data Architecture\r\n• Data Modeling\r\n• Data Format Translation\r\n• RDBMS Schema Design\r\n• Application design, development and testing</p>\r\n&nbsp;\r\n<h3>| IMPLEMENTATION |</h3>\r\nReal time stream processing and data pipeline development is complex.  AgilData has been there before and will work with your team sharing known best practices, design decisions and reveal potential pitfalls to ensure that projects are delivered on time and on budget.\r\n<p style=\"padding-left: 30px;\">• Engineering transformation\r\n• Engineering tools and processes\r\n• Software engineering\r\n• Deployment options, hardware, systems integration\r\n• Tuning, optimization, hardening and monitoring\r\n• Data continuity, normalization,\r\n• Real-time system data integration</p>\r\n&nbsp;\r\n<h3>| OPERATIONS |</h3>\r\nProduction issues keeping you up at night?  Whether you are in production now or upcoming an AgilData expert can mesh into your technical team to assess your current deployment’s ability to meet the ongoing needs of your business.\r\n<p style=\"padding-left: 30px;\">• Database Administration\r\n• DevOps Engineer\r\n• Deployment tools and processes\r\n• Performance assessment and optimization\r\n• Application Design, Development, QA, Testing\r\n• Application Development\r\n• Data Warehousing</p>', 'AgilData Consulting', '', 'inherit', 'closed', 'closed', '', '469-revision-v1', '', '', '2015-12-05 12:57:18', '2015-12-05 19:57:18', '', '469', 'http://www.agildata.com/469-revision-v1/', '0', 'revision', '', '0');
INSERT INTO `wpag_posts` VALUES('493', '5', '2015-12-05 13:02:26', '2015-12-05 20:02:26', '', 'Real-Time Streaming Database', '', 'inherit', 'closed', 'closed', '', '38-revision-v1', '', '', '2015-12-05 13:02:26', '2015-12-05 20:02:26', '', '38', 'http://www.agildata.com/38-revision-v1/', '0', 'revision', '', '0');
INSERT INTO `wpag_posts` VALUES('495', '5', '2015-12-05 13:04:30', '2015-12-05 20:04:30', '', 'Real-Time Streaming Database', '', 'inherit', 'closed', 'closed', '', '38-revision-v1', '', '', '2015-12-05 13:04:30', '2015-12-05 20:04:30', '', '38', 'http://www.agildata.com/38-revision-v1/', '0', 'revision', '', '0');
INSERT INTO `wpag_posts` VALUES('499', '5', '2015-12-05 17:59:50', '2015-12-06 00:59:50', '<strong>BIG DATA TECHNICAL CONSULTING</strong>\r\n<h3>| PLANNING |</h3>\r\nJust getting started or about to commit to a plan?  Let AgilData provide early phase planning services spanning architecture review to development approach.  We have the expertise to ensure your plan-of-record utilizes the best practices of modern data infrastructure deployments with a strong focus on transforming your team’s development practice in time to ensure a successful project.\r\n<p style=\"padding-left: 30px;\">• Solution architecture evaluation and review\r\n• Technology selection\r\n• Engineering transformation\r\n• Data Architecture\r\n• Data Modeling\r\n• Data Format Translation\r\n• RDBMS Schema Design\r\n• Application design, development and testing</p>\r\n&nbsp;\r\n<h3>| IMPLEMENTATION |</h3>\r\nReal time stream processing and data pipeline development is complex.  AgilData has been there before and will work with your team sharing known best practices, design decisions and reveal potential pitfalls to ensure that projects are delivered on time and on budget.\r\n<p style=\"padding-left: 30px;\">• Engineering transformation\r\n• Engineering tools and processes\r\n• Software engineering\r\n• Deployment options, hardware, systems integration\r\n• Tuning, optimization, hardening and monitoring\r\n• Data continuity, normalization,\r\n• Real-time system data integration</p>\r\n&nbsp;\r\n<h3>| OPERATIONS |</h3>\r\nProduction issues keeping you up at night?  Whether you are in production now or upcoming an AgilData expert can mesh into your technical team to assess your current deployment’s ability to meet the ongoing needs of your business.\r\n<p style=\"padding-left: 30px;\">• Database Administration\r\n• DevOps Engineer\r\n• Deployment tools and processes\r\n• Performance assessment and optimization\r\n• Application Design, Development, QA, Testing\r\n• Application Development\r\n• Data Warehousing</p>', 'AgilData Consulting', '', 'inherit', 'closed', 'closed', '', '469-revision-v1', '', '', '2015-12-05 17:59:50', '2015-12-06 00:59:50', '', '469', 'http://www.agildata.com/469-revision-v1/', '0', 'revision', '', '0');
INSERT INTO `wpag_posts` VALUES('500', '5', '2015-12-05 18:01:09', '2015-12-06 01:01:09', '<strong>BIG DATA TECHNICAL CONSULTING</strong>\r\n<h3>| PLANNING |</h3>\r\nJust getting started or about to commit to a plan?  Let AgilData provide early phase planning services spanning architecture review to development approach.  We have the expertise to ensure your plan-of-record utilizes the best practices of modern data infrastructure deployments with a strong focus on transforming your team’s development practice in time to ensure a successful project.\r\n<p style=\"padding-left: 30px;\">• Solution architecture evaluation and review\r\n• Technology selection\r\n• Engineering transformation\r\n• Data Architecture\r\n• Data Modeling\r\n• Data Format Translation\r\n• RDBMS Schema Design\r\n• Application design, development and testing</p>\r\n&nbsp;\r\n<h3>| IMPLEMENTATION |</h3>\r\nReal time stream processing and data pipeline development is complex.  AgilData has been there before and will work with your team sharing known best practices, design decisions and reveal potential pitfalls to ensure that projects are delivered on time and on budget.\r\n<p style=\"padding-left: 30px;\">• Engineering transformation\r\n• Engineering tools and processes\r\n• Software engineering\r\n• Deployment options, hardware, systems integration\r\n• Tuning, optimization, hardening and monitoring\r\n• Data continuity, normalization,\r\n• Real-time system data integration</p>\r\n&nbsp;\r\n<h3>| OPERATIONS |</h3>\r\nProduction issues keeping you up at night?  Whether you are in production now or upcoming an AgilData expert can mesh into your technical team to assess your current deployment’s ability to meet the ongoing needs of your business.\r\n<p style=\"padding-left: 30px;\">• Database Administration\r\n• DevOps Engineer\r\n• Deployment tools and processes\r\n• Performance assessment and optimization\r\n• Application Design, Development, QA, Testing\r\n• Application Development\r\n• Data Warehousing</p>', 'AgilData Technical Consulting', '', 'inherit', 'closed', 'closed', '', '469-revision-v1', '', '', '2015-12-05 18:01:09', '2015-12-06 01:01:09', '', '469', 'http://www.agildata.com/469-revision-v1/', '0', 'revision', '', '0');
INSERT INTO `wpag_posts` VALUES('502', '5', '2015-12-05 18:02:22', '2015-12-06 01:02:22', '<strong>BIG DATA TECHNICAL CONSULTING</strong>\r\n<h3>| PLANNING |</h3>\r\nJust getting started or about to commit to a plan?  Let AgilData provide early phase planning services spanning architecture review to development approach.  We have the expertise to ensure your plan-of-record utilizes the best practices of modern data infrastructure deployments with a strong focus on transforming your team’s development practice in time to ensure a successful project.\r\n<p style=\"padding-left: 30px;\">• Solution architecture evaluation and review\r\n• Technology selection\r\n• Engineering transformation\r\n• Data Architecture\r\n• Data Modeling\r\n• Data Format Translation\r\n• RDBMS Schema Design\r\n• Application design, development and testing</p>\r\n&nbsp;\r\n<h3>| IMPLEMENTATION |</h3>\r\nReal time stream processing and data pipeline development is complex.  AgilData has been there before and will work with your team sharing known best practices, design decisions and reveal potential pitfalls to ensure that projects are delivered on time and on budget.\r\n<p style=\"padding-left: 30px;\">• Engineering transformation\r\n• Engineering tools and processes\r\n• Software engineering\r\n• Deployment options, hardware, systems integration\r\n• Tuning, optimization, hardening and monitoring\r\n• Data continuity, normalization,\r\n• Real-time system data integration</p>\r\n&nbsp;\r\n<h3>| OPERATIONS |</h3>\r\nProduction issues keeping you up at night?  Whether you are in production now or upcoming an AgilData expert can mesh into your technical team to assess your current deployment’s ability to meet the ongoing needs of your business.\r\n<p style=\"padding-left: 30px;\">• Database Administration\r\n• DevOps Engineer\r\n• Deployment tools and processes\r\n• Performance assessment and optimization\r\n• Application Design, Development, QA, Testing\r\n• Application Development\r\n• Data Warehousing</p>', 'AgilData Technical Consulting', '', 'inherit', 'closed', 'closed', '', '469-revision-v1', '', '', '2015-12-05 18:02:22', '2015-12-06 01:02:22', '', '469', 'http://www.agildata.com/469-revision-v1/', '0', 'revision', '', '0');
INSERT INTO `wpag_posts` VALUES('501', '5', '2015-12-05 18:01:50', '2015-12-06 01:01:50', '<h4><strong>BIG DATA TECHNICAL CONSULTING</strong></h4>\r\n<h3>| PLANNING |</h3>\r\nJust getting started or about to commit to a plan?  Let AgilData provide early phase planning services spanning architecture review to development approach.  We have the expertise to ensure your plan-of-record utilizes the best practices of modern data infrastructure deployments with a strong focus on transforming your team’s development practice in time to ensure a successful project.\r\n<p style=\"padding-left: 30px;\">• Solution architecture evaluation and review\r\n• Technology selection\r\n• Engineering transformation\r\n• Data Architecture\r\n• Data Modeling\r\n• Data Format Translation\r\n• RDBMS Schema Design\r\n• Application design, development and testing</p>\r\n&nbsp;\r\n<h3>| IMPLEMENTATION |</h3>\r\nReal time stream processing and data pipeline development is complex.  AgilData has been there before and will work with your team sharing known best practices, design decisions and reveal potential pitfalls to ensure that projects are delivered on time and on budget.\r\n<p style=\"padding-left: 30px;\">• Engineering transformation\r\n• Engineering tools and processes\r\n• Software engineering\r\n• Deployment options, hardware, systems integration\r\n• Tuning, optimization, hardening and monitoring\r\n• Data continuity, normalization,\r\n• Real-time system data integration</p>\r\n&nbsp;\r\n<h3>| OPERATIONS |</h3>\r\nProduction issues keeping you up at night?  Whether you are in production now or upcoming an AgilData expert can mesh into your technical team to assess your current deployment’s ability to meet the ongoing needs of your business.\r\n<p style=\"padding-left: 30px;\">• Database Administration\r\n• DevOps Engineer\r\n• Deployment tools and processes\r\n• Performance assessment and optimization\r\n• Application Design, Development, QA, Testing\r\n• Application Development\r\n• Data Warehousing</p>', 'AgilData Technical Consulting', '', 'inherit', 'closed', 'closed', '', '469-revision-v1', '', '', '2015-12-05 18:01:50', '2015-12-06 01:01:50', '', '469', 'http://www.agildata.com/469-revision-v1/', '0', 'revision', '', '0');
INSERT INTO `wpag_posts` VALUES('503', '5', '2015-12-05 18:04:32', '2015-12-06 01:04:32', '<h5>Big Data Applications, Infrastructures and Operations</h5>\r\n<h3>| PLANNING |</h3>\r\nJust getting started or about to commit to a plan?  Let AgilData provide early phase planning services spanning architecture review to development approach.  We have the expertise to ensure your plan-of-record utilizes the best practices of modern data infrastructure deployments with a strong focus on transforming your team’s development practice in time to ensure a successful project.\r\n<p style=\"padding-left: 30px;\">• Solution architecture evaluation and review\r\n• Technology selection\r\n• Engineering transformation\r\n• Data Architecture\r\n• Data Modeling\r\n• Data Format Translation\r\n• RDBMS Schema Design\r\n• Application design, development and testing</p>\r\n&nbsp;\r\n<h3>| IMPLEMENTATION |</h3>\r\nReal time stream processing and data pipeline development is complex.  AgilData has been there before and will work with your team sharing known best practices, design decisions and reveal potential pitfalls to ensure that projects are delivered on time and on budget.\r\n<p style=\"padding-left: 30px;\">• Engineering transformation\r\n• Engineering tools and processes\r\n• Software engineering\r\n• Deployment options, hardware, systems integration\r\n• Tuning, optimization, hardening and monitoring\r\n• Data continuity, normalization,\r\n• Real-time system data integration</p>\r\n&nbsp;\r\n<h3>| OPERATIONS |</h3>\r\nProduction issues keeping you up at night?  Whether you are in production now or upcoming an AgilData expert can mesh into your technical team to assess your current deployment’s ability to meet the ongoing needs of your business.\r\n<p style=\"padding-left: 30px;\">• Database Administration\r\n• DevOps Engineer\r\n• Deployment tools and processes\r\n• Performance assessment and optimization\r\n• Application Design, Development, QA, Testing\r\n• Application Development\r\n• Data Warehousing</p>', 'AgilData Technical Consulting', '', 'inherit', 'closed', 'closed', '', '469-revision-v1', '', '', '2015-12-05 18:04:32', '2015-12-06 01:04:32', '', '469', 'http://www.agildata.com/469-revision-v1/', '0', 'revision', '', '0');
INSERT INTO `wpag_posts` VALUES('521', '5', '2015-12-14 22:54:21', '2015-12-15 05:54:21', '<h2>Big Data Applications, Infrastructures and Operations</h2>\r\n<h3>| PLANNING |</h3>\r\nJust getting started or about to commit to a plan?  Let AgilData provide early phase planning services spanning architecture review to development approach.  We have the expertise to ensure your plan-of-record utilizes the best practices of modern data infrastructure deployments with a strong focus on transforming your team’s development practice in time to ensure a successful project.\r\n<p style=\"padding-left: 30px;\">• Solution architecture evaluation and review\r\n• Technology selection\r\n• Engineering transformation\r\n• Data Architecture\r\n• Data Modeling\r\n• Data Format Translation\r\n• RDBMS Schema Design\r\n• Application design, development and testing</p>\r\n&nbsp;\r\n<h3>| IMPLEMENTATION |</h3>\r\nReal time stream processing and data pipeline development is complex.  AgilData has been there before and will work with your team sharing known best practices, design decisions and reveal potential pitfalls to ensure that projects are delivered on time and on budget.\r\n<p style=\"padding-left: 30px;\">• Engineering transformation\r\n• Engineering tools and processes\r\n• Software engineering\r\n• Deployment options, hardware, systems integration\r\n• Tuning, optimization, hardening and monitoring\r\n• Data continuity, normalization,\r\n• Real-time system data integration</p>\r\n&nbsp;\r\n<h3>| OPERATIONS |</h3>\r\nProduction issues keeping you up at night?  Whether you are in production now or upcoming an AgilData expert can mesh into your technical team to assess your current deployment’s ability to meet the ongoing needs of your business.\r\n<p style=\"padding-left: 30px;\">• Database Administration\r\n• DevOps Engineer\r\n• Deployment tools and processes\r\n• Performance assessment and optimization\r\n• Application Design, Development, QA, Testing\r\n• Application Development\r\n• Data Warehousing</p>\r\n&nbsp;\r\n<h3>| ENGAGEMENT |</h3>\r\nProject durations vary upon your needs.  We’ve kept it simple for you to meter your cost in small increments to ensure you are getting the most out of our services relative to your needs and timeline.  Contact us below to discover how easy it is to work with AgilData.\r\n<p style=\"padding-left: 30px;\">• Discovery Call - 1 hour (No Fee)\r\n• Let’s get to know each other and create alignment\r\n• Kickstart Session - 1 day (Fixed Fee)\r\n• Meetup at your offices to deep dive on the tech and get a report on findings\r\n• Work Cycle - 2 week units (Architect Rate, Engineer Rate)\r\n• Recurring work cycles in simple in two week intervals with exit at any time.</p>\r\n[gravityform id=\"1\" title=\"false\" description=\"false\"]', 'AgilData Technical Consulting', '', 'inherit', 'closed', 'closed', '', '469-revision-v1', '', '', '2015-12-14 22:54:21', '2015-12-15 05:54:21', '', '469', 'http://www.agildata.com/469-revision-v1/', '0', 'revision', '', '0');
INSERT INTO `wpag_posts` VALUES('504', '5', '2015-12-05 18:05:13', '2015-12-06 01:05:13', '<h2>Big Data Applications, Infrastructures and Operations</h2>\r\n<h3>| PLANNING |</h3>\r\nJust getting started or about to commit to a plan?  Let AgilData provide early phase planning services spanning architecture review to development approach.  We have the expertise to ensure your plan-of-record utilizes the best practices of modern data infrastructure deployments with a strong focus on transforming your team’s development practice in time to ensure a successful project.\r\n<p style=\"padding-left: 30px;\">• Solution architecture evaluation and review\r\n• Technology selection\r\n• Engineering transformation\r\n• Data Architecture\r\n• Data Modeling\r\n• Data Format Translation\r\n• RDBMS Schema Design\r\n• Application design, development and testing</p>\r\n&nbsp;\r\n<h3>| IMPLEMENTATION |</h3>\r\nReal time stream processing and data pipeline development is complex.  AgilData has been there before and will work with your team sharing known best practices, design decisions and reveal potential pitfalls to ensure that projects are delivered on time and on budget.\r\n<p style=\"padding-left: 30px;\">• Engineering transformation\r\n• Engineering tools and processes\r\n• Software engineering\r\n• Deployment options, hardware, systems integration\r\n• Tuning, optimization, hardening and monitoring\r\n• Data continuity, normalization,\r\n• Real-time system data integration</p>\r\n&nbsp;\r\n<h3>| OPERATIONS |</h3>\r\nProduction issues keeping you up at night?  Whether you are in production now or upcoming an AgilData expert can mesh into your technical team to assess your current deployment’s ability to meet the ongoing needs of your business.\r\n<p style=\"padding-left: 30px;\">• Database Administration\r\n• DevOps Engineer\r\n• Deployment tools and processes\r\n• Performance assessment and optimization\r\n• Application Design, Development, QA, Testing\r\n• Application Development\r\n• Data Warehousing</p>', 'AgilData Technical Consulting', '', 'inherit', 'closed', 'closed', '', '469-revision-v1', '', '', '2015-12-05 18:05:13', '2015-12-06 01:05:13', '', '469', 'http://www.agildata.com/469-revision-v1/', '0', 'revision', '', '0');
INSERT INTO `wpag_posts` VALUES('505', '5', '2015-12-05 18:08:35', '2015-12-06 01:08:35', '', 'AgilDataDiagrams_AgilDataV2x', '', 'inherit', 'open', 'closed', '', 'agildatadiagrams_agildatav2x', '', '', '2015-12-05 18:08:35', '2015-12-06 01:08:35', '', '467', 'http://www.agildata.com/wp-content/uploads/2015/12/AgilDataDiagrams_AgilDataV2x.png', '0', 'attachment', 'image/png', '0');
INSERT INTO `wpag_posts` VALUES('506', '5', '2015-12-05 18:13:08', '2015-12-06 01:13:08', '<a href=\"http://www.agildata.com/wp-content/uploads/2015/12/AgilDataDiagrams_AgilDataV2x.png\"><img class=\"aligncenter wp-image-505\" src=\"http://www.agildata.com/wp-content/uploads/2015/12/AgilDataDiagrams_AgilDataV2x-300x300.png\" alt=\"AgilDataDiagrams_AgilDataV2x\" width=\"720\" height=\"450\" /></a>', 'What Is AgilData', '', 'inherit', 'closed', 'closed', '', '467-autosave-v1', '', '', '2015-12-05 18:13:08', '2015-12-06 01:13:08', '', '467', 'http://www.agildata.com/467-autosave-v1/', '0', 'revision', '', '0');
INSERT INTO `wpag_posts` VALUES('520', '5', '2015-12-14 22:53:18', '0000-00-00 00:00:00', '', 'Auto Draft', '', 'auto-draft', 'open', 'open', '', '', '', '', '2015-12-14 22:53:18', '0000-00-00 00:00:00', '', '0', 'http://www.agildata.com/?p=520', '0', 'post', '', '0');
INSERT INTO `wpag_posts` VALUES('507', '5', '2015-12-05 18:09:04', '2015-12-06 01:09:04', '<a href=\"http://www.agildata.com/wp-content/uploads/2015/12/AgilDataDiagrams_AgilDataV2x.png\"><img class=\"alignnone size-full wp-image-505\" src=\"http://www.agildata.com/wp-content/uploads/2015/12/AgilDataDiagrams_AgilDataV2x.png\" alt=\"AgilDataDiagrams_AgilDataV2x\" width=\"1280\" height=\"800\" /></a>', 'What Is AgilData', '', 'inherit', 'closed', 'closed', '', '467-revision-v1', '', '', '2015-12-05 18:09:04', '2015-12-06 01:09:04', '', '467', 'http://www.agildata.com/467-revision-v1/', '0', 'revision', '', '0');
INSERT INTO `wpag_posts` VALUES('511', '5', '2015-12-05 20:50:59', '2015-12-06 03:50:59', '', 'What Is AgilData', '', 'inherit', 'closed', 'closed', '', '467-revision-v1', '', '', '2015-12-05 20:50:59', '2015-12-06 03:50:59', '', '467', 'http://www.agildata.com/467-revision-v1/', '0', 'revision', '', '0');
INSERT INTO `wpag_posts` VALUES('508', '5', '2015-12-05 18:09:58', '2015-12-06 01:09:58', '<a href=\"http://www.agildata.com/wp-content/uploads/2015/12/AgilDataDiagrams_AgilDataV2x.png\"><img class=\"aligncenter wp-image-505 size-large\" src=\"http://www.agildata.com/wp-content/uploads/2015/12/AgilDataDiagrams_AgilDataV2x-1024x1024.png\" alt=\"AgilDataDiagrams_AgilDataV2x\" width=\"640\" height=\"640\" /></a>', 'What Is AgilData', '', 'inherit', 'closed', 'closed', '', '467-revision-v1', '', '', '2015-12-05 18:09:58', '2015-12-06 01:09:58', '', '467', 'http://www.agildata.com/467-revision-v1/', '0', 'revision', '', '0');
INSERT INTO `wpag_posts` VALUES('510', '5', '2015-12-05 18:13:34', '2015-12-06 01:13:34', '<a href=\"http://www.agildata.com/wp-content/uploads/2015/12/AgilDataDiagrams_AgilDataV2x.png\"><img class=\"alignnone size-large wp-image-505\" src=\"http://www.agildata.com/wp-content/uploads/2015/12/AgilDataDiagrams_AgilDataV2x-1024x1024.png\" alt=\"AgilDataDiagrams_AgilDataV2x\" width=\"640\" height=\"640\" /></a>', 'What Is AgilData', '', 'inherit', 'closed', 'closed', '', '467-revision-v1', '', '', '2015-12-05 18:13:34', '2015-12-06 01:13:34', '', '467', 'http://www.agildata.com/467-revision-v1/', '0', 'revision', '', '0');
INSERT INTO `wpag_posts` VALUES('509', '5', '2015-12-05 18:11:16', '2015-12-06 01:11:16', '<a href=\"http://www.agildata.com/wp-content/uploads/2015/12/AgilDataDiagrams_AgilDataV2x.png\"><img class=\"aligncenter wp-image-505 size-medium\" src=\"http://www.agildata.com/wp-content/uploads/2015/12/AgilDataDiagrams_AgilDataV2x-300x300.png\" alt=\"AgilDataDiagrams_AgilDataV2x\" width=\"300\" height=\"300\" /></a>', 'What Is AgilData', '', 'inherit', 'closed', 'closed', '', '467-revision-v1', '', '', '2015-12-05 18:11:16', '2015-12-06 01:11:16', '', '467', 'http://www.agildata.com/467-revision-v1/', '0', 'revision', '', '0');
INSERT INTO `wpag_posts` VALUES('513', '5', '2015-12-05 20:53:03', '2015-12-06 03:53:03', '', 'Consulting', '', 'publish', 'closed', 'closed', '', 'consulting-2', '', '', '2015-12-05 20:53:03', '2015-12-06 03:53:03', '', '0', 'http://www.agildata.com/?p=513', '2', 'nav_menu_item', '', '0');
INSERT INTO `wpag_posts` VALUES('515', '5', '2015-12-05 20:55:53', '2015-12-06 03:55:53', '<h2>Big Data Applications, Infrastructures and Operations</h2>\r\n<h3>| PLANNING |</h3>\r\nJust getting started or about to commit to a plan?  Let AgilData provide early phase planning services spanning architecture review to development approach.  We have the expertise to ensure your plan-of-record utilizes the best practices of modern data infrastructure deployments with a strong focus on transforming your team’s development practice in time to ensure a successful project.\r\n<p style=\"padding-left: 30px;\">• Solution architecture evaluation and review\r\n• Technology selection\r\n• Engineering transformation\r\n• Data Architecture\r\n• Data Modeling\r\n• Data Format Translation\r\n• RDBMS Schema Design\r\n• Application design, development and testing</p>\r\n&nbsp;\r\n<h3>| IMPLEMENTATION |</h3>\r\nReal time stream processing and data pipeline development is complex.  AgilData has been there before and will work with your team sharing known best practices, design decisions and reveal potential pitfalls to ensure that projects are delivered on time and on budget.\r\n<p style=\"padding-left: 30px;\">• Engineering transformation\r\n• Engineering tools and processes\r\n• Software engineering\r\n• Deployment options, hardware, systems integration\r\n• Tuning, optimization, hardening and monitoring\r\n• Data continuity, normalization,\r\n• Real-time system data integration</p>\r\n&nbsp;\r\n<h3>| OPERATIONS |</h3>\r\nProduction issues keeping you up at night?  Whether you are in production now or upcoming an AgilData expert can mesh into your technical team to assess your current deployment’s ability to meet the ongoing needs of your business.\r\n<p style=\"padding-left: 30px;\">• Database Administration\r\n• DevOps Engineer\r\n• Deployment tools and processes\r\n• Performance assessment and optimization\r\n• Application Design, Development, QA, Testing\r\n• Application Development\r\n• Data Warehousing</p>\r\n<p style=\"padding-left: 30px;\"></p>\r\n\r\n<h3> | ENGAGEMENT |</h3>\r\nProject durations vary upon your needs.  We’ve kept it simple for you to meter your cost in small increments to ensure you are getting the most out of our services relative to your needs and timeline.  Contact us below to discover how easy it is to work with AgilData.\r\n<p style=\"padding-left: 30px;\">• Discovery Call - 1 hour (No Fee)\r\n• Let’s get to know each other and create alignment\r\n• Kickstart Session - 1 day (Fixed Fee)\r\n• Meetup at your offices to deep dive on the tech and get a report on findings\r\n• Work Cycle - 2 week units (Architect Rate, Engineer Rate)\r\n• Recurring work cycles in simple in two week intervals with exit at any time.</p>', 'AgilData Technical Consulting', '', 'inherit', 'closed', 'closed', '', '469-revision-v1', '', '', '2015-12-05 20:55:53', '2015-12-06 03:55:53', '', '469', 'http://www.agildata.com/469-revision-v1/', '0', 'revision', '', '0');
INSERT INTO `wpag_posts` VALUES('516', '5', '2015-12-05 20:56:36', '2015-12-06 03:56:36', '<h2>Big Data Applications, Infrastructures and Operations</h2>\r\n<h3>| PLANNING |</h3>\r\nJust getting started or about to commit to a plan?  Let AgilData provide early phase planning services spanning architecture review to development approach.  We have the expertise to ensure your plan-of-record utilizes the best practices of modern data infrastructure deployments with a strong focus on transforming your team’s development practice in time to ensure a successful project.\r\n<p style=\"padding-left: 30px;\">• Solution architecture evaluation and review\r\n• Technology selection\r\n• Engineering transformation\r\n• Data Architecture\r\n• Data Modeling\r\n• Data Format Translation\r\n• RDBMS Schema Design\r\n• Application design, development and testing</p>\r\n&nbsp;\r\n<h3>| IMPLEMENTATION |</h3>\r\nReal time stream processing and data pipeline development is complex.  AgilData has been there before and will work with your team sharing known best practices, design decisions and reveal potential pitfalls to ensure that projects are delivered on time and on budget.\r\n<p style=\"padding-left: 30px;\">• Engineering transformation\r\n• Engineering tools and processes\r\n• Software engineering\r\n• Deployment options, hardware, systems integration\r\n• Tuning, optimization, hardening and monitoring\r\n• Data continuity, normalization,\r\n• Real-time system data integration</p>\r\n&nbsp;\r\n<h3>| OPERATIONS |</h3>\r\nProduction issues keeping you up at night?  Whether you are in production now or upcoming an AgilData expert can mesh into your technical team to assess your current deployment’s ability to meet the ongoing needs of your business.\r\n<p style=\"padding-left: 30px;\">• Database Administration\r\n• DevOps Engineer\r\n• Deployment tools and processes\r\n• Performance assessment and optimization\r\n• Application Design, Development, QA, Testing\r\n• Application Development\r\n• Data Warehousing</p>\r\n\r\n<h3></h3>\r\n<h3>| ENGAGEMENT |</h3>\r\nProject durations vary upon your needs.  We’ve kept it simple for you to meter your cost in small increments to ensure you are getting the most out of our services relative to your needs and timeline.  Contact us below to discover how easy it is to work with AgilData.\r\n<p style=\"padding-left: 30px;\">• Discovery Call - 1 hour (No Fee)\r\n• Let’s get to know each other and create alignment\r\n• Kickstart Session - 1 day (Fixed Fee)\r\n• Meetup at your offices to deep dive on the tech and get a report on findings\r\n• Work Cycle - 2 week units (Architect Rate, Engineer Rate)\r\n• Recurring work cycles in simple in two week intervals with exit at any time.</p>', 'AgilData Technical Consulting', '', 'inherit', 'closed', 'closed', '', '469-revision-v1', '', '', '2015-12-05 20:56:36', '2015-12-06 03:56:36', '', '469', 'http://www.agildata.com/469-revision-v1/', '0', 'revision', '', '0');
INSERT INTO `wpag_posts` VALUES('517', '5', '2015-12-05 20:57:24', '2015-12-06 03:57:24', '<h2>Big Data Applications, Infrastructures and Operations</h2>\r\n<h3>| PLANNING |</h3>\r\nJust getting started or about to commit to a plan?  Let AgilData provide early phase planning services spanning architecture review to development approach.  We have the expertise to ensure your plan-of-record utilizes the best practices of modern data infrastructure deployments with a strong focus on transforming your team’s development practice in time to ensure a successful project.\r\n<p style=\"padding-left: 30px;\">• Solution architecture evaluation and review\r\n• Technology selection\r\n• Engineering transformation\r\n• Data Architecture\r\n• Data Modeling\r\n• Data Format Translation\r\n• RDBMS Schema Design\r\n• Application design, development and testing</p>\r\n&nbsp;\r\n<h3>| IMPLEMENTATION |</h3>\r\nReal time stream processing and data pipeline development is complex.  AgilData has been there before and will work with your team sharing known best practices, design decisions and reveal potential pitfalls to ensure that projects are delivered on time and on budget.\r\n<p style=\"padding-left: 30px;\">• Engineering transformation\r\n• Engineering tools and processes\r\n• Software engineering\r\n• Deployment options, hardware, systems integration\r\n• Tuning, optimization, hardening and monitoring\r\n• Data continuity, normalization,\r\n• Real-time system data integration</p>\r\n&nbsp;\r\n<h3>| OPERATIONS |</h3>\r\nProduction issues keeping you up at night?  Whether you are in production now or upcoming an AgilData expert can mesh into your technical team to assess your current deployment’s ability to meet the ongoing needs of your business.\r\n<p style=\"padding-left: 30px;\">• Database Administration\r\n• DevOps Engineer\r\n• Deployment tools and processes\r\n• Performance assessment and optimization\r\n• Application Design, Development, QA, Testing\r\n• Application Development\r\n• Data Warehousing</p>\r\n&nbsp;\r\n<h3>| ENGAGEMENT |</h3>\r\nProject durations vary upon your needs.  We’ve kept it simple for you to meter your cost in small increments to ensure you are getting the most out of our services relative to your needs and timeline.  Contact us below to discover how easy it is to work with AgilData.\r\n<p style=\"padding-left: 30px;\">• Discovery Call - 1 hour (No Fee)\r\n• Let’s get to know each other and create alignment\r\n• Kickstart Session - 1 day (Fixed Fee)\r\n• Meetup at your offices to deep dive on the tech and get a report on findings\r\n• Work Cycle - 2 week units (Architect Rate, Engineer Rate)\r\n• Recurring work cycles in simple in two week intervals with exit at any time.</p>', 'AgilData Technical Consulting', '', 'inherit', 'closed', 'closed', '', '469-revision-v1', '', '', '2015-12-05 20:57:24', '2015-12-06 03:57:24', '', '469', 'http://www.agildata.com/469-revision-v1/', '0', 'revision', '', '0');
INSERT INTO `wpag_posts` VALUES('518', '5', '2015-12-05 21:02:29', '2015-12-06 04:02:29', '', 'Real-Time Streaming Database', '', 'inherit', 'closed', 'closed', '', '38-revision-v1', '', '', '2015-12-05 21:02:29', '2015-12-06 04:02:29', '', '38', 'http://www.agildata.com/38-revision-v1/', '0', 'revision', '', '0');
INSERT INTO `wpag_posts` VALUES('527', '5', '2015-12-18 13:33:27', '2015-12-18 20:33:27', '<h2>Big Data Applications, Infrastructures and Operations</h2>\n<h3>| PLANNING |</h3>\nJust getting started or about to commit to a plan?  Let AgilData provide early phase technical consulting and planning services spanning architecture review to development approach.  We have the expertise to ensure your plan-of-record utilizes the best practices of modern data infrastructure deployments with a strong focus on transforming your team’s development practice in time to ensure a successful project.\n<p style=\"padding-left: 30px;\">• Solution architecture evaluation and review\n• Technology selection\n• Engineering transformation\n• Data Architecture\n• Data Modeling\n• Data Format Translation\n• RDBMS Schema Design\n• Application design, development and testing</p>\n\n<h4><a href=\"http://www.agildata.com/big-data-technical-consulting-request/\"><img class=\"alignnone size-full wp-image-530\" src=\"http://www.agildata.com/wp-content/uploads/2015/12/AD-Need-This-Click-Here.jpg\" alt=\"AD Need This Click Here\" width=\"232\" height=\"64\" /></a></h4>\n&nbsp;\n<h3>| IMPLEMENTATION |</h3>\nReal time stream processing and data pipeline development is complex.  AgilData has been there before and will work with your team sharing known best practices, design decisions and reveal potential pitfalls to ensure that projects are delivered on time and on budget.\n<p style=\"padding-left: 30px;\">• Engineering transformation\n• Engineering tools and processes\n• Software engineering\n• Deployment options, hardware, systems integration\n• Tuning, optimization, hardening and monitoring\n• Data continuity, normalization,\n• Real-time system data integration</p>\n\n<h4><a href=\"http://www.agildata.com/big-data-technical-consulting-request/\"><img class=\"alignnone size-full wp-image-530\" src=\"http://www.agildata.com/wp-content/uploads/2015/12/AD-Need-This-Click-Here.jpg\" alt=\"AD Need This Click Here\" width=\"232\" height=\"64\" /></a></h4>\n&nbsp;\n<h3>| OPERATIONS |</h3>\nProduction issues keeping you up at night?  Whether you are in production now or upcoming an AgilData expert can mesh into your technical team to assess your current deployment’s ability to meet the ongoing needs of your business.\n<p style=\"padding-left: 30px;\">• Database Administration\n• DevOps Engineer\n• Deployment tools and processes\n• Performance assessment and optimization\n• Application Design, Development, QA, Testing\n• Application Development\n• Data Warehousing</p>\n\n<h4><a href=\"http://www.agildata.com/big-data-technical-consulting-request/\"><img class=\"alignnone size-full wp-image-530\" src=\"http://www.agildata.com/wp-content/uploads/2015/12/AD-Need-This-Click-Here.jpg\" alt=\"AD Need This Click Here\" width=\"232\" height=\"64\" /></a></h4>\n&nbsp;\n<h3>| ENGAGEMENT |</h3>\nProject durations vary upon your needs.  We’ve kept it simple for you to meter your cost in small increments to ensure you are getting the most out of our technical consulting services relative to your needs and timeline.  Contact us below to discover how easy it is to work with AgilData.\n<p style=\"padding-left: 30px;\">• Discovery Call - 1 hour (No Fee)\n• Let’s get to know each other and create alignment\n• Kickstart Session - 1 day (Fixed Fee)\n• Meetup at your offices to deep dive on the tech and get a report on findings\n• Work Cycle - 2 week units (Architect Rate, Engineer Rate)\n• Recurring work cycles in simple in two week intervals with exit at any time.</p>\n\n<h3></h3>\n<h4><a href=\"http://www.agildata.com/big-data-technical-consulting-request/\"><img class=\"alignnone size-full wp-image-530\" src=\"http://www.agildata.com/wp-content/uploads/2015/12/AD-Need-This-Click-Here.jpg\" alt=\"AD Need This Click Here\" width=\"232\" height=\"64\" /></a></h4>\n&nbsp;\n<h2>Want to chat more about how we can help?\nGive us a shout.</h2>\n[gravityform id=\"4\" title=\"false\" description=\"false\"]', 'AgilData Technical Consulting', '', 'inherit', 'closed', 'closed', '', '469-autosave-v1', '', '', '2015-12-18 13:33:27', '2015-12-18 20:33:27', '', '469', 'http://www.agildata.com/469-autosave-v1/', '0', 'revision', '', '0');
INSERT INTO `wpag_posts` VALUES('523', '5', '2015-12-14 22:56:25', '2015-12-15 05:56:25', '<h2>Big Data Applications, Infrastructures and Operations</h2>\r\n<h3>| PLANNING |</h3>\r\nJust getting started or about to commit to a plan?  Let AgilData provide early phase planning services spanning architecture review to development approach.  We have the expertise to ensure your plan-of-record utilizes the best practices of modern data infrastructure deployments with a strong focus on transforming your team’s development practice in time to ensure a successful project.\r\n<p style=\"padding-left: 30px;\">• Solution architecture evaluation and review\r\n• Technology selection\r\n• Engineering transformation\r\n• Data Architecture\r\n• Data Modeling\r\n• Data Format Translation\r\n• RDBMS Schema Design\r\n• Application design, development and testing</p>\r\n&nbsp;\r\n<h3>| IMPLEMENTATION |</h3>\r\nReal time stream processing and data pipeline development is complex.  AgilData has been there before and will work with your team sharing known best practices, design decisions and reveal potential pitfalls to ensure that projects are delivered on time and on budget.\r\n<p style=\"padding-left: 30px;\">• Engineering transformation\r\n• Engineering tools and processes\r\n• Software engineering\r\n• Deployment options, hardware, systems integration\r\n• Tuning, optimization, hardening and monitoring\r\n• Data continuity, normalization,\r\n• Real-time system data integration</p>\r\n&nbsp;\r\n<h3>| OPERATIONS |</h3>\r\nProduction issues keeping you up at night?  Whether you are in production now or upcoming an AgilData expert can mesh into your technical team to assess your current deployment’s ability to meet the ongoing needs of your business.\r\n<p style=\"padding-left: 30px;\">• Database Administration\r\n• DevOps Engineer\r\n• Deployment tools and processes\r\n• Performance assessment and optimization\r\n• Application Design, Development, QA, Testing\r\n• Application Development\r\n• Data Warehousing</p>\r\n&nbsp;\r\n<h3>| ENGAGEMENT |</h3>\r\nProject durations vary upon your needs.  We’ve kept it simple for you to meter your cost in small increments to ensure you are getting the most out of our services relative to your needs and timeline.  Contact us below to discover how easy it is to work with AgilData.\r\n<p style=\"padding-left: 30px;\">• Discovery Call - 1 hour (No Fee)\r\n• Let’s get to know each other and create alignment\r\n• Kickstart Session - 1 day (Fixed Fee)\r\n• Meetup at your offices to deep dive on the tech and get a report on findings\r\n• Work Cycle - 2 week units (Architect Rate, Engineer Rate)\r\n• Recurring work cycles in simple in two week intervals with exit at any time.</p>\r\n\r\n<h3>Want to chat more about how we can help you? Give us a shout.</h3>\r\n[gravityform id=\"1\" title=\"false\" description=\"false\"]', 'AgilData Technical Consulting', '', 'inherit', 'closed', 'closed', '', '469-revision-v1', '', '', '2015-12-14 22:56:25', '2015-12-15 05:56:25', '', '469', 'http://www.agildata.com/469-revision-v1/', '0', 'revision', '', '0');
INSERT INTO `wpag_posts` VALUES('526', '5', '2015-12-18 12:32:02', '2015-12-18 19:32:02', '<h2>Big Data Applications, Infrastructures and Operations</h2>\r\n<h3>| PLANNING |</h3>\r\nJust getting started or about to commit to a plan?  Let AgilData provide early phase planning services spanning architecture review to development approach.  We have the expertise to ensure your plan-of-record utilizes the best practices of modern data infrastructure deployments with a strong focus on transforming your team’s development practice in time to ensure a successful project.\r\n<p style=\"padding-left: 30px;\">• Solution architecture evaluation and review\r\n• Technology selection\r\n• Engineering transformation\r\n• Data Architecture\r\n• Data Modeling\r\n• Data Format Translation\r\n• RDBMS Schema Design\r\n• Application design, development and testing</p>\r\n\r\n<h2>NEED THIS? CLICK HERE.</h2>\r\n&nbsp;\r\n<h3>| IMPLEMENTATION |</h3>\r\nReal time stream processing and data pipeline development is complex.  AgilData has been there before and will work with your team sharing known best practices, design decisions and reveal potential pitfalls to ensure that projects are delivered on time and on budget.\r\n<p style=\"padding-left: 30px;\">• Engineering transformation\r\n• Engineering tools and processes\r\n• Software engineering\r\n• Deployment options, hardware, systems integration\r\n• Tuning, optimization, hardening and monitoring\r\n• Data continuity, normalization,\r\n• Real-time system data integration</p>\r\n&nbsp;\r\n<h3>| OPERATIONS |</h3>\r\nProduction issues keeping you up at night?  Whether you are in production now or upcoming an AgilData expert can mesh into your technical team to assess your current deployment’s ability to meet the ongoing needs of your business.\r\n<p style=\"padding-left: 30px;\">• Database Administration\r\n• DevOps Engineer\r\n• Deployment tools and processes\r\n• Performance assessment and optimization\r\n• Application Design, Development, QA, Testing\r\n• Application Development\r\n• Data Warehousing</p>\r\n&nbsp;\r\n<h3>| ENGAGEMENT |</h3>\r\nProject durations vary upon your needs.  We’ve kept it simple for you to meter your cost in small increments to ensure you are getting the most out of our services relative to your needs and timeline.  Contact us below to discover how easy it is to work with AgilData.\r\n<p style=\"padding-left: 30px;\">• Discovery Call - 1 hour (No Fee)\r\n• Let’s get to know each other and create alignment\r\n• Kickstart Session - 1 day (Fixed Fee)\r\n• Meetup at your offices to deep dive on the tech and get a report on findings\r\n• Work Cycle - 2 week units (Architect Rate, Engineer Rate)\r\n• Recurring work cycles in simple in two week intervals with exit at any time.</p>\r\n\r\n<h3></h3>\r\n<h2>Want to chat more about how we can help?\r\nGive us a shout.</h2>\r\n[gravityform id=\"1\" title=\"false\" description=\"false\"]', 'AgilData Technical Consulting', '', 'inherit', 'closed', 'closed', '', '469-revision-v1', '', '', '2015-12-18 12:32:02', '2015-12-18 19:32:02', '', '469', 'http://www.agildata.com/469-revision-v1/', '0', 'revision', '', '0');
INSERT INTO `wpag_posts` VALUES('524', '5', '2015-12-14 22:57:07', '2015-12-15 05:57:07', '<h2>Big Data Applications, Infrastructures and Operations</h2>\r\n<h3>| PLANNING |</h3>\r\nJust getting started or about to commit to a plan?  Let AgilData provide early phase planning services spanning architecture review to development approach.  We have the expertise to ensure your plan-of-record utilizes the best practices of modern data infrastructure deployments with a strong focus on transforming your team’s development practice in time to ensure a successful project.\r\n<p style=\"padding-left: 30px;\">• Solution architecture evaluation and review\r\n• Technology selection\r\n• Engineering transformation\r\n• Data Architecture\r\n• Data Modeling\r\n• Data Format Translation\r\n• RDBMS Schema Design\r\n• Application design, development and testing</p>\r\n&nbsp;\r\n<h3>| IMPLEMENTATION |</h3>\r\nReal time stream processing and data pipeline development is complex.  AgilData has been there before and will work with your team sharing known best practices, design decisions and reveal potential pitfalls to ensure that projects are delivered on time and on budget.\r\n<p style=\"padding-left: 30px;\">• Engineering transformation\r\n• Engineering tools and processes\r\n• Software engineering\r\n• Deployment options, hardware, systems integration\r\n• Tuning, optimization, hardening and monitoring\r\n• Data continuity, normalization,\r\n• Real-time system data integration</p>\r\n&nbsp;\r\n<h3>| OPERATIONS |</h3>\r\nProduction issues keeping you up at night?  Whether you are in production now or upcoming an AgilData expert can mesh into your technical team to assess your current deployment’s ability to meet the ongoing needs of your business.\r\n<p style=\"padding-left: 30px;\">• Database Administration\r\n• DevOps Engineer\r\n• Deployment tools and processes\r\n• Performance assessment and optimization\r\n• Application Design, Development, QA, Testing\r\n• Application Development\r\n• Data Warehousing</p>\r\n&nbsp;\r\n<h3>| ENGAGEMENT |</h3>\r\nProject durations vary upon your needs.  We’ve kept it simple for you to meter your cost in small increments to ensure you are getting the most out of our services relative to your needs and timeline.  Contact us below to discover how easy it is to work with AgilData.\r\n<p style=\"padding-left: 30px;\">• Discovery Call - 1 hour (No Fee)\r\n• Let’s get to know each other and create alignment\r\n• Kickstart Session - 1 day (Fixed Fee)\r\n• Meetup at your offices to deep dive on the tech and get a report on findings\r\n• Work Cycle - 2 week units (Architect Rate, Engineer Rate)\r\n• Recurring work cycles in simple in two week intervals with exit at any time.</p>\r\n\r\n<h3></h3>\r\n<h2>Want to chat more about how we can help you? Give us a shout.</h2>\r\n[gravityform id=\"1\" title=\"false\" description=\"false\"]', 'AgilData Technical Consulting', '', 'inherit', 'closed', 'closed', '', '469-revision-v1', '', '', '2015-12-14 22:57:07', '2015-12-15 05:57:07', '', '469', 'http://www.agildata.com/469-revision-v1/', '0', 'revision', '', '0');
INSERT INTO `wpag_posts` VALUES('525', '5', '2015-12-14 22:58:00', '2015-12-15 05:58:00', '<h2>Big Data Applications, Infrastructures and Operations</h2>\r\n<h3>| PLANNING |</h3>\r\nJust getting started or about to commit to a plan?  Let AgilData provide early phase planning services spanning architecture review to development approach.  We have the expertise to ensure your plan-of-record utilizes the best practices of modern data infrastructure deployments with a strong focus on transforming your team’s development practice in time to ensure a successful project.\r\n<p style=\"padding-left: 30px;\">• Solution architecture evaluation and review\r\n• Technology selection\r\n• Engineering transformation\r\n• Data Architecture\r\n• Data Modeling\r\n• Data Format Translation\r\n• RDBMS Schema Design\r\n• Application design, development and testing</p>\r\n&nbsp;\r\n<h3>| IMPLEMENTATION |</h3>\r\nReal time stream processing and data pipeline development is complex.  AgilData has been there before and will work with your team sharing known best practices, design decisions and reveal potential pitfalls to ensure that projects are delivered on time and on budget.\r\n<p style=\"padding-left: 30px;\">• Engineering transformation\r\n• Engineering tools and processes\r\n• Software engineering\r\n• Deployment options, hardware, systems integration\r\n• Tuning, optimization, hardening and monitoring\r\n• Data continuity, normalization,\r\n• Real-time system data integration</p>\r\n&nbsp;\r\n<h3>| OPERATIONS |</h3>\r\nProduction issues keeping you up at night?  Whether you are in production now or upcoming an AgilData expert can mesh into your technical team to assess your current deployment’s ability to meet the ongoing needs of your business.\r\n<p style=\"padding-left: 30px;\">• Database Administration\r\n• DevOps Engineer\r\n• Deployment tools and processes\r\n• Performance assessment and optimization\r\n• Application Design, Development, QA, Testing\r\n• Application Development\r\n• Data Warehousing</p>\r\n&nbsp;\r\n<h3>| ENGAGEMENT |</h3>\r\nProject durations vary upon your needs.  We’ve kept it simple for you to meter your cost in small increments to ensure you are getting the most out of our services relative to your needs and timeline.  Contact us below to discover how easy it is to work with AgilData.\r\n<p style=\"padding-left: 30px;\">• Discovery Call - 1 hour (No Fee)\r\n• Let’s get to know each other and create alignment\r\n• Kickstart Session - 1 day (Fixed Fee)\r\n• Meetup at your offices to deep dive on the tech and get a report on findings\r\n• Work Cycle - 2 week units (Architect Rate, Engineer Rate)\r\n• Recurring work cycles in simple in two week intervals with exit at any time.</p>\r\n\r\n<h3></h3>\r\n<h2>Want to chat more about how we can help?\r\nGive us a shout.</h2>\r\n[gravityform id=\"1\" title=\"false\" description=\"false\"]', 'AgilData Technical Consulting', '', 'inherit', 'closed', 'closed', '', '469-revision-v1', '', '', '2015-12-14 22:58:00', '2015-12-15 05:58:00', '', '469', 'http://www.agildata.com/469-revision-v1/', '0', 'revision', '', '0');
INSERT INTO `wpag_posts` VALUES('528', '5', '2015-12-18 12:32:26', '2015-12-18 19:32:26', '<h2>Big Data Applications, Infrastructures and Operations</h2>\r\n<h3>| PLANNING |</h3>\r\nJust getting started or about to commit to a plan?  Let AgilData provide early phase planning services spanning architecture review to development approach.  We have the expertise to ensure your plan-of-record utilizes the best practices of modern data infrastructure deployments with a strong focus on transforming your team’s development practice in time to ensure a successful project.\r\n<p style=\"padding-left: 30px;\">• Solution architecture evaluation and review\r\n• Technology selection\r\n• Engineering transformation\r\n• Data Architecture\r\n• Data Modeling\r\n• Data Format Translation\r\n• RDBMS Schema Design\r\n• Application design, development and testing</p>\r\n\r\n<h4>NEED THIS? CLICK HERE.</h4>\r\n&nbsp;\r\n<h3>| IMPLEMENTATION |</h3>\r\nReal time stream processing and data pipeline development is complex.  AgilData has been there before and will work with your team sharing known best practices, design decisions and reveal potential pitfalls to ensure that projects are delivered on time and on budget.\r\n<p style=\"padding-left: 30px;\">• Engineering transformation\r\n• Engineering tools and processes\r\n• Software engineering\r\n• Deployment options, hardware, systems integration\r\n• Tuning, optimization, hardening and monitoring\r\n• Data continuity, normalization,\r\n• Real-time system data integration</p>\r\n&nbsp;\r\n<h3>| OPERATIONS |</h3>\r\nProduction issues keeping you up at night?  Whether you are in production now or upcoming an AgilData expert can mesh into your technical team to assess your current deployment’s ability to meet the ongoing needs of your business.\r\n<p style=\"padding-left: 30px;\">• Database Administration\r\n• DevOps Engineer\r\n• Deployment tools and processes\r\n• Performance assessment and optimization\r\n• Application Design, Development, QA, Testing\r\n• Application Development\r\n• Data Warehousing</p>\r\n&nbsp;\r\n<h3>| ENGAGEMENT |</h3>\r\nProject durations vary upon your needs.  We’ve kept it simple for you to meter your cost in small increments to ensure you are getting the most out of our services relative to your needs and timeline.  Contact us below to discover how easy it is to work with AgilData.\r\n<p style=\"padding-left: 30px;\">• Discovery Call - 1 hour (No Fee)\r\n• Let’s get to know each other and create alignment\r\n• Kickstart Session - 1 day (Fixed Fee)\r\n• Meetup at your offices to deep dive on the tech and get a report on findings\r\n• Work Cycle - 2 week units (Architect Rate, Engineer Rate)\r\n• Recurring work cycles in simple in two week intervals with exit at any time.</p>\r\n\r\n<h3></h3>\r\n<h2>Want to chat more about how we can help?\r\nGive us a shout.</h2>\r\n[gravityform id=\"1\" title=\"false\" description=\"false\"]', 'AgilData Technical Consulting', '', 'inherit', 'closed', 'closed', '', '469-revision-v1', '', '', '2015-12-18 12:32:26', '2015-12-18 19:32:26', '', '469', 'http://www.agildata.com/469-revision-v1/', '0', 'revision', '', '0');
INSERT INTO `wpag_posts` VALUES('530', '5', '2015-12-18 12:38:14', '2015-12-18 19:38:14', '', 'AD Need This Click Here', '', 'inherit', 'open', 'closed', '', 'ad-need-this-click-here', '', '', '2015-12-18 12:38:14', '2015-12-18 19:38:14', '', '469', 'http://www.agildata.com/wp-content/uploads/2015/12/AD-Need-This-Click-Here.jpg', '0', 'attachment', 'image/jpeg', '0');
INSERT INTO `wpag_posts` VALUES('531', '5', '2015-12-18 12:39:23', '2015-12-18 19:39:23', '<h2>Big Data Applications, Infrastructures and Operations</h2>\r\n<h3>| PLANNING |</h3>\r\nJust getting started or about to commit to a plan?  Let AgilData provide early phase planning services spanning architecture review to development approach.  We have the expertise to ensure your plan-of-record utilizes the best practices of modern data infrastructure deployments with a strong focus on transforming your team’s development practice in time to ensure a successful project.\r\n<p style=\"padding-left: 30px;\">• Solution architecture evaluation and review\r\n• Technology selection\r\n• Engineering transformation\r\n• Data Architecture\r\n• Data Modeling\r\n• Data Format Translation\r\n• RDBMS Schema Design\r\n• Application design, development and testing</p>\r\n\r\n<h4><a href=\"http://www.agildata.com/wp-content/uploads/2015/12/AD-Need-This-Click-Here.jpg\"><img class=\"alignnone size-full wp-image-530\" src=\"http://www.agildata.com/wp-content/uploads/2015/12/AD-Need-This-Click-Here.jpg\" alt=\"AD Need This Click Here\" width=\"232\" height=\"64\" /></a></h4>\r\n&nbsp;\r\n<h3>| IMPLEMENTATION |</h3>\r\nReal time stream processing and data pipeline development is complex.  AgilData has been there before and will work with your team sharing known best practices, design decisions and reveal potential pitfalls to ensure that projects are delivered on time and on budget.\r\n<p style=\"padding-left: 30px;\">• Engineering transformation\r\n• Engineering tools and processes\r\n• Software engineering\r\n• Deployment options, hardware, systems integration\r\n• Tuning, optimization, hardening and monitoring\r\n• Data continuity, normalization,\r\n• Real-time system data integration</p>\r\n&nbsp;\r\n<h3>| OPERATIONS |</h3>\r\nProduction issues keeping you up at night?  Whether you are in production now or upcoming an AgilData expert can mesh into your technical team to assess your current deployment’s ability to meet the ongoing needs of your business.\r\n<p style=\"padding-left: 30px;\">• Database Administration\r\n• DevOps Engineer\r\n• Deployment tools and processes\r\n• Performance assessment and optimization\r\n• Application Design, Development, QA, Testing\r\n• Application Development\r\n• Data Warehousing</p>\r\n&nbsp;\r\n<h3>| ENGAGEMENT |</h3>\r\nProject durations vary upon your needs.  We’ve kept it simple for you to meter your cost in small increments to ensure you are getting the most out of our services relative to your needs and timeline.  Contact us below to discover how easy it is to work with AgilData.\r\n<p style=\"padding-left: 30px;\">• Discovery Call - 1 hour (No Fee)\r\n• Let’s get to know each other and create alignment\r\n• Kickstart Session - 1 day (Fixed Fee)\r\n• Meetup at your offices to deep dive on the tech and get a report on findings\r\n• Work Cycle - 2 week units (Architect Rate, Engineer Rate)\r\n• Recurring work cycles in simple in two week intervals with exit at any time.</p>\r\n\r\n<h3></h3>\r\n<h2>Want to chat more about how we can help?\r\nGive us a shout.</h2>\r\n[gravityform id=\"1\" title=\"false\" description=\"false\"]', 'AgilData Technical Consulting', '', 'inherit', 'closed', 'closed', '', '469-revision-v1', '', '', '2015-12-18 12:39:23', '2015-12-18 19:39:23', '', '469', 'http://www.agildata.com/469-revision-v1/', '0', 'revision', '', '0');
INSERT INTO `wpag_posts` VALUES('535', '5', '2015-12-18 12:45:22', '2015-12-18 19:45:22', '<h2>Big Data Applications, Infrastructures and Operations</h2>\r\n<h3>| PLANNING |</h3>\r\nJust getting started or about to commit to a plan?  Let AgilData provide early phase planning services spanning architecture review to development approach.  We have the expertise to ensure your plan-of-record utilizes the best practices of modern data infrastructure deployments with a strong focus on transforming your team’s development practice in time to ensure a successful project.\r\n<p style=\"padding-left: 30px;\">• Solution architecture evaluation and review\r\n• Technology selection\r\n• Engineering transformation\r\n• Data Architecture\r\n• Data Modeling\r\n• Data Format Translation\r\n• RDBMS Schema Design\r\n• Application design, development and testing</p>\r\n\r\n<h4><a href=\"http://www.agildata.com/big-data-technical-consulting-request/\"><img class=\"alignnone size-full wp-image-530\" src=\"http://www.agildata.com/wp-content/uploads/2015/12/AD-Need-This-Click-Here.jpg\" alt=\"AD Need This Click Here\" width=\"232\" height=\"64\" /></a></h4>\r\n&nbsp;\r\n<h3>| IMPLEMENTATION |</h3>\r\nReal time stream processing and data pipeline development is complex.  AgilData has been there before and will work with your team sharing known best practices, design decisions and reveal potential pitfalls to ensure that projects are delivered on time and on budget.\r\n<p style=\"padding-left: 30px;\">• Engineering transformation\r\n• Engineering tools and processes\r\n• Software engineering\r\n• Deployment options, hardware, systems integration\r\n• Tuning, optimization, hardening and monitoring\r\n• Data continuity, normalization,\r\n• Real-time system data integration</p>\r\n\r\n<h4><a href=\"http://www.agildata.com/big-data-technical-consulting-request/\"><img class=\"alignnone size-full wp-image-530\" src=\"http://www.agildata.com/wp-content/uploads/2015/12/AD-Need-This-Click-Here.jpg\" alt=\"AD Need This Click Here\" width=\"232\" height=\"64\" /></a></h4>\r\n&nbsp;\r\n<h3>| OPERATIONS |</h3>\r\nProduction issues keeping you up at night?  Whether you are in production now or upcoming an AgilData expert can mesh into your technical team to assess your current deployment’s ability to meet the ongoing needs of your business.\r\n<p style=\"padding-left: 30px;\">• Database Administration\r\n• DevOps Engineer\r\n• Deployment tools and processes\r\n• Performance assessment and optimization\r\n• Application Design, Development, QA, Testing\r\n• Application Development\r\n• Data Warehousing</p>\r\n\r\n<h4><a href=\"http://www.agildata.com/big-data-technical-consulting-request/\"><img class=\"alignnone size-full wp-image-530\" src=\"http://www.agildata.com/wp-content/uploads/2015/12/AD-Need-This-Click-Here.jpg\" alt=\"AD Need This Click Here\" width=\"232\" height=\"64\" /></a></h4>\r\n&nbsp;\r\n<h3>| ENGAGEMENT |</h3>\r\nProject durations vary upon your needs.  We’ve kept it simple for you to meter your cost in small increments to ensure you are getting the most out of our services relative to your needs and timeline.  Contact us below to discover how easy it is to work with AgilData.\r\n<p style=\"padding-left: 30px;\">• Discovery Call - 1 hour (No Fee)\r\n• Let’s get to know each other and create alignment\r\n• Kickstart Session - 1 day (Fixed Fee)\r\n• Meetup at your offices to deep dive on the tech and get a report on findings\r\n• Work Cycle - 2 week units (Architect Rate, Engineer Rate)\r\n• Recurring work cycles in simple in two week intervals with exit at any time.</p>\r\n\r\n<h3></h3>\r\n<h2>Want to chat more about how we can help?\r\nGive us a shout.</h2>\r\n[gravityform id=\"4\" title=\"false\" description=\"false\"]', 'AgilData Technical Consulting', '', 'inherit', 'closed', 'closed', '', '469-revision-v1', '', '', '2015-12-18 12:45:22', '2015-12-18 19:45:22', '', '469', 'http://www.agildata.com/469-revision-v1/', '0', 'revision', '', '0');
INSERT INTO `wpag_posts` VALUES('532', '5', '2015-12-18 12:40:55', '2015-12-18 19:40:55', '<h2>Big Data Applications, Infrastructures and Operations</h2>\r\n<h3>| PLANNING |</h3>\r\nJust getting started or about to commit to a plan?  Let AgilData provide early phase planning services spanning architecture review to development approach.  We have the expertise to ensure your plan-of-record utilizes the best practices of modern data infrastructure deployments with a strong focus on transforming your team’s development practice in time to ensure a successful project.\r\n<p style=\"padding-left: 30px;\">• Solution architecture evaluation and review\r\n• Technology selection\r\n• Engineering transformation\r\n• Data Architecture\r\n• Data Modeling\r\n• Data Format Translation\r\n• RDBMS Schema Design\r\n• Application design, development and testing</p>\r\n\r\n<h4><a href=\"http://www.agildata.com/wp-content/uploads/2015/12/AD-Need-This-Click-Here.jpg\"><img class=\"alignnone size-full wp-image-530\" src=\"http://www.agildata.com/wp-content/uploads/2015/12/AD-Need-This-Click-Here.jpg\" alt=\"AD Need This Click Here\" width=\"232\" height=\"64\" /></a></h4>\r\n&nbsp;\r\n<h3>| IMPLEMENTATION |</h3>\r\nReal time stream processing and data pipeline development is complex.  AgilData has been there before and will work with your team sharing known best practices, design decisions and reveal potential pitfalls to ensure that projects are delivered on time and on budget.\r\n<p style=\"padding-left: 30px;\">• Engineering transformation\r\n• Engineering tools and processes\r\n• Software engineering\r\n• Deployment options, hardware, systems integration\r\n• Tuning, optimization, hardening and monitoring\r\n• Data continuity, normalization,\r\n• Real-time system data integration</p>\r\n\r\n<h4><a href=\"http://www.agildata.com/wp-content/uploads/2015/12/AD-Need-This-Click-Here.jpg\"><img class=\"alignnone size-full wp-image-530\" src=\"http://www.agildata.com/wp-content/uploads/2015/12/AD-Need-This-Click-Here.jpg\" alt=\"AD Need This Click Here\" width=\"232\" height=\"64\" /></a></h4>\r\n&nbsp;\r\n<h3>| OPERATIONS |</h3>\r\nProduction issues keeping you up at night?  Whether you are in production now or upcoming an AgilData expert can mesh into your technical team to assess your current deployment’s ability to meet the ongoing needs of your business.\r\n<p style=\"padding-left: 30px;\">• Database Administration\r\n• DevOps Engineer\r\n• Deployment tools and processes\r\n• Performance assessment and optimization\r\n• Application Design, Development, QA, Testing\r\n• Application Development\r\n• Data Warehousing</p>\r\n\r\n<h4><a href=\"http://www.agildata.com/wp-content/uploads/2015/12/AD-Need-This-Click-Here.jpg\"><img class=\"alignnone size-full wp-image-530\" src=\"http://www.agildata.com/wp-content/uploads/2015/12/AD-Need-This-Click-Here.jpg\" alt=\"AD Need This Click Here\" width=\"232\" height=\"64\" /></a></h4>\r\n&nbsp;\r\n<h3>| ENGAGEMENT |</h3>\r\nProject durations vary upon your needs.  We’ve kept it simple for you to meter your cost in small increments to ensure you are getting the most out of our services relative to your needs and timeline.  Contact us below to discover how easy it is to work with AgilData.\r\n<p style=\"padding-left: 30px;\">• Discovery Call - 1 hour (No Fee)\r\n• Let’s get to know each other and create alignment\r\n• Kickstart Session - 1 day (Fixed Fee)\r\n• Meetup at your offices to deep dive on the tech and get a report on findings\r\n• Work Cycle - 2 week units (Architect Rate, Engineer Rate)\r\n• Recurring work cycles in simple in two week intervals with exit at any time.</p>\r\n\r\n<h3></h3>\r\n<h2>Want to chat more about how we can help?\r\nGive us a shout.</h2>\r\n[gravityform id=\"4\" title=\"false\" description=\"false\"]', 'AgilData Technical Consulting', '', 'inherit', 'closed', 'closed', '', '469-revision-v1', '', '', '2015-12-18 12:40:55', '2015-12-18 19:40:55', '', '469', 'http://www.agildata.com/469-revision-v1/', '0', 'revision', '', '0');
INSERT INTO `wpag_posts` VALUES('533', '5', '2015-12-18 12:41:56', '2015-12-18 19:41:56', 'We are here to help with your big data technical consulting needs. Fill out a bit of information for us, and we will be in touch with you shortly.\r\n<h3>Big Data Technical Consulting Request</h3>\r\n[gravityform id=\"4\" title=\"false\" description=\"false\"]', 'Big Data Technical Consulting Request', '', 'publish', 'closed', 'closed', '', 'big-data-technical-consulting-request', '', '', '2015-12-18 13:52:24', '2015-12-18 20:52:24', '', '0', 'http://www.agildata.com/?page_id=533', '0', 'page', '', '0');
INSERT INTO `wpag_posts` VALUES('534', '5', '2015-12-18 12:41:56', '2015-12-18 19:41:56', '&nbsp;\r\n\r\n[gravityform id=\"4\" title=\"false\" description=\"false\"]', 'Big Data Technical Consulting Request', '', 'inherit', 'closed', 'closed', '', '533-revision-v1', '', '', '2015-12-18 12:41:56', '2015-12-18 19:41:56', '', '533', 'http://www.agildata.com/533-revision-v1/', '0', 'revision', '', '0');
INSERT INTO `wpag_posts` VALUES('536', '5', '2015-12-18 12:46:43', '2015-12-18 19:46:43', '<h2>Big Data Applications, Infrastructures and Operations</h2>\r\n<h3>\r\n| PLANNING |</h3>\r\nJust getting started or about to commit to a plan?  Let AgilData provide early phase planning services spanning architecture review to development approach.  We have the expertise to ensure your plan-of-record utilizes the best practices of modern data infrastructure deployments with a strong focus on transforming your team’s development practice in time to ensure a successful project.\r\n<p style=\"padding-left: 30px;\">• Solution architecture evaluation and review\r\n• Technology selection\r\n• Engineering transformation\r\n• Data Architecture\r\n• Data Modeling\r\n• Data Format Translation\r\n• RDBMS Schema Design\r\n• Application design, development and testing</p>\r\n\r\n<h4><a href=\"http://www.agildata.com/big-data-technical-consulting-request/\"><img class=\"alignnone size-full wp-image-530\" src=\"http://www.agildata.com/wp-content/uploads/2015/12/AD-Need-This-Click-Here.jpg\" alt=\"AD Need This Click Here\" width=\"232\" height=\"64\" /></a></h4>\r\n&nbsp;\r\n<h3>| IMPLEMENTATION |</h3>\r\nReal time stream processing and data pipeline development is complex.  AgilData has been there before and will work with your team sharing known best practices, design decisions and reveal potential pitfalls to ensure that projects are delivered on time and on budget.\r\n<p style=\"padding-left: 30px;\">• Engineering transformation\r\n• Engineering tools and processes\r\n• Software engineering\r\n• Deployment options, hardware, systems integration\r\n• Tuning, optimization, hardening and monitoring\r\n• Data continuity, normalization,\r\n• Real-time system data integration</p>\r\n\r\n<h4><a href=\"http://www.agildata.com/big-data-technical-consulting-request/\"><img class=\"alignnone size-full wp-image-530\" src=\"http://www.agildata.com/wp-content/uploads/2015/12/AD-Need-This-Click-Here.jpg\" alt=\"AD Need This Click Here\" width=\"232\" height=\"64\" /></a></h4>\r\n&nbsp;\r\n<h3>| OPERATIONS |</h3>\r\nProduction issues keeping you up at night?  Whether you are in production now or upcoming an AgilData expert can mesh into your technical team to assess your current deployment’s ability to meet the ongoing needs of your business.\r\n<p style=\"padding-left: 30px;\">• Database Administration\r\n• DevOps Engineer\r\n• Deployment tools and processes\r\n• Performance assessment and optimization\r\n• Application Design, Development, QA, Testing\r\n• Application Development\r\n• Data Warehousing</p>\r\n\r\n<h4><a href=\"http://www.agildata.com/big-data-technical-consulting-request/\"><img class=\"alignnone size-full wp-image-530\" src=\"http://www.agildata.com/wp-content/uploads/2015/12/AD-Need-This-Click-Here.jpg\" alt=\"AD Need This Click Here\" width=\"232\" height=\"64\" /></a></h4>\r\n&nbsp;\r\n<h3>| ENGAGEMENT |</h3>\r\nProject durations vary upon your needs.  We’ve kept it simple for you to meter your cost in small increments to ensure you are getting the most out of our services relative to your needs and timeline.  Contact us below to discover how easy it is to work with AgilData.\r\n<p style=\"padding-left: 30px;\">• Discovery Call - 1 hour (No Fee)\r\n• Let’s get to know each other and create alignment\r\n• Kickstart Session - 1 day (Fixed Fee)\r\n• Meetup at your offices to deep dive on the tech and get a report on findings\r\n• Work Cycle - 2 week units (Architect Rate, Engineer Rate)\r\n• Recurring work cycles in simple in two week intervals with exit at any time.</p>\r\n\r\n<h3></h3>\r\n<h4><a href=\"http://www.agildata.com/big-data-technical-consulting-request/\"><img class=\"alignnone size-full wp-image-530\" src=\"http://www.agildata.com/wp-content/uploads/2015/12/AD-Need-This-Click-Here.jpg\" alt=\"AD Need This Click Here\" width=\"232\" height=\"64\" /></a></h4>\r\n&nbsp;\r\n<h2>Want to chat more about how we can help?\r\nGive us a shout.</h2>\r\n[gravityform id=\"4\" title=\"false\" description=\"false\"]', 'AgilData Technical Consulting', '', 'inherit', 'closed', 'closed', '', '469-revision-v1', '', '', '2015-12-18 12:46:43', '2015-12-18 19:46:43', '', '469', 'http://www.agildata.com/469-revision-v1/', '0', 'revision', '', '0');
INSERT INTO `wpag_posts` VALUES('537', '5', '2015-12-18 13:53:59', '2015-12-18 20:53:59', 'We are here to help with your big data technical consulting needs. Fill out a bit of information for us, and we will be in touch with you shortly.\r\n<h3>Big Data Technical Consulting Request</h3>\r\n[gravityform id=\"4\" title=\"false\" description=\"false\"]', 'Big Data Technical Consulting Request', '', 'inherit', 'closed', 'closed', '', '533-autosave-v1', '', '', '2015-12-18 13:53:59', '2015-12-18 20:53:59', '', '533', 'http://www.agildata.com/533-autosave-v1/', '0', 'revision', '', '0');
INSERT INTO `wpag_posts` VALUES('538', '5', '2015-12-18 12:56:11', '2015-12-18 19:56:11', 'We are here to help. Fill out a bit of information for us, and tell us what hurts, and we will be in touch with you shortly.\r\n\r\n[gravityform id=\"4\" title=\"false\" description=\"false\"]', 'Big Data Technical Consulting Request', '', 'inherit', 'closed', 'closed', '', '533-revision-v1', '', '', '2015-12-18 12:56:11', '2015-12-18 19:56:11', '', '533', 'http://www.agildata.com/533-revision-v1/', '0', 'revision', '', '0');
INSERT INTO `wpag_posts` VALUES('539', '5', '2015-12-18 12:56:42', '2015-12-18 19:56:42', 'We are here to help. Fill out a bit of information for us, and we will be in touch with you shortly.\r\n\r\n[gravityform id=\"4\" title=\"false\" description=\"false\"]', 'Big Data Technical Consulting Request', '', 'inherit', 'closed', 'closed', '', '533-revision-v1', '', '', '2015-12-18 12:56:42', '2015-12-18 19:56:42', '', '533', 'http://www.agildata.com/533-revision-v1/', '0', 'revision', '', '0');
INSERT INTO `wpag_posts` VALUES('540', '5', '2015-12-18 13:34:29', '2015-12-18 20:34:29', '<h2>Big Data Applications, Infrastructures and Operations</h2>\r\n<h3>| PLANNING |</h3>\r\nJust getting started or about to commit to a plan?  Let AgilData provide early phase technical consulting and planning services spanning architecture review to development approach.  We have the expertise to ensure your plan-of-record utilizes the best practices of modern data infrastructure deployments with a strong focus on transforming your team’s development practice in time to ensure a successful project.\r\n<p style=\"padding-left: 30px;\">• Solution architecture evaluation and review\r\n• Technology selection\r\n• Engineering transformation\r\n• Data Architecture\r\n• Data Modeling\r\n• Data Format Translation\r\n• RDBMS Schema Design\r\n• Application design, development and testing</p>\r\n\r\n<h4><a href=\"http://www.agildata.com/big-data-technical-consulting-request/\"><img class=\"alignnone size-full wp-image-530\" src=\"http://www.agildata.com/wp-content/uploads/2015/12/AD-Need-This-Click-Here.jpg\" alt=\"AD Need This Click Here\" width=\"232\" height=\"64\" /></a></h4>\r\n&nbsp;\r\n<h3>| IMPLEMENTATION |</h3>\r\nReal time stream processing and data pipeline development is complex.  AgilData has been there before and will work with your team sharing known best practices, design decisions and reveal potential pitfalls to ensure that projects are delivered on time and on budget.\r\n<p style=\"padding-left: 30px;\">• Engineering transformation\r\n• Engineering tools and processes\r\n• Software engineering\r\n• Deployment options, hardware, systems integration\r\n• Tuning, optimization, hardening and monitoring\r\n• Data continuity, normalization,\r\n• Real-time system data integration</p>\r\n\r\n<h4><a href=\"http://www.agildata.com/big-data-technical-consulting-request/\"><img class=\"alignnone size-full wp-image-530\" src=\"http://www.agildata.com/wp-content/uploads/2015/12/AD-Need-This-Click-Here.jpg\" alt=\"AD Need This Click Here\" width=\"232\" height=\"64\" /></a></h4>\r\n&nbsp;\r\n<h3>| OPERATIONS |</h3>\r\nProduction issues keeping you up at night?  Whether you are in production now or upcoming an AgilData expert can mesh into your technical team to assess your current deployment’s ability to meet the ongoing needs of your business.\r\n<p style=\"padding-left: 30px;\">• Database Administration\r\n• DevOps Engineer\r\n• Deployment tools and processes\r\n• Performance assessment and optimization\r\n• Application Design, Development, QA, Testing\r\n• Application Development\r\n• Data Warehousing</p>\r\n\r\n<h4><a href=\"http://www.agildata.com/big-data-technical-consulting-request/\"><img class=\"alignnone size-full wp-image-530\" src=\"http://www.agildata.com/wp-content/uploads/2015/12/AD-Need-This-Click-Here.jpg\" alt=\"AD Need This Click Here\" width=\"232\" height=\"64\" /></a></h4>\r\n&nbsp;\r\n<h3>| ENGAGEMENT |</h3>\r\nProject durations vary upon your needs.  We’ve kept it simple for you to meter your cost in small increments to ensure you are getting the most out of our technical consulting services relative to your needs and timeline.  Contact us below to discover how easy it is to work with AgilData.\r\n<p style=\"padding-left: 30px;\">• Discovery Call - 1 hour (No Fee)\r\n• Let’s get to know each other and create alignment\r\n• Kickstart Session - 1 day (Fixed Fee)\r\n• Meetup at your offices to deep dive on the tech and get a report on findings\r\n• Work Cycle - 2 week units (Architect Rate, Engineer Rate)\r\n• Recurring work cycles in simple in two week intervals with exit at any time.</p>\r\n\r\n<h3></h3>\r\n<h4><a href=\"http://www.agildata.com/big-data-technical-consulting-request/\"><img class=\"alignnone size-full wp-image-530\" src=\"http://www.agildata.com/wp-content/uploads/2015/12/AD-Need-This-Click-Here.jpg\" alt=\"AD Need This Click Here\" width=\"232\" height=\"64\" /></a></h4>\r\n&nbsp;\r\n<h2>Want to chat more about how we can help?\r\nGive us a shout.</h2>\r\n[gravityform id=\"4\" title=\"false\" description=\"false\"]', 'AgilData Technical Consulting', '', 'inherit', 'closed', 'closed', '', '469-revision-v1', '', '', '2015-12-18 13:34:29', '2015-12-18 20:34:29', '', '469', 'http://www.agildata.com/469-revision-v1/', '0', 'revision', '', '0');
INSERT INTO `wpag_posts` VALUES('541', '5', '2015-12-18 13:49:37', '2015-12-18 20:49:37', 'We are here to help with your big data technical consulting needs. Fill out a bit of information for us, and we will be in touch with you shortly.\r\n\r\n[gravityform id=\"4\" title=\"false\" description=\"false\"]', 'Big Data Technical Consulting Request', '', 'inherit', 'closed', 'closed', '', '533-revision-v1', '', '', '2015-12-18 13:49:37', '2015-12-18 20:49:37', '', '533', 'http://www.agildata.com/533-revision-v1/', '0', 'revision', '', '0');
INSERT INTO `wpag_posts` VALUES('542', '5', '2015-12-18 13:52:24', '2015-12-18 20:52:24', 'We are here to help with your big data technical consulting needs. Fill out a bit of information for us, and we will be in touch with you shortly.\r\n<h3>Big Data Technical Consulting Request</h3>\r\n[gravityform id=\"4\" title=\"false\" description=\"false\"]', 'Big Data Technical Consulting Request', '', 'inherit', 'closed', 'closed', '', '533-revision-v1', '', '', '2015-12-18 13:52:24', '2015-12-18 20:52:24', '', '533', 'http://www.agildata.com/533-revision-v1/', '0', 'revision', '', '0');
INSERT INTO `wpag_posts` VALUES('543', '9', '2015-12-21 11:50:18', '0000-00-00 00:00:00', '', 'Auto Draft', '', 'auto-draft', 'open', 'open', '', '', '', '', '2015-12-21 11:50:18', '0000-00-00 00:00:00', '', '0', 'http://www.agildata.com/?p=543', '0', 'post', '', '0');
/*!40000 ALTER TABLE `wpag_posts` ENABLE KEYS */;
